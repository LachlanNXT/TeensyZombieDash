
solution.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000082  00800100  00000eec  00000f80  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000eec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000204  00800182  00800182  00001002  2**0
                  ALLOC
  3 .debug_aranges 000001d8  00000000  00000000  00001002  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000329  00000000  00000000  000011da  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001fb2  00000000  00000000  00001503  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ed9  00000000  00000000  000034b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001510  00000000  00000000  0000438e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000270  00000000  00000000  000058a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005ca  00000000  00000000  00005b10  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001052  00000000  00000000  000060da  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001c0  00000000  00000000  0000712c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
int randInRange(int min, int max) {
	int out = min + rand()%(max+1 - min);
	return out;
}

void seedWithButtonPress() {
   0:	45 c1       	rjmp	.+650    	; 0x28c <__ctors_end>
   2:	00 00       	nop
   4:	5e c1       	rjmp	.+700    	; 0x2c2 <__bad_interrupt>
   6:	00 00       	nop
   8:	5c c1       	rjmp	.+696    	; 0x2c2 <__bad_interrupt>
   a:	00 00       	nop
   c:	5a c1       	rjmp	.+692    	; 0x2c2 <__bad_interrupt>
   e:	00 00       	nop
  10:	58 c1       	rjmp	.+688    	; 0x2c2 <__bad_interrupt>
  12:	00 00       	nop
  14:	56 c1       	rjmp	.+684    	; 0x2c2 <__bad_interrupt>
  16:	00 00       	nop
  18:	54 c1       	rjmp	.+680    	; 0x2c2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	52 c1       	rjmp	.+676    	; 0x2c2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	50 c1       	rjmp	.+672    	; 0x2c2 <__bad_interrupt>
  22:	00 00       	nop
  24:	83 c2       	rjmp	.+1286   	; 0x52c <__vector_9>
  26:	00 00       	nop
  28:	4c c1       	rjmp	.+664    	; 0x2c2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4a c1       	rjmp	.+660    	; 0x2c2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	48 c1       	rjmp	.+656    	; 0x2c2 <__bad_interrupt>
  32:	00 00       	nop
  34:	46 c1       	rjmp	.+652    	; 0x2c2 <__bad_interrupt>
  36:	00 00       	nop
  38:	44 c1       	rjmp	.+648    	; 0x2c2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	42 c1       	rjmp	.+644    	; 0x2c2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	40 c1       	rjmp	.+640    	; 0x2c2 <__bad_interrupt>
  42:	00 00       	nop
  44:	3e c1       	rjmp	.+636    	; 0x2c2 <__bad_interrupt>
  46:	00 00       	nop
  48:	3c c1       	rjmp	.+632    	; 0x2c2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3a c1       	rjmp	.+628    	; 0x2c2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	38 c1       	rjmp	.+624    	; 0x2c2 <__bad_interrupt>
  52:	00 00       	nop
  54:	36 c1       	rjmp	.+620    	; 0x2c2 <__bad_interrupt>
  56:	00 00       	nop
  58:	34 c1       	rjmp	.+616    	; 0x2c2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	32 c1       	rjmp	.+612    	; 0x2c2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	30 c1       	rjmp	.+608    	; 0x2c2 <__bad_interrupt>
  62:	00 00       	nop
  64:	2e c1       	rjmp	.+604    	; 0x2c2 <__bad_interrupt>
  66:	00 00       	nop
  68:	2c c1       	rjmp	.+600    	; 0x2c2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2a c1       	rjmp	.+596    	; 0x2c2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	28 c1       	rjmp	.+592    	; 0x2c2 <__bad_interrupt>
  72:	00 00       	nop
  74:	26 c1       	rjmp	.+588    	; 0x2c2 <__bad_interrupt>
  76:	00 00       	nop
  78:	24 c1       	rjmp	.+584    	; 0x2c2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	22 c1       	rjmp	.+580    	; 0x2c2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	20 c1       	rjmp	.+576    	; 0x2c2 <__bad_interrupt>
  82:	00 00       	nop
  84:	1e c1       	rjmp	.+572    	; 0x2c2 <__bad_interrupt>
  86:	00 00       	nop
  88:	1c c1       	rjmp	.+568    	; 0x2c2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	1a c1       	rjmp	.+564    	; 0x2c2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	18 c1       	rjmp	.+560    	; 0x2c2 <__bad_interrupt>
  92:	00 00       	nop
  94:	16 c1       	rjmp	.+556    	; 0x2c2 <__bad_interrupt>
  96:	00 00       	nop
  98:	14 c1       	rjmp	.+552    	; 0x2c2 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	12 c1       	rjmp	.+548    	; 0x2c2 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	10 c1       	rjmp	.+544    	; 0x2c2 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	0e c1       	rjmp	.+540    	; 0x2c2 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	0c c1       	rjmp	.+536    	; 0x2c2 <__bad_interrupt>
  aa:	00 00       	nop

000000ac <ASCII>:
  ac:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
  bc:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  cc:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  dc:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
  ec:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  fc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
 10c:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
 11c:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
 12c:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
 13c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
 14c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
 15c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 16c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 17c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 18c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 19c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 1ac:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 1bc:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 1cc:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
 1dc:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
 1ec:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1fc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 20c:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 21c:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 22c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 23c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 24c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 25c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 26c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 27c:	00 00 41 36 08 00 10 08 08 10 08 78 46 41 46 78     ..A6.......xFAFx

0000028c <__ctors_end>:
 28c:	11 24       	eor	r1, r1
 28e:	1f be       	out	0x3f, r1	; 63
 290:	cf ef       	ldi	r28, 0xFF	; 255
 292:	da e0       	ldi	r29, 0x0A	; 10
 294:	de bf       	out	0x3e, r29	; 62
 296:	cd bf       	out	0x3d, r28	; 61

00000298 <__do_copy_data>:
 298:	11 e0       	ldi	r17, 0x01	; 1
 29a:	a0 e0       	ldi	r26, 0x00	; 0
 29c:	b1 e0       	ldi	r27, 0x01	; 1
 29e:	ec ee       	ldi	r30, 0xEC	; 236
 2a0:	fe e0       	ldi	r31, 0x0E	; 14
 2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <.do_copy_data_start>

000002a4 <.do_copy_data_loop>:
 2a4:	05 90       	lpm	r0, Z+
 2a6:	0d 92       	st	X+, r0

000002a8 <.do_copy_data_start>:
 2a8:	a2 38       	cpi	r26, 0x82	; 130
 2aa:	b1 07       	cpc	r27, r17
 2ac:	d9 f7       	brne	.-10     	; 0x2a4 <.do_copy_data_loop>

000002ae <__do_clear_bss>:
 2ae:	13 e0       	ldi	r17, 0x03	; 3
 2b0:	a2 e8       	ldi	r26, 0x82	; 130
 2b2:	b1 e0       	ldi	r27, 0x01	; 1
 2b4:	01 c0       	rjmp	.+2      	; 0x2b8 <.do_clear_bss_start>

000002b6 <.do_clear_bss_loop>:
 2b6:	1d 92       	st	X+, r1

000002b8 <.do_clear_bss_start>:
 2b8:	a6 38       	cpi	r26, 0x86	; 134
 2ba:	b1 07       	cpc	r27, r17
 2bc:	e1 f7       	brne	.-8      	; 0x2b6 <.do_clear_bss_loop>
 2be:	aa d1       	rcall	.+852    	; 0x614 <main>
 2c0:	13 c6       	rjmp	.+3110   	; 0xee8 <_exit>

000002c2 <__bad_interrupt>:
 2c2:	9e ce       	rjmp	.-708    	; 0x0 <__vectors>

000002c4 <__fixunssfsi>:
 2c4:	ef 92       	push	r14
 2c6:	ff 92       	push	r15
 2c8:	0f 93       	push	r16
 2ca:	1f 93       	push	r17
 2cc:	7b 01       	movw	r14, r22
 2ce:	8c 01       	movw	r16, r24
 2d0:	20 e0       	ldi	r18, 0x00	; 0
 2d2:	30 e0       	ldi	r19, 0x00	; 0
 2d4:	40 e0       	ldi	r20, 0x00	; 0
 2d6:	5f e4       	ldi	r21, 0x4F	; 79
 2d8:	a8 d3       	rcall	.+1872   	; 0xa2a <__gesf2>
 2da:	88 23       	and	r24, r24
 2dc:	7c f0       	brlt	.+30     	; 0x2fc <__fixunssfsi+0x38>
 2de:	c8 01       	movw	r24, r16
 2e0:	b7 01       	movw	r22, r14
 2e2:	20 e0       	ldi	r18, 0x00	; 0
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	40 e0       	ldi	r20, 0x00	; 0
 2e8:	5f e4       	ldi	r21, 0x4F	; 79
 2ea:	84 d2       	rcall	.+1288   	; 0x7f4 <__subsf3>
 2ec:	13 d0       	rcall	.+38     	; 0x314 <__fixsfsi>
 2ee:	9b 01       	movw	r18, r22
 2f0:	ac 01       	movw	r20, r24
 2f2:	20 50       	subi	r18, 0x00	; 0
 2f4:	30 40       	sbci	r19, 0x00	; 0
 2f6:	40 40       	sbci	r20, 0x00	; 0
 2f8:	50 48       	sbci	r21, 0x80	; 128
 2fa:	05 c0       	rjmp	.+10     	; 0x306 <__fixunssfsi+0x42>
 2fc:	c8 01       	movw	r24, r16
 2fe:	b7 01       	movw	r22, r14
 300:	09 d0       	rcall	.+18     	; 0x314 <__fixsfsi>
 302:	9b 01       	movw	r18, r22
 304:	ac 01       	movw	r20, r24
 306:	b9 01       	movw	r22, r18
 308:	ca 01       	movw	r24, r20
 30a:	1f 91       	pop	r17
 30c:	0f 91       	pop	r16
 30e:	ff 90       	pop	r15
 310:	ef 90       	pop	r14
 312:	08 95       	ret

00000314 <__fixsfsi>:
 314:	ac e0       	ldi	r26, 0x0C	; 12
 316:	b0 e0       	ldi	r27, 0x00	; 0
 318:	ef e8       	ldi	r30, 0x8F	; 143
 31a:	f1 e0       	ldi	r31, 0x01	; 1
 31c:	be c5       	rjmp	.+2940   	; 0xe9a <__prologue_saves__+0x20>
 31e:	69 83       	std	Y+1, r22	; 0x01
 320:	7a 83       	std	Y+2, r23	; 0x02
 322:	8b 83       	std	Y+3, r24	; 0x03
 324:	9c 83       	std	Y+4, r25	; 0x04
 326:	ce 01       	movw	r24, r28
 328:	01 96       	adiw	r24, 0x01	; 1
 32a:	be 01       	movw	r22, r28
 32c:	6b 5f       	subi	r22, 0xFB	; 251
 32e:	7f 4f       	sbci	r23, 0xFF	; 255
 330:	42 d0       	rcall	.+132    	; 0x3b6 <__unpack_f>
 332:	8d 81       	ldd	r24, Y+5	; 0x05
 334:	82 30       	cpi	r24, 0x02	; 2
 336:	61 f1       	breq	.+88     	; 0x390 <__fixsfsi+0x7c>
 338:	82 30       	cpi	r24, 0x02	; 2
 33a:	50 f1       	brcs	.+84     	; 0x390 <__fixsfsi+0x7c>
 33c:	84 30       	cpi	r24, 0x04	; 4
 33e:	21 f4       	brne	.+8      	; 0x348 <__fixsfsi+0x34>
 340:	8e 81       	ldd	r24, Y+6	; 0x06
 342:	88 23       	and	r24, r24
 344:	51 f1       	breq	.+84     	; 0x39a <__fixsfsi+0x86>
 346:	2e c0       	rjmp	.+92     	; 0x3a4 <__fixsfsi+0x90>
 348:	2f 81       	ldd	r18, Y+7	; 0x07
 34a:	38 85       	ldd	r19, Y+8	; 0x08
 34c:	37 fd       	sbrc	r19, 7
 34e:	20 c0       	rjmp	.+64     	; 0x390 <__fixsfsi+0x7c>
 350:	6e 81       	ldd	r22, Y+6	; 0x06
 352:	2f 31       	cpi	r18, 0x1F	; 31
 354:	31 05       	cpc	r19, r1
 356:	1c f0       	brlt	.+6      	; 0x35e <__fixsfsi+0x4a>
 358:	66 23       	and	r22, r22
 35a:	f9 f0       	breq	.+62     	; 0x39a <__fixsfsi+0x86>
 35c:	23 c0       	rjmp	.+70     	; 0x3a4 <__fixsfsi+0x90>
 35e:	8e e1       	ldi	r24, 0x1E	; 30
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	82 1b       	sub	r24, r18
 364:	93 0b       	sbc	r25, r19
 366:	29 85       	ldd	r18, Y+9	; 0x09
 368:	3a 85       	ldd	r19, Y+10	; 0x0a
 36a:	4b 85       	ldd	r20, Y+11	; 0x0b
 36c:	5c 85       	ldd	r21, Y+12	; 0x0c
 36e:	04 c0       	rjmp	.+8      	; 0x378 <__fixsfsi+0x64>
 370:	56 95       	lsr	r21
 372:	47 95       	ror	r20
 374:	37 95       	ror	r19
 376:	27 95       	ror	r18
 378:	8a 95       	dec	r24
 37a:	d2 f7       	brpl	.-12     	; 0x370 <__fixsfsi+0x5c>
 37c:	66 23       	and	r22, r22
 37e:	b1 f0       	breq	.+44     	; 0x3ac <__fixsfsi+0x98>
 380:	50 95       	com	r21
 382:	40 95       	com	r20
 384:	30 95       	com	r19
 386:	21 95       	neg	r18
 388:	3f 4f       	sbci	r19, 0xFF	; 255
 38a:	4f 4f       	sbci	r20, 0xFF	; 255
 38c:	5f 4f       	sbci	r21, 0xFF	; 255
 38e:	0e c0       	rjmp	.+28     	; 0x3ac <__fixsfsi+0x98>
 390:	20 e0       	ldi	r18, 0x00	; 0
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	40 e0       	ldi	r20, 0x00	; 0
 396:	50 e0       	ldi	r21, 0x00	; 0
 398:	09 c0       	rjmp	.+18     	; 0x3ac <__fixsfsi+0x98>
 39a:	2f ef       	ldi	r18, 0xFF	; 255
 39c:	3f ef       	ldi	r19, 0xFF	; 255
 39e:	4f ef       	ldi	r20, 0xFF	; 255
 3a0:	5f e7       	ldi	r21, 0x7F	; 127
 3a2:	04 c0       	rjmp	.+8      	; 0x3ac <__fixsfsi+0x98>
 3a4:	20 e0       	ldi	r18, 0x00	; 0
 3a6:	30 e0       	ldi	r19, 0x00	; 0
 3a8:	40 e0       	ldi	r20, 0x00	; 0
 3aa:	50 e8       	ldi	r21, 0x80	; 128
 3ac:	b9 01       	movw	r22, r18
 3ae:	ca 01       	movw	r24, r20
 3b0:	2c 96       	adiw	r28, 0x0c	; 12
 3b2:	e2 e0       	ldi	r30, 0x02	; 2
 3b4:	8e c5       	rjmp	.+2844   	; 0xed2 <__epilogue_restores__+0x20>

000003b6 <__unpack_f>:
 3b6:	fc 01       	movw	r30, r24
 3b8:	db 01       	movw	r26, r22
 3ba:	40 81       	ld	r20, Z
 3bc:	51 81       	ldd	r21, Z+1	; 0x01
 3be:	22 81       	ldd	r18, Z+2	; 0x02
 3c0:	62 2f       	mov	r22, r18
 3c2:	6f 77       	andi	r22, 0x7F	; 127
 3c4:	70 e0       	ldi	r23, 0x00	; 0
 3c6:	22 1f       	adc	r18, r18
 3c8:	22 27       	eor	r18, r18
 3ca:	22 1f       	adc	r18, r18
 3cc:	93 81       	ldd	r25, Z+3	; 0x03
 3ce:	89 2f       	mov	r24, r25
 3d0:	88 0f       	add	r24, r24
 3d2:	82 2b       	or	r24, r18
 3d4:	28 2f       	mov	r18, r24
 3d6:	30 e0       	ldi	r19, 0x00	; 0
 3d8:	99 1f       	adc	r25, r25
 3da:	99 27       	eor	r25, r25
 3dc:	99 1f       	adc	r25, r25
 3de:	11 96       	adiw	r26, 0x01	; 1
 3e0:	9c 93       	st	X, r25
 3e2:	11 97       	sbiw	r26, 0x01	; 1
 3e4:	21 15       	cp	r18, r1
 3e6:	31 05       	cpc	r19, r1
 3e8:	a9 f5       	brne	.+106    	; 0x454 <__unpack_f+0x9e>
 3ea:	41 15       	cp	r20, r1
 3ec:	51 05       	cpc	r21, r1
 3ee:	61 05       	cpc	r22, r1
 3f0:	71 05       	cpc	r23, r1
 3f2:	11 f4       	brne	.+4      	; 0x3f8 <__unpack_f+0x42>
 3f4:	82 e0       	ldi	r24, 0x02	; 2
 3f6:	37 c0       	rjmp	.+110    	; 0x466 <__unpack_f+0xb0>
 3f8:	82 e8       	ldi	r24, 0x82	; 130
 3fa:	9f ef       	ldi	r25, 0xFF	; 255
 3fc:	13 96       	adiw	r26, 0x03	; 3
 3fe:	9c 93       	st	X, r25
 400:	8e 93       	st	-X, r24
 402:	12 97       	sbiw	r26, 0x02	; 2
 404:	9a 01       	movw	r18, r20
 406:	ab 01       	movw	r20, r22
 408:	67 e0       	ldi	r22, 0x07	; 7
 40a:	22 0f       	add	r18, r18
 40c:	33 1f       	adc	r19, r19
 40e:	44 1f       	adc	r20, r20
 410:	55 1f       	adc	r21, r21
 412:	6a 95       	dec	r22
 414:	d1 f7       	brne	.-12     	; 0x40a <__unpack_f+0x54>
 416:	83 e0       	ldi	r24, 0x03	; 3
 418:	8c 93       	st	X, r24
 41a:	0d c0       	rjmp	.+26     	; 0x436 <__unpack_f+0x80>
 41c:	22 0f       	add	r18, r18
 41e:	33 1f       	adc	r19, r19
 420:	44 1f       	adc	r20, r20
 422:	55 1f       	adc	r21, r21
 424:	12 96       	adiw	r26, 0x02	; 2
 426:	8d 91       	ld	r24, X+
 428:	9c 91       	ld	r25, X
 42a:	13 97       	sbiw	r26, 0x03	; 3
 42c:	01 97       	sbiw	r24, 0x01	; 1
 42e:	13 96       	adiw	r26, 0x03	; 3
 430:	9c 93       	st	X, r25
 432:	8e 93       	st	-X, r24
 434:	12 97       	sbiw	r26, 0x02	; 2
 436:	20 30       	cpi	r18, 0x00	; 0
 438:	80 e0       	ldi	r24, 0x00	; 0
 43a:	38 07       	cpc	r19, r24
 43c:	80 e0       	ldi	r24, 0x00	; 0
 43e:	48 07       	cpc	r20, r24
 440:	80 e4       	ldi	r24, 0x40	; 64
 442:	58 07       	cpc	r21, r24
 444:	58 f3       	brcs	.-42     	; 0x41c <__unpack_f+0x66>
 446:	14 96       	adiw	r26, 0x04	; 4
 448:	2d 93       	st	X+, r18
 44a:	3d 93       	st	X+, r19
 44c:	4d 93       	st	X+, r20
 44e:	5c 93       	st	X, r21
 450:	17 97       	sbiw	r26, 0x07	; 7
 452:	08 95       	ret
 454:	2f 3f       	cpi	r18, 0xFF	; 255
 456:	31 05       	cpc	r19, r1
 458:	79 f4       	brne	.+30     	; 0x478 <__unpack_f+0xc2>
 45a:	41 15       	cp	r20, r1
 45c:	51 05       	cpc	r21, r1
 45e:	61 05       	cpc	r22, r1
 460:	71 05       	cpc	r23, r1
 462:	19 f4       	brne	.+6      	; 0x46a <__unpack_f+0xb4>
 464:	84 e0       	ldi	r24, 0x04	; 4
 466:	8c 93       	st	X, r24
 468:	08 95       	ret
 46a:	64 ff       	sbrs	r22, 4
 46c:	03 c0       	rjmp	.+6      	; 0x474 <__unpack_f+0xbe>
 46e:	81 e0       	ldi	r24, 0x01	; 1
 470:	8c 93       	st	X, r24
 472:	12 c0       	rjmp	.+36     	; 0x498 <__unpack_f+0xe2>
 474:	1c 92       	st	X, r1
 476:	10 c0       	rjmp	.+32     	; 0x498 <__unpack_f+0xe2>
 478:	2f 57       	subi	r18, 0x7F	; 127
 47a:	30 40       	sbci	r19, 0x00	; 0
 47c:	13 96       	adiw	r26, 0x03	; 3
 47e:	3c 93       	st	X, r19
 480:	2e 93       	st	-X, r18
 482:	12 97       	sbiw	r26, 0x02	; 2
 484:	83 e0       	ldi	r24, 0x03	; 3
 486:	8c 93       	st	X, r24
 488:	87 e0       	ldi	r24, 0x07	; 7
 48a:	44 0f       	add	r20, r20
 48c:	55 1f       	adc	r21, r21
 48e:	66 1f       	adc	r22, r22
 490:	77 1f       	adc	r23, r23
 492:	8a 95       	dec	r24
 494:	d1 f7       	brne	.-12     	; 0x48a <__unpack_f+0xd4>
 496:	70 64       	ori	r23, 0x40	; 64
 498:	14 96       	adiw	r26, 0x04	; 4
 49a:	4d 93       	st	X+, r20
 49c:	5d 93       	st	X+, r21
 49e:	6d 93       	st	X+, r22
 4a0:	7c 93       	st	X, r23
 4a2:	17 97       	sbiw	r26, 0x07	; 7
 4a4:	08 95       	ret

000004a6 <buttonCheck>:
	}
}

void buttonCheck() {

	RIGHT = 0; LEFT = 0;
 4a6:	10 92 85 01 	sts	0x0185, r1
 4aa:	10 92 84 01 	sts	0x0184, r1
 4ae:	10 92 83 01 	sts	0x0183, r1
 4b2:	10 92 82 01 	sts	0x0182, r1
	
	if(PINB & 0b00000010) {
 4b6:	19 9b       	sbis	0x03, 1	; 3
 4b8:	11 c0       	rjmp	.+34     	; 0x4dc <buttonCheck+0x36>
 4ba:	84 ef       	ldi	r24, 0xF4	; 244
 4bc:	91 e0       	ldi	r25, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 4be:	20 e9       	ldi	r18, 0x90	; 144
 4c0:	31 e0       	ldi	r19, 0x01	; 1
 4c2:	f9 01       	movw	r30, r18
 4c4:	31 97       	sbiw	r30, 0x01	; 1
 4c6:	f1 f7       	brne	.-4      	; 0x4c4 <buttonCheck+0x1e>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 4c8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 4ca:	d9 f7       	brne	.-10     	; 0x4c2 <buttonCheck+0x1c>
	_delay_ms(50);
	if(PINB & 0b00000010) {
 4cc:	19 9b       	sbis	0x03, 1	; 3
 4ce:	06 c0       	rjmp	.+12     	; 0x4dc <buttonCheck+0x36>
		// Send output to PORTD.
		//PORTB |= (1<<3); //PORTB = 0b11111111;
		RIGHT = 1;
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	90 93 85 01 	sts	0x0185, r25
 4d8:	80 93 84 01 	sts	0x0184, r24
	}
	}
	
	if (PINB & 0b00000001 ) {
 4dc:	18 9b       	sbis	0x03, 0	; 3
 4de:	11 c0       	rjmp	.+34     	; 0x502 <buttonCheck+0x5c>
 4e0:	84 ef       	ldi	r24, 0xF4	; 244
 4e2:	91 e0       	ldi	r25, 0x01	; 1
 4e4:	20 e9       	ldi	r18, 0x90	; 144
 4e6:	31 e0       	ldi	r19, 0x01	; 1
 4e8:	f9 01       	movw	r30, r18
 4ea:	31 97       	sbiw	r30, 0x01	; 1
 4ec:	f1 f7       	brne	.-4      	; 0x4ea <buttonCheck+0x44>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 4ee:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 4f0:	d9 f7       	brne	.-10     	; 0x4e8 <buttonCheck+0x42>
	_delay_ms(50);
	if (PINB & 0b00000001 ) {
 4f2:	18 9b       	sbis	0x03, 0	; 3
 4f4:	06 c0       	rjmp	.+12     	; 0x502 <buttonCheck+0x5c>
		//PORTB |= (1<<2);
		LEFT = 1;
 4f6:	81 e0       	ldi	r24, 0x01	; 1
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	90 93 83 01 	sts	0x0183, r25
 4fe:	80 93 82 01 	sts	0x0182, r24
 502:	08 95       	ret

00000504 <PinChangeInit>:
}

void PinChangeInit(void)
{
	//Enable PCINT0 and PCINT1 (both buttons) in the PCMSK0 register
	PCMSK0 |= (1<<PCINT0);
 504:	eb e6       	ldi	r30, 0x6B	; 107
 506:	f0 e0       	ldi	r31, 0x00	; 0
 508:	80 81       	ld	r24, Z
 50a:	81 60       	ori	r24, 0x01	; 1
 50c:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT1);
 50e:	80 81       	ld	r24, Z
 510:	82 60       	ori	r24, 0x02	; 2
 512:	80 83       	st	Z, r24

	//Enable Pin change interrupts in the Pin Change Interrupt Control Register
	PCICR |= (1<<PCIE0);
 514:	e8 e6       	ldi	r30, 0x68	; 104
 516:	f0 e0       	ldi	r31, 0x00	; 0
 518:	80 81       	ld	r24, Z
 51a:	81 60       	ori	r24, 0x01	; 1
 51c:	80 83       	st	Z, r24
	
	//Set the PCINT0 and PCINT1 interrupts to trigger on rising edge
	EICRA |= ((1<<ISC00)&&(1<<ISC01)&&(1<<ISC10)&&(1<<ISC11));
 51e:	e9 e6       	ldi	r30, 0x69	; 105
 520:	f0 e0       	ldi	r31, 0x00	; 0
 522:	80 81       	ld	r24, Z
 524:	81 60       	ori	r24, 0x01	; 1
 526:	80 83       	st	Z, r24
		
	//Ensure to enable global interrupts as well.
	sei();
 528:	78 94       	sei
}
 52a:	08 95       	ret

0000052c <__vector_9>:

ISR(PCINT0_vect)
{	
 52c:	1f 92       	push	r1
 52e:	0f 92       	push	r0
 530:	0f b6       	in	r0, 0x3f	; 63
 532:	0f 92       	push	r0
 534:	11 24       	eor	r1, r1
 536:	8f 93       	push	r24
 538:	9f 93       	push	r25
	RIGHT = 0; LEFT = 0;
 53a:	10 92 85 01 	sts	0x0185, r1
 53e:	10 92 84 01 	sts	0x0184, r1
 542:	10 92 83 01 	sts	0x0183, r1
 546:	10 92 82 01 	sts	0x0182, r1
	
	if(PINB & 0b00000010) {
 54a:	19 9b       	sbis	0x03, 1	; 3
 54c:	06 c0       	rjmp	.+12     	; 0x55a <__vector_9+0x2e>
	//_delay_ms(50);
	//if(PINB & 0b00000010) {
		// Send output to PORTD.
		//PORTB |= (1<<3); //PORTB = 0b11111111;
		RIGHT = 1;
 54e:	81 e0       	ldi	r24, 0x01	; 1
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	90 93 85 01 	sts	0x0185, r25
 556:	80 93 84 01 	sts	0x0184, r24
	//}
	}
	
	if (PINB & 0b00000001 ) {
 55a:	18 9b       	sbis	0x03, 0	; 3
 55c:	06 c0       	rjmp	.+12     	; 0x56a <__vector_9+0x3e>
	//_delay_ms(50);
	//if (PINB & 0b00000001 ) {
		//PORTB |= (1<<2);
		LEFT = 1;
 55e:	81 e0       	ldi	r24, 0x01	; 1
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	90 93 83 01 	sts	0x0183, r25
 566:	80 93 82 01 	sts	0x0182, r24
	}
	clear();
	draw_character('*',heroX,heroY);
	refresh();
	*/
}
 56a:	9f 91       	pop	r25
 56c:	8f 91       	pop	r24
 56e:	0f 90       	pop	r0
 570:	0f be       	out	0x3f, r0	; 63
 572:	0f 90       	pop	r0
 574:	1f 90       	pop	r1
 576:	18 95       	reti

00000578 <CountDown>:
	buttonCheck();
	CountDown();
	
}

void CountDown() {
 578:	1f 93       	push	r17
 57a:	cf 93       	push	r28
 57c:	df 93       	push	r29
 57e:	13 e3       	ldi	r17, 0x33	; 51
 580:	c0 e9       	ldi	r28, 0x90	; 144
 582:	d1 e0       	ldi	r29, 0x01	; 1
	for (char i= 0x3; i>0x0; i--) {
		clear();
 584:	56 d2       	rcall	.+1196   	; 0xa32 <clear>
		draw_string("Game Start In: ", 2,22); // 15*5 = 75 (84 - 75)/2 = 4
 586:	80 e0       	ldi	r24, 0x00	; 0
 588:	91 e0       	ldi	r25, 0x01	; 1
 58a:	62 e0       	ldi	r22, 0x02	; 2
 58c:	46 e1       	ldi	r20, 0x16	; 22
 58e:	dc d2       	rcall	.+1464   	; 0xb48 <draw_string>
		draw_character((0x30 + i), 75,22);
 590:	81 2f       	mov	r24, r17
 592:	6b e4       	ldi	r22, 0x4B	; 75
 594:	46 e1       	ldi	r20, 0x16	; 22
 596:	88 d2       	rcall	.+1296   	; 0xaa8 <draw_character>
		refresh();
 598:	ec d2       	rcall	.+1496   	; 0xb72 <refresh>
 59a:	80 e1       	ldi	r24, 0x10	; 16
 59c:	97 e2       	ldi	r25, 0x27	; 39
 59e:	fe 01       	movw	r30, r28
 5a0:	31 97       	sbiw	r30, 0x01	; 1
 5a2:	f1 f7       	brne	.-4      	; 0x5a0 <CountDown+0x28>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 5a4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 5a6:	d9 f7       	brne	.-10     	; 0x59e <CountDown+0x26>
 5a8:	11 50       	subi	r17, 0x01	; 1
	CountDown();
	
}

void CountDown() {
	for (char i= 0x3; i>0x0; i--) {
 5aa:	10 33       	cpi	r17, 0x30	; 48
 5ac:	59 f7       	brne	.-42     	; 0x584 <CountDown+0xc>
		draw_string("Game Start In: ", 2,22); // 15*5 = 75 (84 - 75)/2 = 4
		draw_character((0x30 + i), 75,22);
		refresh();
		_delay_ms(1000);
	}
}
 5ae:	df 91       	pop	r29
 5b0:	cf 91       	pop	r28
 5b2:	1f 91       	pop	r17
 5b4:	08 95       	ret

000005b6 <setupGame>:
void setupGame() {

	// SW0 and SW1 are connected to pins B0 and B1
	// LED1 and LED2 connected to pins B2 and B3
	// 0 for input 1 for output
	DDRB |= 0b00001100;
 5b6:	84 b1       	in	r24, 0x04	; 4
 5b8:	8c 60       	ori	r24, 0x0C	; 12
 5ba:	84 b9       	out	0x04, r24	; 4
    // Teensy LED is connected to D6
    DDRD |= 0b01000000;
 5bc:	56 9a       	sbi	0x0a, 6	; 10
    // turn OFF LED initially
	PORTD |= 0b00000000;
 5be:	8b b1       	in	r24, 0x0b	; 11
 5c0:	8b b9       	out	0x0b, r24	; 11
	PORTB |= (1<<2)||(1<<3); //not sure why this is here
 5c2:	28 9a       	sbi	0x05, 0	; 5
	
	//initialise clock
	//CLKPR |= 1 << CLKPCE;
	//CLKPR |= 1 << CLKPS0;
	CPU_PRESCALE(CPU_16MHz);
 5c4:	80 e8       	ldi	r24, 0x80	; 128
 5c6:	80 93 61 00 	sts	0x0061, r24
 5ca:	10 92 61 00 	sts	0x0061, r1
	
	
	LCDInitialise(LCD_DEFAULT_CONTRAST);
 5ce:	8f e3       	ldi	r24, 0x3F	; 63
 5d0:	02 d3       	rcall	.+1540   	; 0xbd6 <LCDInitialise>
	clear();
 5d2:	2f d2       	rcall	.+1118   	; 0xa32 <clear>
	
	PinChangeInit();
 5d4:	97 df       	rcall	.-210    	; 0x504 <PinChangeInit>
	
	clear();
 5d6:	2d d2       	rcall	.+1114   	; 0xa32 <clear>
	draw_string("ZombieDash v1.0", 4,0); // 15*5 = 75 (84 - 75)/2 = 4
 5d8:	80 e1       	ldi	r24, 0x10	; 16
 5da:	91 e0       	ldi	r25, 0x01	; 1
 5dc:	64 e0       	ldi	r22, 0x04	; 4
 5de:	40 e0       	ldi	r20, 0x00	; 0
 5e0:	b3 d2       	rcall	.+1382   	; 0xb48 <draw_string>
	draw_string("Lachlan Robinson", 2,9); // 16*5 = 80 (84 - 80)/2 = 2
 5e2:	80 e2       	ldi	r24, 0x20	; 32
 5e4:	91 e0       	ldi	r25, 0x01	; 1
 5e6:	62 e0       	ldi	r22, 0x02	; 2
 5e8:	49 e0       	ldi	r20, 0x09	; 9
 5ea:	ae d2       	rcall	.+1372   	; 0xb48 <draw_string>
	draw_string("n8845409", 22, 28); // 8*5 = 40 (84 - 40)/2 = 22
 5ec:	81 e3       	ldi	r24, 0x31	; 49
 5ee:	91 e0       	ldi	r25, 0x01	; 1
 5f0:	66 e1       	ldi	r22, 0x16	; 22
 5f2:	4c e1       	ldi	r20, 0x1C	; 28
 5f4:	a9 d2       	rcall	.+1362   	; 0xb48 <draw_string>
	refresh();
 5f6:	bd d2       	rcall	.+1402   	; 0xb72 <refresh>
	
	while ((LEFT == 0) & (RIGHT == 0)) {
 5f8:	80 91 82 01 	lds	r24, 0x0182
 5fc:	90 91 83 01 	lds	r25, 0x0183
 600:	20 91 84 01 	lds	r18, 0x0184
 604:	30 91 85 01 	lds	r19, 0x0185
 608:	89 2b       	or	r24, r25
 60a:	11 f4       	brne	.+4      	; 0x610 <setupGame+0x5a>
 60c:	23 2b       	or	r18, r19
 60e:	a1 f3       	breq	.-24     	; 0x5f8 <setupGame+0x42>
		//buttonCheck();
	}
	buttonCheck();
 610:	4a df       	rcall	.-364    	; 0x4a6 <buttonCheck>
	CountDown();
	
}
 612:	b2 cf       	rjmp	.-156    	; 0x578 <CountDown>

00000614 <main>:
#include "sprite.h"
#include "cpu_speed.h"

#include "my_functions.h"

int main() {
 614:	2f 92       	push	r2
 616:	3f 92       	push	r3
 618:	4f 92       	push	r4
 61a:	5f 92       	push	r5
 61c:	6f 92       	push	r6
 61e:	7f 92       	push	r7
 620:	8f 92       	push	r8
 622:	9f 92       	push	r9
 624:	af 92       	push	r10
 626:	bf 92       	push	r11
 628:	cf 92       	push	r12
 62a:	df 92       	push	r13
 62c:	ef 92       	push	r14
 62e:	ff 92       	push	r15
 630:	0f 93       	push	r16
 632:	1f 93       	push	r17
 634:	df 93       	push	r29
 636:	cf 93       	push	r28
 638:	cd b7       	in	r28, 0x3d	; 61
 63a:	de b7       	in	r29, 0x3e	; 62
 63c:	ca 56       	subi	r28, 0x6A	; 106
 63e:	d0 40       	sbci	r29, 0x00	; 0
 640:	0f b6       	in	r0, 0x3f	; 63
 642:	f8 94       	cli
 644:	de bf       	out	0x3e, r29	; 62
 646:	0f be       	out	0x3f, r0	; 63
 648:	cd bf       	out	0x3d, r28	; 61
	
	setupGame();
 64a:	b5 df       	rcall	.-150    	; 0x5b6 <setupGame>
		UINT( 00100100, 00100100 ),
		UINT( 00010011, 11001000 ),
		UINT( 00010000, 00001000 ),
		UINT( 00011000, 00011000 ),
		UINT( 00000111, 11100000 ),
	};
 64c:	de 01       	movw	r26, r28
 64e:	9b 96       	adiw	r26, 0x2b	; 43
 650:	e2 e6       	ldi	r30, 0x62	; 98
 652:	f1 e0       	ldi	r31, 0x01	; 1
 654:	80 e2       	ldi	r24, 0x20	; 32
 656:	01 90       	ld	r0, Z+
 658:	0d 92       	st	X+, r0
 65a:	81 50       	subi	r24, 0x01	; 1
 65c:	e1 f7       	brne	.-8      	; 0x656 <main+0x42>
		UINT( 00100111, 11100100 ),
		UINT( 00010000, 00001000 ),
		UINT( 00010000, 00001000 ),
		UINT( 00011000, 00011000 ),
		UINT( 00000111, 11100000 ),
	};
 65e:	de 01       	movw	r26, r28
 660:	a5 5b       	subi	r26, 0xB5	; 181
 662:	bf 4f       	sbci	r27, 0xFF	; 255
 664:	e2 e4       	ldi	r30, 0x42	; 66
 666:	f1 e0       	ldi	r31, 0x01	; 1
 668:	80 e2       	ldi	r24, 0x20	; 32
 66a:	01 90       	ld	r0, Z+
 66c:	0d 92       	st	X+, r0
 66e:	81 50       	subi	r24, 0x01	; 1
 670:	e1 f7       	brne	.-8      	; 0x66a <main+0x56>
	byte *bitmapb;
	
	Sprite my_sprite;
	byte width = 16;
	byte height = 16;
	screen_x -= width;
 672:	80 91 3a 01 	lds	r24, 0x013A
 676:	90 91 3b 01 	lds	r25, 0x013B
 67a:	40 97       	sbiw	r24, 0x10	; 16
 67c:	90 93 3b 01 	sts	0x013B, r25
 680:	80 93 3a 01 	sts	0x013A, r24
	screen_y -= height;
 684:	20 91 3c 01 	lds	r18, 0x013C
 688:	30 91 3d 01 	lds	r19, 0x013D
 68c:	20 51       	subi	r18, 0x10	; 16
 68e:	30 40       	sbci	r19, 0x00	; 0
 690:	30 93 3d 01 	sts	0x013D, r19
 694:	20 93 3c 01 	sts	0x013C, r18
	byte x = screen_x/2 - width;
 698:	62 e0       	ldi	r22, 0x02	; 2
 69a:	70 e0       	ldi	r23, 0x00	; 0
 69c:	c7 d3       	rcall	.+1934   	; 0xe2c <__divmodhi4>
 69e:	16 2f       	mov	r17, r22
 6a0:	10 51       	subi	r17, 0x10	; 16
	byte y = screen_y/2;
 6a2:	c9 01       	movw	r24, r18
 6a4:	62 e0       	ldi	r22, 0x02	; 2
 6a6:	70 e0       	ldi	r23, 0x00	; 0
 6a8:	c1 d3       	rcall	.+1922   	; 0xe2c <__divmodhi4>
 6aa:	b6 2e       	mov	r11, r22
	init_sprite(&my_sprite, x, y, width, height, bitmap1);
 6ac:	6e 01       	movw	r12, r28
 6ae:	08 94       	sec
 6b0:	c1 1c       	adc	r12, r1
 6b2:	d1 1c       	adc	r13, r1
 6b4:	c6 01       	movw	r24, r12
 6b6:	61 2f       	mov	r22, r17
 6b8:	4b 2d       	mov	r20, r11
 6ba:	20 e1       	ldi	r18, 0x10	; 16
 6bc:	00 e1       	ldi	r16, 0x10	; 16
 6be:	5b e2       	ldi	r21, 0x2B	; 43
 6c0:	e5 2e       	mov	r14, r21
 6c2:	f1 2c       	mov	r15, r1
 6c4:	ec 0e       	add	r14, r28
 6c6:	fd 1e       	adc	r15, r29
 6c8:	b9 d2       	rcall	.+1394   	; 0xc3c <init_sprite>
	draw_sprite(&my_sprite);
 6ca:	c6 01       	movw	r24, r12
 6cc:	e7 d2       	rcall	.+1486   	; 0xc9c <draw_sprite>
	
	Sprite my_sprite2;
	init_sprite(&my_sprite2, x + 2*width, y, width, height, bitmap2);
 6ce:	46 e1       	ldi	r20, 0x16	; 22
 6d0:	c4 2e       	mov	r12, r20
 6d2:	d1 2c       	mov	r13, r1
 6d4:	cc 0e       	add	r12, r28
 6d6:	dd 1e       	adc	r13, r29
 6d8:	10 5e       	subi	r17, 0xE0	; 224
 6da:	c6 01       	movw	r24, r12
 6dc:	61 2f       	mov	r22, r17
 6de:	4b 2d       	mov	r20, r11
 6e0:	20 e1       	ldi	r18, 0x10	; 16
 6e2:	3b e4       	ldi	r19, 0x4B	; 75
 6e4:	e3 2e       	mov	r14, r19
 6e6:	f1 2c       	mov	r15, r1
 6e8:	ec 0e       	add	r14, r28
 6ea:	fd 1e       	adc	r15, r29
 6ec:	a7 d2       	rcall	.+1358   	; 0xc3c <init_sprite>
	draw_sprite(&my_sprite2);
 6ee:	c6 01       	movw	r24, r12
 6f0:	d5 d2       	rcall	.+1450   	; 0xc9c <draw_sprite>
	refresh();
 6f2:	3f d2       	rcall	.+1150   	; 0xb72 <refresh>
	
	refresh();
 6f4:	3e d2       	rcall	.+1148   	; 0xb72 <refresh>
 6f6:	88 ee       	ldi	r24, 0xE8	; 232
 6f8:	93 e0       	ldi	r25, 0x03	; 3
 6fa:	20 e9       	ldi	r18, 0x90	; 144
 6fc:	31 e0       	ldi	r19, 0x01	; 1
 6fe:	f9 01       	movw	r30, r18
 700:	31 97       	sbiw	r30, 0x01	; 1
 702:	f1 f7       	brne	.-4      	; 0x700 <main+0xec>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 704:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 706:	d9 f7       	brne	.-10     	; 0x6fe <main+0xea>
 708:	21 e0       	ldi	r18, 0x01	; 1
 70a:	42 2e       	mov	r4, r18
 70c:	51 2c       	mov	r5, r1
 70e:	91 e0       	ldi	r25, 0x01	; 1
 710:	29 2e       	mov	r2, r25
 712:	31 2c       	mov	r3, r1
	refresh();
	*/
	int add = 1;
	int notPressed = 1;
	while(1){
	my_sprite.y += add;
 714:	b2 01       	movw	r22, r4
 716:	88 27       	eor	r24, r24
 718:	77 fd       	sbrc	r23, 7
 71a:	80 95       	com	r24
 71c:	98 2f       	mov	r25, r24
 71e:	d5 d0       	rcall	.+426    	; 0x8ca <__floatsisf>
 720:	5b 01       	movw	r10, r22
 722:	6c 01       	movw	r12, r24
 724:	2d 81       	ldd	r18, Y+5	; 0x05
 726:	3e 81       	ldd	r19, Y+6	; 0x06
 728:	4f 81       	ldd	r20, Y+7	; 0x07
 72a:	58 85       	ldd	r21, Y+8	; 0x08
 72c:	64 d0       	rcall	.+200    	; 0x7f6 <__addsf3>
 72e:	7b 01       	movw	r14, r22
 730:	8c 01       	movw	r16, r24
	my_sprite2.y -= add;
 732:	6a 8c       	ldd	r6, Y+26	; 0x1a
 734:	7b 8c       	ldd	r7, Y+27	; 0x1b
 736:	8c 8c       	ldd	r8, Y+28	; 0x1c
 738:	9d 8c       	ldd	r9, Y+29	; 0x1d
	if (my_sprite.y < 1) add = -add;
 73a:	20 e0       	ldi	r18, 0x00	; 0
 73c:	30 e0       	ldi	r19, 0x00	; 0
 73e:	40 e8       	ldi	r20, 0x80	; 128
 740:	5f e3       	ldi	r21, 0x3F	; 63
 742:	bd d0       	rcall	.+378    	; 0x8be <__cmpsf2>
 744:	88 23       	and	r24, r24
 746:	24 f4       	brge	.+8      	; 0x750 <main+0x13c>
 748:	50 94       	com	r5
 74a:	41 94       	neg	r4
 74c:	51 08       	sbc	r5, r1
 74e:	53 94       	inc	r5
	if (my_sprite.y > screen_y) add = -add;
 750:	60 91 3c 01 	lds	r22, 0x013C
 754:	70 91 3d 01 	lds	r23, 0x013D
 758:	88 27       	eor	r24, r24
 75a:	77 fd       	sbrc	r23, 7
 75c:	80 95       	com	r24
 75e:	98 2f       	mov	r25, r24
 760:	b4 d0       	rcall	.+360    	; 0x8ca <__floatsisf>
 762:	9b 01       	movw	r18, r22
 764:	ac 01       	movw	r20, r24
 766:	c8 01       	movw	r24, r16
 768:	b7 01       	movw	r22, r14
 76a:	5f d1       	rcall	.+702    	; 0xa2a <__gesf2>
 76c:	18 16       	cp	r1, r24
 76e:	24 f4       	brge	.+8      	; 0x778 <main+0x164>
 770:	50 94       	com	r5
 772:	41 94       	neg	r4
 774:	51 08       	sbc	r5, r1
 776:	53 94       	inc	r5
	*/
	int add = 1;
	int notPressed = 1;
	while(1){
	my_sprite.y += add;
	my_sprite2.y -= add;
 778:	c4 01       	movw	r24, r8
 77a:	b3 01       	movw	r22, r6
 77c:	a6 01       	movw	r20, r12
 77e:	95 01       	movw	r18, r10
 780:	39 d0       	rcall	.+114    	; 0x7f4 <__subsf3>
 782:	6a 8f       	std	Y+26, r22	; 0x1a
 784:	7b 8f       	std	Y+27, r23	; 0x1b
 786:	8c 8f       	std	Y+28, r24	; 0x1c
 788:	9d 8f       	std	Y+29, r25	; 0x1d
	refresh();
	*/
	int add = 1;
	int notPressed = 1;
	while(1){
	my_sprite.y += add;
 78a:	ed 82       	std	Y+5, r14	; 0x05
 78c:	fe 82       	std	Y+6, r15	; 0x06
 78e:	0f 83       	std	Y+7, r16	; 0x07
 790:	18 87       	std	Y+8, r17	; 0x08
	my_sprite2.y -= add;
	if (my_sprite.y < 1) add = -add;
	if (my_sprite.y > screen_y) add = -add;
	
	clear();
 792:	4f d1       	rcall	.+670    	; 0xa32 <clear>
	
	if (RIGHT == 0 || LEFT == 0) {
 794:	80 91 84 01 	lds	r24, 0x0184
 798:	90 91 85 01 	lds	r25, 0x0185
 79c:	89 2b       	or	r24, r25
 79e:	31 f0       	breq	.+12     	; 0x7ac <main+0x198>
 7a0:	80 91 82 01 	lds	r24, 0x0182
 7a4:	90 91 83 01 	lds	r25, 0x0183
 7a8:	89 2b       	or	r24, r25
 7aa:	19 f4       	brne	.+6      	; 0x7b2 <main+0x19e>
 7ac:	81 e0       	ldi	r24, 0x01	; 1
 7ae:	28 2e       	mov	r2, r24
 7b0:	31 2c       	mov	r3, r1
		notPressed = 1;
	}
	
	if (RIGHT == 1 && LEFT == 1 && notPressed) {
 7b2:	80 91 84 01 	lds	r24, 0x0184
 7b6:	90 91 85 01 	lds	r25, 0x0185
 7ba:	01 97       	sbiw	r24, 0x01	; 1
 7bc:	99 f4       	brne	.+38     	; 0x7e4 <main+0x1d0>
 7be:	80 91 82 01 	lds	r24, 0x0182
 7c2:	90 91 83 01 	lds	r25, 0x0183
 7c6:	01 97       	sbiw	r24, 0x01	; 1
 7c8:	69 f4       	brne	.+26     	; 0x7e4 <main+0x1d0>
 7ca:	21 14       	cp	r2, r1
 7cc:	31 04       	cpc	r3, r1
 7ce:	51 f0       	breq	.+20     	; 0x7e4 <main+0x1d0>
	notPressed = 0;
	bitmapa = my_sprite.bitmap;
 7d0:	2c 85       	ldd	r18, Y+12	; 0x0c
 7d2:	3d 85       	ldd	r19, Y+13	; 0x0d
	bitmapb = my_sprite2.bitmap;
	bitmaptemp = bitmapa;
	bitmapa = bitmapb;
	bitmapb = bitmaptemp;
	my_sprite.bitmap = bitmapa;
 7d4:	89 a1       	ldd	r24, Y+33	; 0x21
 7d6:	9a a1       	ldd	r25, Y+34	; 0x22
 7d8:	9d 87       	std	Y+13, r25	; 0x0d
 7da:	8c 87       	std	Y+12, r24	; 0x0c
	my_sprite2.bitmap = bitmapb;
 7dc:	3a a3       	std	Y+34, r19	; 0x22
 7de:	29 a3       	std	Y+33, r18	; 0x21
 7e0:	22 24       	eor	r2, r2
 7e2:	33 24       	eor	r3, r3
	}
	draw_sprite(&my_sprite);
 7e4:	ce 01       	movw	r24, r28
 7e6:	01 96       	adiw	r24, 0x01	; 1
 7e8:	59 d2       	rcall	.+1202   	; 0xc9c <draw_sprite>
	draw_sprite(&my_sprite2);
 7ea:	ce 01       	movw	r24, r28
 7ec:	46 96       	adiw	r24, 0x16	; 22
 7ee:	56 d2       	rcall	.+1196   	; 0xc9c <draw_sprite>
	refresh();
 7f0:	c0 d1       	rcall	.+896    	; 0xb72 <refresh>
 7f2:	90 cf       	rjmp	.-224    	; 0x714 <main+0x100>

000007f4 <__subsf3>:
 7f4:	50 58       	subi	r21, 0x80	; 128

000007f6 <__addsf3>:
 7f6:	bb 27       	eor	r27, r27
 7f8:	aa 27       	eor	r26, r26
 7fa:	0e d0       	rcall	.+28     	; 0x818 <__addsf3x>
 7fc:	dc c0       	rjmp	.+440    	; 0x9b6 <__fp_round>
 7fe:	cd d0       	rcall	.+410    	; 0x99a <__fp_pscA>
 800:	30 f0       	brcs	.+12     	; 0x80e <__addsf3+0x18>
 802:	d2 d0       	rcall	.+420    	; 0x9a8 <__fp_pscB>
 804:	20 f0       	brcs	.+8      	; 0x80e <__addsf3+0x18>
 806:	31 f4       	brne	.+12     	; 0x814 <__addsf3+0x1e>
 808:	9f 3f       	cpi	r25, 0xFF	; 255
 80a:	11 f4       	brne	.+4      	; 0x810 <__addsf3+0x1a>
 80c:	1e f4       	brtc	.+6      	; 0x814 <__addsf3+0x1e>
 80e:	c2 c0       	rjmp	.+388    	; 0x994 <__fp_nan>
 810:	0e f4       	brtc	.+2      	; 0x814 <__addsf3+0x1e>
 812:	e0 95       	com	r30
 814:	e7 fb       	bst	r30, 7
 816:	b8 c0       	rjmp	.+368    	; 0x988 <__fp_inf>

00000818 <__addsf3x>:
 818:	e9 2f       	mov	r30, r25
 81a:	de d0       	rcall	.+444    	; 0x9d8 <__fp_split3>
 81c:	80 f3       	brcs	.-32     	; 0x7fe <__addsf3+0x8>
 81e:	ba 17       	cp	r27, r26
 820:	62 07       	cpc	r22, r18
 822:	73 07       	cpc	r23, r19
 824:	84 07       	cpc	r24, r20
 826:	95 07       	cpc	r25, r21
 828:	18 f0       	brcs	.+6      	; 0x830 <__addsf3x+0x18>
 82a:	71 f4       	brne	.+28     	; 0x848 <__addsf3x+0x30>
 82c:	9e f5       	brtc	.+102    	; 0x894 <__addsf3x+0x7c>
 82e:	f6 c0       	rjmp	.+492    	; 0xa1c <__fp_zero>
 830:	0e f4       	brtc	.+2      	; 0x834 <__addsf3x+0x1c>
 832:	e0 95       	com	r30
 834:	0b 2e       	mov	r0, r27
 836:	ba 2f       	mov	r27, r26
 838:	a0 2d       	mov	r26, r0
 83a:	0b 01       	movw	r0, r22
 83c:	b9 01       	movw	r22, r18
 83e:	90 01       	movw	r18, r0
 840:	0c 01       	movw	r0, r24
 842:	ca 01       	movw	r24, r20
 844:	a0 01       	movw	r20, r0
 846:	11 24       	eor	r1, r1
 848:	ff 27       	eor	r31, r31
 84a:	59 1b       	sub	r21, r25
 84c:	99 f0       	breq	.+38     	; 0x874 <__addsf3x+0x5c>
 84e:	59 3f       	cpi	r21, 0xF9	; 249
 850:	50 f4       	brcc	.+20     	; 0x866 <__addsf3x+0x4e>
 852:	50 3e       	cpi	r21, 0xE0	; 224
 854:	68 f1       	brcs	.+90     	; 0x8b0 <__addsf3x+0x98>
 856:	1a 16       	cp	r1, r26
 858:	f0 40       	sbci	r31, 0x00	; 0
 85a:	a2 2f       	mov	r26, r18
 85c:	23 2f       	mov	r18, r19
 85e:	34 2f       	mov	r19, r20
 860:	44 27       	eor	r20, r20
 862:	58 5f       	subi	r21, 0xF8	; 248
 864:	f3 cf       	rjmp	.-26     	; 0x84c <__addsf3x+0x34>
 866:	46 95       	lsr	r20
 868:	37 95       	ror	r19
 86a:	27 95       	ror	r18
 86c:	a7 95       	ror	r26
 86e:	f0 40       	sbci	r31, 0x00	; 0
 870:	53 95       	inc	r21
 872:	c9 f7       	brne	.-14     	; 0x866 <__addsf3x+0x4e>
 874:	7e f4       	brtc	.+30     	; 0x894 <__addsf3x+0x7c>
 876:	1f 16       	cp	r1, r31
 878:	ba 0b       	sbc	r27, r26
 87a:	62 0b       	sbc	r22, r18
 87c:	73 0b       	sbc	r23, r19
 87e:	84 0b       	sbc	r24, r20
 880:	ba f0       	brmi	.+46     	; 0x8b0 <__addsf3x+0x98>
 882:	91 50       	subi	r25, 0x01	; 1
 884:	a1 f0       	breq	.+40     	; 0x8ae <__addsf3x+0x96>
 886:	ff 0f       	add	r31, r31
 888:	bb 1f       	adc	r27, r27
 88a:	66 1f       	adc	r22, r22
 88c:	77 1f       	adc	r23, r23
 88e:	88 1f       	adc	r24, r24
 890:	c2 f7       	brpl	.-16     	; 0x882 <__addsf3x+0x6a>
 892:	0e c0       	rjmp	.+28     	; 0x8b0 <__addsf3x+0x98>
 894:	ba 0f       	add	r27, r26
 896:	62 1f       	adc	r22, r18
 898:	73 1f       	adc	r23, r19
 89a:	84 1f       	adc	r24, r20
 89c:	48 f4       	brcc	.+18     	; 0x8b0 <__addsf3x+0x98>
 89e:	87 95       	ror	r24
 8a0:	77 95       	ror	r23
 8a2:	67 95       	ror	r22
 8a4:	b7 95       	ror	r27
 8a6:	f7 95       	ror	r31
 8a8:	9e 3f       	cpi	r25, 0xFE	; 254
 8aa:	08 f0       	brcs	.+2      	; 0x8ae <__addsf3x+0x96>
 8ac:	b3 cf       	rjmp	.-154    	; 0x814 <__addsf3+0x1e>
 8ae:	93 95       	inc	r25
 8b0:	88 0f       	add	r24, r24
 8b2:	08 f0       	brcs	.+2      	; 0x8b6 <__addsf3x+0x9e>
 8b4:	99 27       	eor	r25, r25
 8b6:	ee 0f       	add	r30, r30
 8b8:	97 95       	ror	r25
 8ba:	87 95       	ror	r24
 8bc:	08 95       	ret

000008be <__cmpsf2>:
 8be:	40 d0       	rcall	.+128    	; 0x940 <__fp_cmp>
 8c0:	08 f4       	brcc	.+2      	; 0x8c4 <__cmpsf2+0x6>
 8c2:	81 e0       	ldi	r24, 0x01	; 1
 8c4:	08 95       	ret

000008c6 <__floatunsisf>:
 8c6:	e8 94       	clt
 8c8:	09 c0       	rjmp	.+18     	; 0x8dc <__floatsisf+0x12>

000008ca <__floatsisf>:
 8ca:	97 fb       	bst	r25, 7
 8cc:	3e f4       	brtc	.+14     	; 0x8dc <__floatsisf+0x12>
 8ce:	90 95       	com	r25
 8d0:	80 95       	com	r24
 8d2:	70 95       	com	r23
 8d4:	61 95       	neg	r22
 8d6:	7f 4f       	sbci	r23, 0xFF	; 255
 8d8:	8f 4f       	sbci	r24, 0xFF	; 255
 8da:	9f 4f       	sbci	r25, 0xFF	; 255
 8dc:	99 23       	and	r25, r25
 8de:	a9 f0       	breq	.+42     	; 0x90a <__floatsisf+0x40>
 8e0:	f9 2f       	mov	r31, r25
 8e2:	96 e9       	ldi	r25, 0x96	; 150
 8e4:	bb 27       	eor	r27, r27
 8e6:	93 95       	inc	r25
 8e8:	f6 95       	lsr	r31
 8ea:	87 95       	ror	r24
 8ec:	77 95       	ror	r23
 8ee:	67 95       	ror	r22
 8f0:	b7 95       	ror	r27
 8f2:	f1 11       	cpse	r31, r1
 8f4:	f8 cf       	rjmp	.-16     	; 0x8e6 <__floatsisf+0x1c>
 8f6:	fa f4       	brpl	.+62     	; 0x936 <__floatsisf+0x6c>
 8f8:	bb 0f       	add	r27, r27
 8fa:	11 f4       	brne	.+4      	; 0x900 <__floatsisf+0x36>
 8fc:	60 ff       	sbrs	r22, 0
 8fe:	1b c0       	rjmp	.+54     	; 0x936 <__floatsisf+0x6c>
 900:	6f 5f       	subi	r22, 0xFF	; 255
 902:	7f 4f       	sbci	r23, 0xFF	; 255
 904:	8f 4f       	sbci	r24, 0xFF	; 255
 906:	9f 4f       	sbci	r25, 0xFF	; 255
 908:	16 c0       	rjmp	.+44     	; 0x936 <__floatsisf+0x6c>
 90a:	88 23       	and	r24, r24
 90c:	11 f0       	breq	.+4      	; 0x912 <__floatsisf+0x48>
 90e:	96 e9       	ldi	r25, 0x96	; 150
 910:	11 c0       	rjmp	.+34     	; 0x934 <__floatsisf+0x6a>
 912:	77 23       	and	r23, r23
 914:	21 f0       	breq	.+8      	; 0x91e <__floatsisf+0x54>
 916:	9e e8       	ldi	r25, 0x8E	; 142
 918:	87 2f       	mov	r24, r23
 91a:	76 2f       	mov	r23, r22
 91c:	05 c0       	rjmp	.+10     	; 0x928 <__floatsisf+0x5e>
 91e:	66 23       	and	r22, r22
 920:	71 f0       	breq	.+28     	; 0x93e <__floatsisf+0x74>
 922:	96 e8       	ldi	r25, 0x86	; 134
 924:	86 2f       	mov	r24, r22
 926:	70 e0       	ldi	r23, 0x00	; 0
 928:	60 e0       	ldi	r22, 0x00	; 0
 92a:	2a f0       	brmi	.+10     	; 0x936 <__floatsisf+0x6c>
 92c:	9a 95       	dec	r25
 92e:	66 0f       	add	r22, r22
 930:	77 1f       	adc	r23, r23
 932:	88 1f       	adc	r24, r24
 934:	da f7       	brpl	.-10     	; 0x92c <__floatsisf+0x62>
 936:	88 0f       	add	r24, r24
 938:	96 95       	lsr	r25
 93a:	87 95       	ror	r24
 93c:	97 f9       	bld	r25, 7
 93e:	08 95       	ret

00000940 <__fp_cmp>:
 940:	99 0f       	add	r25, r25
 942:	00 08       	sbc	r0, r0
 944:	55 0f       	add	r21, r21
 946:	aa 0b       	sbc	r26, r26
 948:	e0 e8       	ldi	r30, 0x80	; 128
 94a:	fe ef       	ldi	r31, 0xFE	; 254
 94c:	16 16       	cp	r1, r22
 94e:	17 06       	cpc	r1, r23
 950:	e8 07       	cpc	r30, r24
 952:	f9 07       	cpc	r31, r25
 954:	c0 f0       	brcs	.+48     	; 0x986 <__fp_cmp+0x46>
 956:	12 16       	cp	r1, r18
 958:	13 06       	cpc	r1, r19
 95a:	e4 07       	cpc	r30, r20
 95c:	f5 07       	cpc	r31, r21
 95e:	98 f0       	brcs	.+38     	; 0x986 <__fp_cmp+0x46>
 960:	62 1b       	sub	r22, r18
 962:	73 0b       	sbc	r23, r19
 964:	84 0b       	sbc	r24, r20
 966:	95 0b       	sbc	r25, r21
 968:	39 f4       	brne	.+14     	; 0x978 <__fp_cmp+0x38>
 96a:	0a 26       	eor	r0, r26
 96c:	61 f0       	breq	.+24     	; 0x986 <__fp_cmp+0x46>
 96e:	23 2b       	or	r18, r19
 970:	24 2b       	or	r18, r20
 972:	25 2b       	or	r18, r21
 974:	21 f4       	brne	.+8      	; 0x97e <__fp_cmp+0x3e>
 976:	08 95       	ret
 978:	0a 26       	eor	r0, r26
 97a:	09 f4       	brne	.+2      	; 0x97e <__fp_cmp+0x3e>
 97c:	a1 40       	sbci	r26, 0x01	; 1
 97e:	a6 95       	lsr	r26
 980:	8f ef       	ldi	r24, 0xFF	; 255
 982:	81 1d       	adc	r24, r1
 984:	81 1d       	adc	r24, r1
 986:	08 95       	ret

00000988 <__fp_inf>:
 988:	97 f9       	bld	r25, 7
 98a:	9f 67       	ori	r25, 0x7F	; 127
 98c:	80 e8       	ldi	r24, 0x80	; 128
 98e:	70 e0       	ldi	r23, 0x00	; 0
 990:	60 e0       	ldi	r22, 0x00	; 0
 992:	08 95       	ret

00000994 <__fp_nan>:
 994:	9f ef       	ldi	r25, 0xFF	; 255
 996:	80 ec       	ldi	r24, 0xC0	; 192
 998:	08 95       	ret

0000099a <__fp_pscA>:
 99a:	00 24       	eor	r0, r0
 99c:	0a 94       	dec	r0
 99e:	16 16       	cp	r1, r22
 9a0:	17 06       	cpc	r1, r23
 9a2:	18 06       	cpc	r1, r24
 9a4:	09 06       	cpc	r0, r25
 9a6:	08 95       	ret

000009a8 <__fp_pscB>:
 9a8:	00 24       	eor	r0, r0
 9aa:	0a 94       	dec	r0
 9ac:	12 16       	cp	r1, r18
 9ae:	13 06       	cpc	r1, r19
 9b0:	14 06       	cpc	r1, r20
 9b2:	05 06       	cpc	r0, r21
 9b4:	08 95       	ret

000009b6 <__fp_round>:
 9b6:	09 2e       	mov	r0, r25
 9b8:	03 94       	inc	r0
 9ba:	00 0c       	add	r0, r0
 9bc:	11 f4       	brne	.+4      	; 0x9c2 <__fp_round+0xc>
 9be:	88 23       	and	r24, r24
 9c0:	52 f0       	brmi	.+20     	; 0x9d6 <__fp_round+0x20>
 9c2:	bb 0f       	add	r27, r27
 9c4:	40 f4       	brcc	.+16     	; 0x9d6 <__fp_round+0x20>
 9c6:	bf 2b       	or	r27, r31
 9c8:	11 f4       	brne	.+4      	; 0x9ce <__fp_round+0x18>
 9ca:	60 ff       	sbrs	r22, 0
 9cc:	04 c0       	rjmp	.+8      	; 0x9d6 <__fp_round+0x20>
 9ce:	6f 5f       	subi	r22, 0xFF	; 255
 9d0:	7f 4f       	sbci	r23, 0xFF	; 255
 9d2:	8f 4f       	sbci	r24, 0xFF	; 255
 9d4:	9f 4f       	sbci	r25, 0xFF	; 255
 9d6:	08 95       	ret

000009d8 <__fp_split3>:
 9d8:	57 fd       	sbrc	r21, 7
 9da:	90 58       	subi	r25, 0x80	; 128
 9dc:	44 0f       	add	r20, r20
 9de:	55 1f       	adc	r21, r21
 9e0:	59 f0       	breq	.+22     	; 0x9f8 <__fp_splitA+0x10>
 9e2:	5f 3f       	cpi	r21, 0xFF	; 255
 9e4:	71 f0       	breq	.+28     	; 0xa02 <__fp_splitA+0x1a>
 9e6:	47 95       	ror	r20

000009e8 <__fp_splitA>:
 9e8:	88 0f       	add	r24, r24
 9ea:	97 fb       	bst	r25, 7
 9ec:	99 1f       	adc	r25, r25
 9ee:	61 f0       	breq	.+24     	; 0xa08 <__fp_splitA+0x20>
 9f0:	9f 3f       	cpi	r25, 0xFF	; 255
 9f2:	79 f0       	breq	.+30     	; 0xa12 <__fp_splitA+0x2a>
 9f4:	87 95       	ror	r24
 9f6:	08 95       	ret
 9f8:	12 16       	cp	r1, r18
 9fa:	13 06       	cpc	r1, r19
 9fc:	14 06       	cpc	r1, r20
 9fe:	55 1f       	adc	r21, r21
 a00:	f2 cf       	rjmp	.-28     	; 0x9e6 <__fp_split3+0xe>
 a02:	46 95       	lsr	r20
 a04:	f1 df       	rcall	.-30     	; 0x9e8 <__fp_splitA>
 a06:	08 c0       	rjmp	.+16     	; 0xa18 <__fp_splitA+0x30>
 a08:	16 16       	cp	r1, r22
 a0a:	17 06       	cpc	r1, r23
 a0c:	18 06       	cpc	r1, r24
 a0e:	99 1f       	adc	r25, r25
 a10:	f1 cf       	rjmp	.-30     	; 0x9f4 <__fp_splitA+0xc>
 a12:	86 95       	lsr	r24
 a14:	71 05       	cpc	r23, r1
 a16:	61 05       	cpc	r22, r1
 a18:	08 94       	sec
 a1a:	08 95       	ret

00000a1c <__fp_zero>:
 a1c:	e8 94       	clt

00000a1e <__fp_szero>:
 a1e:	bb 27       	eor	r27, r27
 a20:	66 27       	eor	r22, r22
 a22:	77 27       	eor	r23, r23
 a24:	cb 01       	movw	r24, r22
 a26:	97 f9       	bld	r25, 7
 a28:	08 95       	ret

00000a2a <__gesf2>:
 a2a:	8a df       	rcall	.-236    	; 0x940 <__fp_cmp>
 a2c:	08 f4       	brcc	.+2      	; 0xa30 <__gesf2+0x6>
 a2e:	8f ef       	ldi	r24, 0xFF	; 255
 a30:	08 95       	ret

00000a32 <clear>:
 a32:	ee e8       	ldi	r30, 0x8E	; 142
 a34:	f1 e0       	ldi	r31, 0x01	; 1
 a36:	11 92       	st	Z+, r1
 a38:	83 e0       	ldi	r24, 0x03	; 3
 a3a:	e6 38       	cpi	r30, 0x86	; 134
 a3c:	f8 07       	cpc	r31, r24
 a3e:	d9 f7       	brne	.-10     	; 0xa36 <clear+0x4>
 a40:	08 95       	ret

00000a42 <set_pixel>:
 a42:	84 35       	cpi	r24, 0x54	; 84
 a44:	80 f5       	brcc	.+96     	; 0xaa6 <set_pixel+0x64>
 a46:	60 33       	cpi	r22, 0x30	; 48
 a48:	70 f5       	brcc	.+92     	; 0xaa6 <set_pixel+0x64>
 a4a:	26 2f       	mov	r18, r22
 a4c:	26 95       	lsr	r18
 a4e:	26 95       	lsr	r18
 a50:	26 95       	lsr	r18
 a52:	67 70       	andi	r22, 0x07	; 7
 a54:	90 e0       	ldi	r25, 0x00	; 0
 a56:	44 23       	and	r20, r20
 a58:	99 f0       	breq	.+38     	; 0xa80 <set_pixel+0x3e>
 a5a:	e4 e5       	ldi	r30, 0x54	; 84
 a5c:	2e 9f       	mul	r18, r30
 a5e:	f0 01       	movw	r30, r0
 a60:	11 24       	eor	r1, r1
 a62:	e8 0f       	add	r30, r24
 a64:	f9 1f       	adc	r31, r25
 a66:	e2 57       	subi	r30, 0x72	; 114
 a68:	fe 4f       	sbci	r31, 0xFE	; 254
 a6a:	81 e0       	ldi	r24, 0x01	; 1
 a6c:	90 e0       	ldi	r25, 0x00	; 0
 a6e:	02 c0       	rjmp	.+4      	; 0xa74 <set_pixel+0x32>
 a70:	88 0f       	add	r24, r24
 a72:	99 1f       	adc	r25, r25
 a74:	6a 95       	dec	r22
 a76:	e2 f7       	brpl	.-8      	; 0xa70 <set_pixel+0x2e>
 a78:	20 81       	ld	r18, Z
 a7a:	28 2b       	or	r18, r24
 a7c:	20 83       	st	Z, r18
 a7e:	08 95       	ret
 a80:	e4 e5       	ldi	r30, 0x54	; 84
 a82:	2e 9f       	mul	r18, r30
 a84:	f0 01       	movw	r30, r0
 a86:	11 24       	eor	r1, r1
 a88:	e8 0f       	add	r30, r24
 a8a:	f9 1f       	adc	r31, r25
 a8c:	e2 57       	subi	r30, 0x72	; 114
 a8e:	fe 4f       	sbci	r31, 0xFE	; 254
 a90:	81 e0       	ldi	r24, 0x01	; 1
 a92:	90 e0       	ldi	r25, 0x00	; 0
 a94:	02 c0       	rjmp	.+4      	; 0xa9a <set_pixel+0x58>
 a96:	88 0f       	add	r24, r24
 a98:	99 1f       	adc	r25, r25
 a9a:	6a 95       	dec	r22
 a9c:	e2 f7       	brpl	.-8      	; 0xa96 <set_pixel+0x54>
 a9e:	80 95       	com	r24
 aa0:	20 81       	ld	r18, Z
 aa2:	28 23       	and	r18, r24
 aa4:	20 83       	st	Z, r18
 aa6:	08 95       	ret

00000aa8 <draw_character>:
 aa8:	8f 92       	push	r8
 aaa:	9f 92       	push	r9
 aac:	af 92       	push	r10
 aae:	bf 92       	push	r11
 ab0:	cf 92       	push	r12
 ab2:	df 92       	push	r13
 ab4:	ef 92       	push	r14
 ab6:	ff 92       	push	r15
 ab8:	0f 93       	push	r16
 aba:	1f 93       	push	r17
 abc:	cf 93       	push	r28
 abe:	df 93       	push	r29
 ac0:	d6 2e       	mov	r13, r22
 ac2:	c4 2e       	mov	r12, r20
 ac4:	95 e0       	ldi	r25, 0x05	; 5
 ac6:	89 9f       	mul	r24, r25
 ac8:	c0 01       	movw	r24, r0
 aca:	11 24       	eor	r1, r1
 acc:	8c 01       	movw	r16, r24
 ace:	04 5f       	subi	r16, 0xF4	; 244
 ad0:	1f 4f       	sbci	r17, 0xFF	; 255
 ad2:	f1 e0       	ldi	r31, 0x01	; 1
 ad4:	8f 2e       	mov	r8, r31
 ad6:	91 2c       	mov	r9, r1
 ad8:	e1 e1       	ldi	r30, 0x11	; 17
 ada:	ae 2e       	mov	r10, r30
 adc:	e0 e0       	ldi	r30, 0x00	; 0
 ade:	be 2e       	mov	r11, r30
 ae0:	a8 0e       	add	r10, r24
 ae2:	b9 1e       	adc	r11, r25
 ae4:	1d c0       	rjmp	.+58     	; 0xb20 <__stack+0x21>
 ae6:	6c 2d       	mov	r22, r12
 ae8:	6c 0f       	add	r22, r28
 aea:	a4 01       	movw	r20, r8
 aec:	0c 2e       	mov	r0, r28
 aee:	02 c0       	rjmp	.+4      	; 0xaf4 <draw_character+0x4c>
 af0:	44 0f       	add	r20, r20
 af2:	55 1f       	adc	r21, r21
 af4:	0a 94       	dec	r0
 af6:	e2 f7       	brpl	.-8      	; 0xaf0 <draw_character+0x48>
 af8:	4e 21       	and	r20, r14
 afa:	5f 21       	and	r21, r15
 afc:	0c 2e       	mov	r0, r28
 afe:	02 c0       	rjmp	.+4      	; 0xb04 <__stack+0x5>
 b00:	55 95       	asr	r21
 b02:	47 95       	ror	r20
 b04:	0a 94       	dec	r0
 b06:	e2 f7       	brpl	.-8      	; 0xb00 <__stack+0x1>
 b08:	8d 2d       	mov	r24, r13
 b0a:	9b df       	rcall	.-202    	; 0xa42 <set_pixel>
 b0c:	21 96       	adiw	r28, 0x01	; 1
 b0e:	c8 30       	cpi	r28, 0x08	; 8
 b10:	d1 05       	cpc	r29, r1
 b12:	49 f7       	brne	.-46     	; 0xae6 <draw_character+0x3e>
 b14:	0f 5f       	subi	r16, 0xFF	; 255
 b16:	1f 4f       	sbci	r17, 0xFF	; 255
 b18:	d3 94       	inc	r13
 b1a:	0a 15       	cp	r16, r10
 b1c:	1b 05       	cpc	r17, r11
 b1e:	39 f0       	breq	.+14     	; 0xb2e <__stack+0x2f>
 b20:	c0 e0       	ldi	r28, 0x00	; 0
 b22:	d0 e0       	ldi	r29, 0x00	; 0
 b24:	f8 01       	movw	r30, r16
 b26:	84 91       	lpm	r24, Z+
 b28:	e8 2e       	mov	r14, r24
 b2a:	ff 24       	eor	r15, r15
 b2c:	dc cf       	rjmp	.-72     	; 0xae6 <draw_character+0x3e>
 b2e:	df 91       	pop	r29
 b30:	cf 91       	pop	r28
 b32:	1f 91       	pop	r17
 b34:	0f 91       	pop	r16
 b36:	ff 90       	pop	r15
 b38:	ef 90       	pop	r14
 b3a:	df 90       	pop	r13
 b3c:	cf 90       	pop	r12
 b3e:	bf 90       	pop	r11
 b40:	af 90       	pop	r10
 b42:	9f 90       	pop	r9
 b44:	8f 90       	pop	r8
 b46:	08 95       	ret

00000b48 <draw_string>:
 b48:	0f 93       	push	r16
 b4a:	1f 93       	push	r17
 b4c:	cf 93       	push	r28
 b4e:	df 93       	push	r29
 b50:	ec 01       	movw	r28, r24
 b52:	16 2f       	mov	r17, r22
 b54:	04 2f       	mov	r16, r20
 b56:	05 c0       	rjmp	.+10     	; 0xb62 <draw_string+0x1a>
 b58:	61 2f       	mov	r22, r17
 b5a:	40 2f       	mov	r20, r16
 b5c:	a5 df       	rcall	.-182    	; 0xaa8 <draw_character>
 b5e:	21 96       	adiw	r28, 0x01	; 1
 b60:	1b 5f       	subi	r17, 0xFB	; 251
 b62:	88 81       	ld	r24, Y
 b64:	88 23       	and	r24, r24
 b66:	c1 f7       	brne	.-16     	; 0xb58 <draw_string+0x10>
 b68:	df 91       	pop	r29
 b6a:	cf 91       	pop	r28
 b6c:	1f 91       	pop	r17
 b6e:	0f 91       	pop	r16
 b70:	08 95       	ret

00000b72 <refresh>:
 b72:	cf 93       	push	r28
 b74:	df 93       	push	r29
 b76:	80 e0       	ldi	r24, 0x00	; 0
 b78:	60 e0       	ldi	r22, 0x00	; 0
 b7a:	55 d0       	rcall	.+170    	; 0xc26 <LCDPosition>
 b7c:	ce e8       	ldi	r28, 0x8E	; 142
 b7e:	d1 e0       	ldi	r29, 0x01	; 1
 b80:	81 e0       	ldi	r24, 0x01	; 1
 b82:	69 91       	ld	r22, Y+
 b84:	07 d0       	rcall	.+14     	; 0xb94 <LCDWrite>
 b86:	83 e0       	ldi	r24, 0x03	; 3
 b88:	c6 38       	cpi	r28, 0x86	; 134
 b8a:	d8 07       	cpc	r29, r24
 b8c:	c9 f7       	brne	.-14     	; 0xb80 <refresh+0xe>
 b8e:	df 91       	pop	r29
 b90:	cf 91       	pop	r28
 b92:	08 95       	ret

00000b94 <LCDWrite>:
 b94:	95 b1       	in	r25, 0x05	; 5
 b96:	82 95       	swap	r24
 b98:	88 0f       	add	r24, r24
 b9a:	80 7e       	andi	r24, 0xE0	; 224
 b9c:	9f 7d       	andi	r25, 0xDF	; 223
 b9e:	98 2b       	or	r25, r24
 ba0:	95 b9       	out	0x05, r25	; 5
 ba2:	5f 98       	cbi	0x0b, 7	; 11
 ba4:	27 e0       	ldi	r18, 0x07	; 7
 ba6:	30 e0       	ldi	r19, 0x00	; 0
 ba8:	70 e0       	ldi	r23, 0x00	; 0
 baa:	8f 98       	cbi	0x11, 7	; 17
 bac:	cb 01       	movw	r24, r22
 bae:	02 2e       	mov	r0, r18
 bb0:	02 c0       	rjmp	.+4      	; 0xbb6 <LCDWrite+0x22>
 bb2:	95 95       	asr	r25
 bb4:	87 95       	ror	r24
 bb6:	0a 94       	dec	r0
 bb8:	e2 f7       	brpl	.-8      	; 0xbb2 <LCDWrite+0x1e>
 bba:	80 ff       	sbrs	r24, 0
 bbc:	02 c0       	rjmp	.+4      	; 0xbc2 <LCDWrite+0x2e>
 bbe:	2e 9a       	sbi	0x05, 6	; 5
 bc0:	01 c0       	rjmp	.+2      	; 0xbc4 <LCDWrite+0x30>
 bc2:	2e 98       	cbi	0x05, 6	; 5
 bc4:	8f 9a       	sbi	0x11, 7	; 17
 bc6:	21 50       	subi	r18, 0x01	; 1
 bc8:	30 40       	sbci	r19, 0x00	; 0
 bca:	8f ef       	ldi	r24, 0xFF	; 255
 bcc:	2f 3f       	cpi	r18, 0xFF	; 255
 bce:	38 07       	cpc	r19, r24
 bd0:	61 f7       	brne	.-40     	; 0xbaa <LCDWrite+0x16>
 bd2:	5f 9a       	sbi	0x0b, 7	; 11
 bd4:	08 95       	ret

00000bd6 <LCDInitialise>:
 bd6:	1f 93       	push	r17
 bd8:	18 2f       	mov	r17, r24
 bda:	57 9a       	sbi	0x0a, 7	; 10
 bdc:	24 9a       	sbi	0x04, 4	; 4
 bde:	25 9a       	sbi	0x04, 5	; 4
 be0:	26 9a       	sbi	0x04, 6	; 4
 be2:	87 9a       	sbi	0x10, 7	; 16
 be4:	2c 98       	cbi	0x05, 4	; 5
 be6:	5f 9a       	sbi	0x0b, 7	; 11
 be8:	2c 9a       	sbi	0x05, 4	; 5
 bea:	80 e0       	ldi	r24, 0x00	; 0
 bec:	61 e2       	ldi	r22, 0x21	; 33
 bee:	d2 df       	rcall	.-92     	; 0xb94 <LCDWrite>
 bf0:	10 68       	ori	r17, 0x80	; 128
 bf2:	80 e0       	ldi	r24, 0x00	; 0
 bf4:	61 2f       	mov	r22, r17
 bf6:	ce df       	rcall	.-100    	; 0xb94 <LCDWrite>
 bf8:	80 e0       	ldi	r24, 0x00	; 0
 bfa:	64 e0       	ldi	r22, 0x04	; 4
 bfc:	cb df       	rcall	.-106    	; 0xb94 <LCDWrite>
 bfe:	80 e0       	ldi	r24, 0x00	; 0
 c00:	63 e1       	ldi	r22, 0x13	; 19
 c02:	c8 df       	rcall	.-112    	; 0xb94 <LCDWrite>
 c04:	80 e0       	ldi	r24, 0x00	; 0
 c06:	6c e0       	ldi	r22, 0x0C	; 12
 c08:	c5 df       	rcall	.-118    	; 0xb94 <LCDWrite>
 c0a:	80 e0       	ldi	r24, 0x00	; 0
 c0c:	60 e2       	ldi	r22, 0x20	; 32
 c0e:	c2 df       	rcall	.-124    	; 0xb94 <LCDWrite>
 c10:	80 e0       	ldi	r24, 0x00	; 0
 c12:	6c e0       	ldi	r22, 0x0C	; 12
 c14:	bf df       	rcall	.-130    	; 0xb94 <LCDWrite>
 c16:	80 e0       	ldi	r24, 0x00	; 0
 c18:	60 e4       	ldi	r22, 0x40	; 64
 c1a:	bc df       	rcall	.-136    	; 0xb94 <LCDWrite>
 c1c:	80 e0       	ldi	r24, 0x00	; 0
 c1e:	60 e8       	ldi	r22, 0x80	; 128
 c20:	b9 df       	rcall	.-142    	; 0xb94 <LCDWrite>
 c22:	1f 91       	pop	r17
 c24:	08 95       	ret

00000c26 <LCDPosition>:
 c26:	1f 93       	push	r17
 c28:	18 2f       	mov	r17, r24
 c2a:	60 64       	ori	r22, 0x40	; 64
 c2c:	80 e0       	ldi	r24, 0x00	; 0
 c2e:	b2 df       	rcall	.-156    	; 0xb94 <LCDWrite>
 c30:	10 68       	ori	r17, 0x80	; 128
 c32:	80 e0       	ldi	r24, 0x00	; 0
 c34:	61 2f       	mov	r22, r17
 c36:	ae df       	rcall	.-164    	; 0xb94 <LCDWrite>
 c38:	1f 91       	pop	r17
 c3a:	08 95       	ret

00000c3c <init_sprite>:
 c3c:	8f 92       	push	r8
 c3e:	9f 92       	push	r9
 c40:	af 92       	push	r10
 c42:	bf 92       	push	r11
 c44:	cf 92       	push	r12
 c46:	df 92       	push	r13
 c48:	ef 92       	push	r14
 c4a:	ff 92       	push	r15
 c4c:	0f 93       	push	r16
 c4e:	1f 93       	push	r17
 c50:	4c 01       	movw	r8, r24
 c52:	a4 2e       	mov	r10, r20
 c54:	12 2f       	mov	r17, r18
 c56:	70 e0       	ldi	r23, 0x00	; 0
 c58:	80 e0       	ldi	r24, 0x00	; 0
 c5a:	90 e0       	ldi	r25, 0x00	; 0
 c5c:	34 de       	rcall	.-920    	; 0x8c6 <__floatunsisf>
 c5e:	f4 01       	movw	r30, r8
 c60:	60 83       	st	Z, r22
 c62:	71 83       	std	Z+1, r23	; 0x01
 c64:	82 83       	std	Z+2, r24	; 0x02
 c66:	93 83       	std	Z+3, r25	; 0x03
 c68:	bb 24       	eor	r11, r11
 c6a:	cc 24       	eor	r12, r12
 c6c:	dd 24       	eor	r13, r13
 c6e:	c6 01       	movw	r24, r12
 c70:	b5 01       	movw	r22, r10
 c72:	29 de       	rcall	.-942    	; 0x8c6 <__floatunsisf>
 c74:	f4 01       	movw	r30, r8
 c76:	64 83       	std	Z+4, r22	; 0x04
 c78:	75 83       	std	Z+5, r23	; 0x05
 c7a:	86 83       	std	Z+6, r24	; 0x06
 c7c:	97 83       	std	Z+7, r25	; 0x07
 c7e:	10 87       	std	Z+8, r17	; 0x08
 c80:	01 87       	std	Z+9, r16	; 0x09
 c82:	f4 86       	std	Z+12, r15	; 0x0c
 c84:	e3 86       	std	Z+11, r14	; 0x0b
 c86:	1f 91       	pop	r17
 c88:	0f 91       	pop	r16
 c8a:	ff 90       	pop	r15
 c8c:	ef 90       	pop	r14
 c8e:	df 90       	pop	r13
 c90:	cf 90       	pop	r12
 c92:	bf 90       	pop	r11
 c94:	af 90       	pop	r10
 c96:	9f 90       	pop	r9
 c98:	8f 90       	pop	r8
 c9a:	08 95       	ret

00000c9c <draw_sprite>:
 c9c:	2f 92       	push	r2
 c9e:	3f 92       	push	r3
 ca0:	4f 92       	push	r4
 ca2:	5f 92       	push	r5
 ca4:	7f 92       	push	r7
 ca6:	8f 92       	push	r8
 ca8:	9f 92       	push	r9
 caa:	af 92       	push	r10
 cac:	bf 92       	push	r11
 cae:	cf 92       	push	r12
 cb0:	df 92       	push	r13
 cb2:	ef 92       	push	r14
 cb4:	ff 92       	push	r15
 cb6:	0f 93       	push	r16
 cb8:	1f 93       	push	r17
 cba:	df 93       	push	r29
 cbc:	cf 93       	push	r28
 cbe:	00 d0       	rcall	.+0      	; 0xcc0 <draw_sprite+0x24>
 cc0:	00 d0       	rcall	.+0      	; 0xcc2 <draw_sprite+0x26>
 cc2:	cd b7       	in	r28, 0x3d	; 61
 cc4:	de b7       	in	r29, 0x3e	; 62
 cc6:	2c 01       	movw	r4, r24
 cc8:	dc 01       	movw	r26, r24
 cca:	1a 96       	adiw	r26, 0x0a	; 10
 ccc:	8c 91       	ld	r24, X
 cce:	88 23       	and	r24, r24
 cd0:	09 f4       	brne	.+2      	; 0xcd4 <draw_sprite+0x38>
 cd2:	96 c0       	rjmp	.+300    	; 0xe00 <draw_sprite+0x164>
 cd4:	22 24       	eor	r2, r2
 cd6:	33 24       	eor	r3, r3
 cd8:	1a 82       	std	Y+2, r1	; 0x02
 cda:	19 82       	std	Y+1, r1	; 0x01
 cdc:	87 c0       	rjmp	.+270    	; 0xdec <draw_sprite+0x150>
 cde:	e9 81       	ldd	r30, Y+1	; 0x01
 ce0:	fa 81       	ldd	r31, Y+2	; 0x02
 ce2:	bf 01       	movw	r22, r30
 ce4:	88 27       	eor	r24, r24
 ce6:	77 fd       	sbrc	r23, 7
 ce8:	80 95       	com	r24
 cea:	98 2f       	mov	r25, r24
 cec:	ee dd       	rcall	.-1060   	; 0x8ca <__floatsisf>
 cee:	d2 01       	movw	r26, r4
 cf0:	14 96       	adiw	r26, 0x04	; 4
 cf2:	2d 91       	ld	r18, X+
 cf4:	3d 91       	ld	r19, X+
 cf6:	4d 91       	ld	r20, X+
 cf8:	5c 91       	ld	r21, X
 cfa:	17 97       	sbiw	r26, 0x07	; 7
 cfc:	7c dd       	rcall	.-1288   	; 0x7f6 <__addsf3>
 cfe:	5b 01       	movw	r10, r22
 d00:	6c 01       	movw	r12, r24
 d02:	20 e0       	ldi	r18, 0x00	; 0
 d04:	30 e0       	ldi	r19, 0x00	; 0
 d06:	40 e0       	ldi	r20, 0x00	; 0
 d08:	50 e0       	ldi	r21, 0x00	; 0
 d0a:	d9 dd       	rcall	.-1102   	; 0x8be <__cmpsf2>
 d0c:	87 fd       	sbrc	r24, 7
 d0e:	68 c0       	rjmp	.+208    	; 0xde0 <draw_sprite+0x144>
 d10:	c6 01       	movw	r24, r12
 d12:	b5 01       	movw	r22, r10
 d14:	20 e0       	ldi	r18, 0x00	; 0
 d16:	30 e0       	ldi	r19, 0x00	; 0
 d18:	40 e4       	ldi	r20, 0x40	; 64
 d1a:	52 e4       	ldi	r21, 0x42	; 66
 d1c:	86 de       	rcall	.-756    	; 0xa2a <__gesf2>
 d1e:	87 ff       	sbrs	r24, 7
 d20:	6f c0       	rjmp	.+222    	; 0xe00 <draw_sprite+0x164>
 d22:	1c 82       	std	Y+4, r1	; 0x04
 d24:	1b 82       	std	Y+3, r1	; 0x03
 d26:	45 c0       	rjmp	.+138    	; 0xdb2 <draw_sprite+0x116>
 d28:	d2 01       	movw	r26, r4
 d2a:	1b 96       	adiw	r26, 0x0b	; 11
 d2c:	ed 91       	ld	r30, X+
 d2e:	fc 91       	ld	r31, X
 d30:	1c 97       	sbiw	r26, 0x0c	; 12
 d32:	e2 0d       	add	r30, r2
 d34:	f3 1d       	adc	r31, r3
 d36:	70 80       	ld	r7, Z
 d38:	eb 81       	ldd	r30, Y+3	; 0x03
 d3a:	fc 81       	ldd	r31, Y+4	; 0x04
 d3c:	bf 01       	movw	r22, r30
 d3e:	88 27       	eor	r24, r24
 d40:	77 fd       	sbrc	r23, 7
 d42:	80 95       	com	r24
 d44:	98 2f       	mov	r25, r24
 d46:	c1 dd       	rcall	.-1150   	; 0x8ca <__floatsisf>
 d48:	d2 01       	movw	r26, r4
 d4a:	2d 91       	ld	r18, X+
 d4c:	3d 91       	ld	r19, X+
 d4e:	4d 91       	ld	r20, X+
 d50:	5c 91       	ld	r21, X
 d52:	51 dd       	rcall	.-1374   	; 0x7f6 <__addsf3>
 d54:	7b 01       	movw	r14, r22
 d56:	8c 01       	movw	r16, r24
 d58:	20 e0       	ldi	r18, 0x00	; 0
 d5a:	30 e0       	ldi	r19, 0x00	; 0
 d5c:	40 e0       	ldi	r20, 0x00	; 0
 d5e:	50 e0       	ldi	r21, 0x00	; 0
 d60:	64 de       	rcall	.-824    	; 0xa2a <__gesf2>
 d62:	88 23       	and	r24, r24
 d64:	cc f0       	brlt	.+50     	; 0xd98 <draw_sprite+0xfc>
 d66:	c8 01       	movw	r24, r16
 d68:	b7 01       	movw	r22, r14
 d6a:	20 e0       	ldi	r18, 0x00	; 0
 d6c:	30 e0       	ldi	r19, 0x00	; 0
 d6e:	48 ea       	ldi	r20, 0xA8	; 168
 d70:	52 e4       	ldi	r21, 0x42	; 66
 d72:	a5 dd       	rcall	.-1206   	; 0x8be <__cmpsf2>
 d74:	88 23       	and	r24, r24
 d76:	84 f4       	brge	.+32     	; 0xd98 <draw_sprite+0xfc>
 d78:	78 20       	and	r7, r8
 d7a:	71 f0       	breq	.+28     	; 0xd98 <draw_sprite+0xfc>
 d7c:	c8 01       	movw	r24, r16
 d7e:	b7 01       	movw	r22, r14
 d80:	a1 da       	rcall	.-2750   	; 0x2c4 <__fixunssfsi>
 d82:	7b 01       	movw	r14, r22
 d84:	8c 01       	movw	r16, r24
 d86:	c6 01       	movw	r24, r12
 d88:	b5 01       	movw	r22, r10
 d8a:	9c da       	rcall	.-2760   	; 0x2c4 <__fixunssfsi>
 d8c:	9b 01       	movw	r18, r22
 d8e:	ac 01       	movw	r20, r24
 d90:	8e 2d       	mov	r24, r14
 d92:	62 2f       	mov	r22, r18
 d94:	41 e0       	ldi	r20, 0x01	; 1
 d96:	55 de       	rcall	.-854    	; 0xa42 <set_pixel>
 d98:	eb 81       	ldd	r30, Y+3	; 0x03
 d9a:	fc 81       	ldd	r31, Y+4	; 0x04
 d9c:	31 96       	adiw	r30, 0x01	; 1
 d9e:	fc 83       	std	Y+4, r31	; 0x04
 da0:	eb 83       	std	Y+3, r30	; 0x03
 da2:	cf 01       	movw	r24, r30
 da4:	87 70       	andi	r24, 0x07	; 7
 da6:	90 70       	andi	r25, 0x00	; 0
 da8:	89 2b       	or	r24, r25
 daa:	39 f4       	brne	.+14     	; 0xdba <draw_sprite+0x11e>
 dac:	08 94       	sec
 dae:	21 1c       	adc	r2, r1
 db0:	31 1c       	adc	r3, r1
 db2:	90 e8       	ldi	r25, 0x80	; 128
 db4:	89 2e       	mov	r8, r25
 db6:	91 2c       	mov	r9, r1
 db8:	02 c0       	rjmp	.+4      	; 0xdbe <draw_sprite+0x122>
 dba:	95 94       	asr	r9
 dbc:	87 94       	ror	r8
 dbe:	d2 01       	movw	r26, r4
 dc0:	18 96       	adiw	r26, 0x08	; 8
 dc2:	8c 91       	ld	r24, X
 dc4:	90 e0       	ldi	r25, 0x00	; 0
 dc6:	eb 81       	ldd	r30, Y+3	; 0x03
 dc8:	fc 81       	ldd	r31, Y+4	; 0x04
 dca:	e8 17       	cp	r30, r24
 dcc:	f9 07       	cpc	r31, r25
 dce:	0c f4       	brge	.+2      	; 0xdd2 <draw_sprite+0x136>
 dd0:	ab cf       	rjmp	.-170    	; 0xd28 <draw_sprite+0x8c>
 dd2:	87 70       	andi	r24, 0x07	; 7
 dd4:	90 70       	andi	r25, 0x00	; 0
 dd6:	89 2b       	or	r24, r25
 dd8:	19 f0       	breq	.+6      	; 0xde0 <draw_sprite+0x144>
 dda:	08 94       	sec
 ddc:	21 1c       	adc	r2, r1
 dde:	31 1c       	adc	r3, r1
 de0:	29 81       	ldd	r18, Y+1	; 0x01
 de2:	3a 81       	ldd	r19, Y+2	; 0x02
 de4:	2f 5f       	subi	r18, 0xFF	; 255
 de6:	3f 4f       	sbci	r19, 0xFF	; 255
 de8:	3a 83       	std	Y+2, r19	; 0x02
 dea:	29 83       	std	Y+1, r18	; 0x01
 dec:	d2 01       	movw	r26, r4
 dee:	19 96       	adiw	r26, 0x09	; 9
 df0:	8c 91       	ld	r24, X
 df2:	90 e0       	ldi	r25, 0x00	; 0
 df4:	e9 81       	ldd	r30, Y+1	; 0x01
 df6:	fa 81       	ldd	r31, Y+2	; 0x02
 df8:	e8 17       	cp	r30, r24
 dfa:	f9 07       	cpc	r31, r25
 dfc:	0c f4       	brge	.+2      	; 0xe00 <draw_sprite+0x164>
 dfe:	6f cf       	rjmp	.-290    	; 0xcde <draw_sprite+0x42>
 e00:	0f 90       	pop	r0
 e02:	0f 90       	pop	r0
 e04:	0f 90       	pop	r0
 e06:	0f 90       	pop	r0
 e08:	cf 91       	pop	r28
 e0a:	df 91       	pop	r29
 e0c:	1f 91       	pop	r17
 e0e:	0f 91       	pop	r16
 e10:	ff 90       	pop	r15
 e12:	ef 90       	pop	r14
 e14:	df 90       	pop	r13
 e16:	cf 90       	pop	r12
 e18:	bf 90       	pop	r11
 e1a:	af 90       	pop	r10
 e1c:	9f 90       	pop	r9
 e1e:	8f 90       	pop	r8
 e20:	7f 90       	pop	r7
 e22:	5f 90       	pop	r5
 e24:	4f 90       	pop	r4
 e26:	3f 90       	pop	r3
 e28:	2f 90       	pop	r2
 e2a:	08 95       	ret

00000e2c <__divmodhi4>:
 e2c:	97 fb       	bst	r25, 7
 e2e:	09 2e       	mov	r0, r25
 e30:	07 26       	eor	r0, r23
 e32:	0a d0       	rcall	.+20     	; 0xe48 <__divmodhi4_neg1>
 e34:	77 fd       	sbrc	r23, 7
 e36:	04 d0       	rcall	.+8      	; 0xe40 <__divmodhi4_neg2>
 e38:	0c d0       	rcall	.+24     	; 0xe52 <__udivmodhi4>
 e3a:	06 d0       	rcall	.+12     	; 0xe48 <__divmodhi4_neg1>
 e3c:	00 20       	and	r0, r0
 e3e:	1a f4       	brpl	.+6      	; 0xe46 <__divmodhi4_exit>

00000e40 <__divmodhi4_neg2>:
 e40:	70 95       	com	r23
 e42:	61 95       	neg	r22
 e44:	7f 4f       	sbci	r23, 0xFF	; 255

00000e46 <__divmodhi4_exit>:
 e46:	08 95       	ret

00000e48 <__divmodhi4_neg1>:
 e48:	f6 f7       	brtc	.-4      	; 0xe46 <__divmodhi4_exit>
 e4a:	90 95       	com	r25
 e4c:	81 95       	neg	r24
 e4e:	9f 4f       	sbci	r25, 0xFF	; 255
 e50:	08 95       	ret

00000e52 <__udivmodhi4>:
 e52:	aa 1b       	sub	r26, r26
 e54:	bb 1b       	sub	r27, r27
 e56:	51 e1       	ldi	r21, 0x11	; 17
 e58:	07 c0       	rjmp	.+14     	; 0xe68 <__udivmodhi4_ep>

00000e5a <__udivmodhi4_loop>:
 e5a:	aa 1f       	adc	r26, r26
 e5c:	bb 1f       	adc	r27, r27
 e5e:	a6 17       	cp	r26, r22
 e60:	b7 07       	cpc	r27, r23
 e62:	10 f0       	brcs	.+4      	; 0xe68 <__udivmodhi4_ep>
 e64:	a6 1b       	sub	r26, r22
 e66:	b7 0b       	sbc	r27, r23

00000e68 <__udivmodhi4_ep>:
 e68:	88 1f       	adc	r24, r24
 e6a:	99 1f       	adc	r25, r25
 e6c:	5a 95       	dec	r21
 e6e:	a9 f7       	brne	.-22     	; 0xe5a <__udivmodhi4_loop>
 e70:	80 95       	com	r24
 e72:	90 95       	com	r25
 e74:	bc 01       	movw	r22, r24
 e76:	cd 01       	movw	r24, r26
 e78:	08 95       	ret

00000e7a <__prologue_saves__>:
 e7a:	2f 92       	push	r2
 e7c:	3f 92       	push	r3
 e7e:	4f 92       	push	r4
 e80:	5f 92       	push	r5
 e82:	6f 92       	push	r6
 e84:	7f 92       	push	r7
 e86:	8f 92       	push	r8
 e88:	9f 92       	push	r9
 e8a:	af 92       	push	r10
 e8c:	bf 92       	push	r11
 e8e:	cf 92       	push	r12
 e90:	df 92       	push	r13
 e92:	ef 92       	push	r14
 e94:	ff 92       	push	r15
 e96:	0f 93       	push	r16
 e98:	1f 93       	push	r17
 e9a:	cf 93       	push	r28
 e9c:	df 93       	push	r29
 e9e:	cd b7       	in	r28, 0x3d	; 61
 ea0:	de b7       	in	r29, 0x3e	; 62
 ea2:	ca 1b       	sub	r28, r26
 ea4:	db 0b       	sbc	r29, r27
 ea6:	0f b6       	in	r0, 0x3f	; 63
 ea8:	f8 94       	cli
 eaa:	de bf       	out	0x3e, r29	; 62
 eac:	0f be       	out	0x3f, r0	; 63
 eae:	cd bf       	out	0x3d, r28	; 61
 eb0:	09 94       	ijmp

00000eb2 <__epilogue_restores__>:
 eb2:	2a 88       	ldd	r2, Y+18	; 0x12
 eb4:	39 88       	ldd	r3, Y+17	; 0x11
 eb6:	48 88       	ldd	r4, Y+16	; 0x10
 eb8:	5f 84       	ldd	r5, Y+15	; 0x0f
 eba:	6e 84       	ldd	r6, Y+14	; 0x0e
 ebc:	7d 84       	ldd	r7, Y+13	; 0x0d
 ebe:	8c 84       	ldd	r8, Y+12	; 0x0c
 ec0:	9b 84       	ldd	r9, Y+11	; 0x0b
 ec2:	aa 84       	ldd	r10, Y+10	; 0x0a
 ec4:	b9 84       	ldd	r11, Y+9	; 0x09
 ec6:	c8 84       	ldd	r12, Y+8	; 0x08
 ec8:	df 80       	ldd	r13, Y+7	; 0x07
 eca:	ee 80       	ldd	r14, Y+6	; 0x06
 ecc:	fd 80       	ldd	r15, Y+5	; 0x05
 ece:	0c 81       	ldd	r16, Y+4	; 0x04
 ed0:	1b 81       	ldd	r17, Y+3	; 0x03
 ed2:	aa 81       	ldd	r26, Y+2	; 0x02
 ed4:	b9 81       	ldd	r27, Y+1	; 0x01
 ed6:	ce 0f       	add	r28, r30
 ed8:	d1 1d       	adc	r29, r1
 eda:	0f b6       	in	r0, 0x3f	; 63
 edc:	f8 94       	cli
 ede:	de bf       	out	0x3e, r29	; 62
 ee0:	0f be       	out	0x3f, r0	; 63
 ee2:	cd bf       	out	0x3d, r28	; 61
 ee4:	ed 01       	movw	r28, r26
 ee6:	08 95       	ret

00000ee8 <_exit>:
 ee8:	f8 94       	cli

00000eea <__stop_program>:
 eea:	ff cf       	rjmp	.-2      	; 0xeea <__stop_program>
