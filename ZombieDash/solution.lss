
solution.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000068  00800100  00001c9a  00001d2e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c9a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000220  00800168  00800168  00001d96  2**0
                  ALLOC
  3 .debug_aranges 000001f0  00000000  00000000  00001d96  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000040e  00000000  00000000  00001f86  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002119  00000000  00000000  00002394  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000f0c  00000000  00000000  000044ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000016d6  00000000  00000000  000053b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002a0  00000000  00000000  00006a90  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000650  00000000  00000000  00006d30  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000102a  00000000  00000000  00007380  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000220  00000000  00000000  000083aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c1       	rjmp	.+650    	; 0x28c <__ctors_end>
       2:	00 00       	nop
       4:	5f c1       	rjmp	.+702    	; 0x2c4 <__bad_interrupt>
       6:	00 00       	nop
       8:	5d c1       	rjmp	.+698    	; 0x2c4 <__bad_interrupt>
       a:	00 00       	nop
       c:	5b c1       	rjmp	.+694    	; 0x2c4 <__bad_interrupt>
       e:	00 00       	nop
      10:	59 c1       	rjmp	.+690    	; 0x2c4 <__bad_interrupt>
      12:	00 00       	nop
      14:	57 c1       	rjmp	.+686    	; 0x2c4 <__bad_interrupt>
      16:	00 00       	nop
      18:	55 c1       	rjmp	.+682    	; 0x2c4 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	53 c1       	rjmp	.+678    	; 0x2c4 <__bad_interrupt>
      1e:	00 00       	nop
      20:	51 c1       	rjmp	.+674    	; 0x2c4 <__bad_interrupt>
      22:	00 00       	nop
      24:	fb c4       	rjmp	.+2550   	; 0xa1c <__vector_9>
      26:	00 00       	nop
      28:	4d c1       	rjmp	.+666    	; 0x2c4 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4b c1       	rjmp	.+662    	; 0x2c4 <__bad_interrupt>
      2e:	00 00       	nop
      30:	49 c1       	rjmp	.+658    	; 0x2c4 <__bad_interrupt>
      32:	00 00       	nop
      34:	47 c1       	rjmp	.+654    	; 0x2c4 <__bad_interrupt>
      36:	00 00       	nop
      38:	45 c1       	rjmp	.+650    	; 0x2c4 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	43 c1       	rjmp	.+646    	; 0x2c4 <__bad_interrupt>
      3e:	00 00       	nop
      40:	41 c1       	rjmp	.+642    	; 0x2c4 <__bad_interrupt>
      42:	00 00       	nop
      44:	3f c1       	rjmp	.+638    	; 0x2c4 <__bad_interrupt>
      46:	00 00       	nop
      48:	3d c1       	rjmp	.+634    	; 0x2c4 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3b c1       	rjmp	.+630    	; 0x2c4 <__bad_interrupt>
      4e:	00 00       	nop
      50:	39 c1       	rjmp	.+626    	; 0x2c4 <__bad_interrupt>
      52:	00 00       	nop
      54:	37 c1       	rjmp	.+622    	; 0x2c4 <__bad_interrupt>
      56:	00 00       	nop
      58:	35 c1       	rjmp	.+618    	; 0x2c4 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	ec c5       	rjmp	.+3032   	; 0xc36 <__vector_23>
      5e:	00 00       	nop
      60:	31 c1       	rjmp	.+610    	; 0x2c4 <__bad_interrupt>
      62:	00 00       	nop
      64:	2f c1       	rjmp	.+606    	; 0x2c4 <__bad_interrupt>
      66:	00 00       	nop
      68:	2d c1       	rjmp	.+602    	; 0x2c4 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2b c1       	rjmp	.+598    	; 0x2c4 <__bad_interrupt>
      6e:	00 00       	nop
      70:	29 c1       	rjmp	.+594    	; 0x2c4 <__bad_interrupt>
      72:	00 00       	nop
      74:	27 c1       	rjmp	.+590    	; 0x2c4 <__bad_interrupt>
      76:	00 00       	nop
      78:	25 c1       	rjmp	.+586    	; 0x2c4 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	23 c1       	rjmp	.+582    	; 0x2c4 <__bad_interrupt>
      7e:	00 00       	nop
      80:	21 c1       	rjmp	.+578    	; 0x2c4 <__bad_interrupt>
      82:	00 00       	nop
      84:	1f c1       	rjmp	.+574    	; 0x2c4 <__bad_interrupt>
      86:	00 00       	nop
      88:	1d c1       	rjmp	.+570    	; 0x2c4 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	1b c1       	rjmp	.+566    	; 0x2c4 <__bad_interrupt>
      8e:	00 00       	nop
      90:	19 c1       	rjmp	.+562    	; 0x2c4 <__bad_interrupt>
      92:	00 00       	nop
      94:	17 c1       	rjmp	.+558    	; 0x2c4 <__bad_interrupt>
      96:	00 00       	nop
      98:	15 c1       	rjmp	.+554    	; 0x2c4 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	13 c1       	rjmp	.+550    	; 0x2c4 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	11 c1       	rjmp	.+546    	; 0x2c4 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	0f c1       	rjmp	.+542    	; 0x2c4 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0d c1       	rjmp	.+538    	; 0x2c4 <__bad_interrupt>
      aa:	00 00       	nop

000000ac <ASCII>:
      ac:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      bc:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      cc:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      dc:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      ec:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      fc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     10c:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     11c:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     12c:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     13c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     14c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     15c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     16c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     17c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     18c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     19c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     1ac:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1bc:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1cc:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1dc:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1ec:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1fc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     20c:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     21c:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     22c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     23c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     24c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     25c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     26c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     27c:	00 00 41 36 08 00 10 08 08 10 08 78 46 41 46 78     ..A6.......xFAFx

0000028c <__ctors_end>:
     28c:	11 24       	eor	r1, r1
     28e:	1f be       	out	0x3f, r1	; 63
     290:	cf ef       	ldi	r28, 0xFF	; 255
     292:	da e0       	ldi	r29, 0x0A	; 10
     294:	de bf       	out	0x3e, r29	; 62
     296:	cd bf       	out	0x3d, r28	; 61

00000298 <__do_copy_data>:
     298:	11 e0       	ldi	r17, 0x01	; 1
     29a:	a0 e0       	ldi	r26, 0x00	; 0
     29c:	b1 e0       	ldi	r27, 0x01	; 1
     29e:	ea e9       	ldi	r30, 0x9A	; 154
     2a0:	fc e1       	ldi	r31, 0x1C	; 28
     2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <.do_copy_data_start>

000002a4 <.do_copy_data_loop>:
     2a4:	05 90       	lpm	r0, Z+
     2a6:	0d 92       	st	X+, r0

000002a8 <.do_copy_data_start>:
     2a8:	a8 36       	cpi	r26, 0x68	; 104
     2aa:	b1 07       	cpc	r27, r17
     2ac:	d9 f7       	brne	.-10     	; 0x2a4 <.do_copy_data_loop>

000002ae <__do_clear_bss>:
     2ae:	13 e0       	ldi	r17, 0x03	; 3
     2b0:	a8 e6       	ldi	r26, 0x68	; 104
     2b2:	b1 e0       	ldi	r27, 0x01	; 1
     2b4:	01 c0       	rjmp	.+2      	; 0x2b8 <.do_clear_bss_start>

000002b6 <.do_clear_bss_loop>:
     2b6:	1d 92       	st	X+, r1

000002b8 <.do_clear_bss_start>:
     2b8:	a8 38       	cpi	r26, 0x88	; 136
     2ba:	b1 07       	cpc	r27, r17
     2bc:	e1 f7       	brne	.-8      	; 0x2b6 <.do_clear_bss_loop>
     2be:	a4 d5       	rcall	.+2888   	; 0xe08 <main>
     2c0:	0c 94 4b 0e 	jmp	0x1c96	; 0x1c96 <_exit>

000002c4 <__bad_interrupt>:
     2c4:	9d ce       	rjmp	.-710    	; 0x0 <__vectors>

000002c6 <__fixunssfsi>:
     2c6:	ef 92       	push	r14
     2c8:	ff 92       	push	r15
     2ca:	0f 93       	push	r16
     2cc:	1f 93       	push	r17
     2ce:	7b 01       	movw	r14, r22
     2d0:	8c 01       	movw	r16, r24
     2d2:	20 e0       	ldi	r18, 0x00	; 0
     2d4:	30 e0       	ldi	r19, 0x00	; 0
     2d6:	40 e0       	ldi	r20, 0x00	; 0
     2d8:	5f e4       	ldi	r21, 0x4F	; 79
     2da:	e3 d7       	rcall	.+4038   	; 0x12a2 <__gesf2>
     2dc:	88 23       	and	r24, r24
     2de:	7c f0       	brlt	.+30     	; 0x2fe <__fixunssfsi+0x38>
     2e0:	c8 01       	movw	r24, r16
     2e2:	b7 01       	movw	r22, r14
     2e4:	20 e0       	ldi	r18, 0x00	; 0
     2e6:	30 e0       	ldi	r19, 0x00	; 0
     2e8:	40 e0       	ldi	r20, 0x00	; 0
     2ea:	5f e4       	ldi	r21, 0x4F	; 79
     2ec:	bf d6       	rcall	.+3454   	; 0x106c <__subsf3>
     2ee:	b3 d1       	rcall	.+870    	; 0x656 <__fixsfsi>
     2f0:	9b 01       	movw	r18, r22
     2f2:	ac 01       	movw	r20, r24
     2f4:	20 50       	subi	r18, 0x00	; 0
     2f6:	30 40       	sbci	r19, 0x00	; 0
     2f8:	40 40       	sbci	r20, 0x00	; 0
     2fa:	50 48       	sbci	r21, 0x80	; 128
     2fc:	05 c0       	rjmp	.+10     	; 0x308 <__fixunssfsi+0x42>
     2fe:	c8 01       	movw	r24, r16
     300:	b7 01       	movw	r22, r14
     302:	a9 d1       	rcall	.+850    	; 0x656 <__fixsfsi>
     304:	9b 01       	movw	r18, r22
     306:	ac 01       	movw	r20, r24
     308:	b9 01       	movw	r22, r18
     30a:	ca 01       	movw	r24, r20
     30c:	1f 91       	pop	r17
     30e:	0f 91       	pop	r16
     310:	ff 90       	pop	r15
     312:	ef 90       	pop	r14
     314:	08 95       	ret

00000316 <__mulsf3>:
     316:	a0 e2       	ldi	r26, 0x20	; 32
     318:	b0 e0       	ldi	r27, 0x00	; 0
     31a:	e1 e9       	ldi	r30, 0x91	; 145
     31c:	f1 e0       	ldi	r31, 0x01	; 1
     31e:	0c 94 61 0d 	jmp	0x1ac2	; 0x1ac2 <__prologue_saves__>
     322:	69 83       	std	Y+1, r22	; 0x01
     324:	7a 83       	std	Y+2, r23	; 0x02
     326:	8b 83       	std	Y+3, r24	; 0x03
     328:	9c 83       	std	Y+4, r25	; 0x04
     32a:	2d 83       	std	Y+5, r18	; 0x05
     32c:	3e 83       	std	Y+6, r19	; 0x06
     32e:	4f 83       	std	Y+7, r20	; 0x07
     330:	58 87       	std	Y+8, r21	; 0x08
     332:	ce 01       	movw	r24, r28
     334:	01 96       	adiw	r24, 0x01	; 1
     336:	be 01       	movw	r22, r28
     338:	67 5f       	subi	r22, 0xF7	; 247
     33a:	7f 4f       	sbci	r23, 0xFF	; 255
     33c:	b4 d2       	rcall	.+1384   	; 0x8a6 <__unpack_f>
     33e:	ce 01       	movw	r24, r28
     340:	05 96       	adiw	r24, 0x05	; 5
     342:	be 01       	movw	r22, r28
     344:	6f 5e       	subi	r22, 0xEF	; 239
     346:	7f 4f       	sbci	r23, 0xFF	; 255
     348:	ae d2       	rcall	.+1372   	; 0x8a6 <__unpack_f>
     34a:	99 85       	ldd	r25, Y+9	; 0x09
     34c:	92 30       	cpi	r25, 0x02	; 2
     34e:	88 f0       	brcs	.+34     	; 0x372 <__mulsf3+0x5c>
     350:	89 89       	ldd	r24, Y+17	; 0x11
     352:	82 30       	cpi	r24, 0x02	; 2
     354:	c8 f0       	brcs	.+50     	; 0x388 <__mulsf3+0x72>
     356:	94 30       	cpi	r25, 0x04	; 4
     358:	19 f4       	brne	.+6      	; 0x360 <__mulsf3+0x4a>
     35a:	82 30       	cpi	r24, 0x02	; 2
     35c:	51 f4       	brne	.+20     	; 0x372 <__mulsf3+0x5c>
     35e:	04 c0       	rjmp	.+8      	; 0x368 <__mulsf3+0x52>
     360:	84 30       	cpi	r24, 0x04	; 4
     362:	29 f4       	brne	.+10     	; 0x36e <__mulsf3+0x58>
     364:	92 30       	cpi	r25, 0x02	; 2
     366:	81 f4       	brne	.+32     	; 0x388 <__mulsf3+0x72>
     368:	8c e5       	ldi	r24, 0x5C	; 92
     36a:	91 e0       	ldi	r25, 0x01	; 1
     36c:	c6 c0       	rjmp	.+396    	; 0x4fa <__mulsf3+0x1e4>
     36e:	92 30       	cpi	r25, 0x02	; 2
     370:	49 f4       	brne	.+18     	; 0x384 <__mulsf3+0x6e>
     372:	20 e0       	ldi	r18, 0x00	; 0
     374:	9a 85       	ldd	r25, Y+10	; 0x0a
     376:	8a 89       	ldd	r24, Y+18	; 0x12
     378:	98 13       	cpse	r25, r24
     37a:	21 e0       	ldi	r18, 0x01	; 1
     37c:	2a 87       	std	Y+10, r18	; 0x0a
     37e:	ce 01       	movw	r24, r28
     380:	09 96       	adiw	r24, 0x09	; 9
     382:	bb c0       	rjmp	.+374    	; 0x4fa <__mulsf3+0x1e4>
     384:	82 30       	cpi	r24, 0x02	; 2
     386:	49 f4       	brne	.+18     	; 0x39a <__mulsf3+0x84>
     388:	20 e0       	ldi	r18, 0x00	; 0
     38a:	9a 85       	ldd	r25, Y+10	; 0x0a
     38c:	8a 89       	ldd	r24, Y+18	; 0x12
     38e:	98 13       	cpse	r25, r24
     390:	21 e0       	ldi	r18, 0x01	; 1
     392:	2a 8b       	std	Y+18, r18	; 0x12
     394:	ce 01       	movw	r24, r28
     396:	41 96       	adiw	r24, 0x11	; 17
     398:	b0 c0       	rjmp	.+352    	; 0x4fa <__mulsf3+0x1e4>
     39a:	2d 84       	ldd	r2, Y+13	; 0x0d
     39c:	3e 84       	ldd	r3, Y+14	; 0x0e
     39e:	4f 84       	ldd	r4, Y+15	; 0x0f
     3a0:	58 88       	ldd	r5, Y+16	; 0x10
     3a2:	6d 88       	ldd	r6, Y+21	; 0x15
     3a4:	7e 88       	ldd	r7, Y+22	; 0x16
     3a6:	8f 88       	ldd	r8, Y+23	; 0x17
     3a8:	98 8c       	ldd	r9, Y+24	; 0x18
     3aa:	ee 24       	eor	r14, r14
     3ac:	ff 24       	eor	r15, r15
     3ae:	87 01       	movw	r16, r14
     3b0:	aa 24       	eor	r10, r10
     3b2:	bb 24       	eor	r11, r11
     3b4:	65 01       	movw	r12, r10
     3b6:	40 e0       	ldi	r20, 0x00	; 0
     3b8:	50 e0       	ldi	r21, 0x00	; 0
     3ba:	60 e0       	ldi	r22, 0x00	; 0
     3bc:	70 e0       	ldi	r23, 0x00	; 0
     3be:	e0 e0       	ldi	r30, 0x00	; 0
     3c0:	f0 e0       	ldi	r31, 0x00	; 0
     3c2:	c1 01       	movw	r24, r2
     3c4:	81 70       	andi	r24, 0x01	; 1
     3c6:	90 70       	andi	r25, 0x00	; 0
     3c8:	89 2b       	or	r24, r25
     3ca:	e9 f0       	breq	.+58     	; 0x406 <__mulsf3+0xf0>
     3cc:	e6 0c       	add	r14, r6
     3ce:	f7 1c       	adc	r15, r7
     3d0:	08 1d       	adc	r16, r8
     3d2:	19 1d       	adc	r17, r9
     3d4:	9a 01       	movw	r18, r20
     3d6:	ab 01       	movw	r20, r22
     3d8:	2a 0d       	add	r18, r10
     3da:	3b 1d       	adc	r19, r11
     3dc:	4c 1d       	adc	r20, r12
     3de:	5d 1d       	adc	r21, r13
     3e0:	80 e0       	ldi	r24, 0x00	; 0
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	a0 e0       	ldi	r26, 0x00	; 0
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e6 14       	cp	r14, r6
     3ea:	f7 04       	cpc	r15, r7
     3ec:	08 05       	cpc	r16, r8
     3ee:	19 05       	cpc	r17, r9
     3f0:	20 f4       	brcc	.+8      	; 0x3fa <__mulsf3+0xe4>
     3f2:	81 e0       	ldi	r24, 0x01	; 1
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	a0 e0       	ldi	r26, 0x00	; 0
     3f8:	b0 e0       	ldi	r27, 0x00	; 0
     3fa:	ba 01       	movw	r22, r20
     3fc:	a9 01       	movw	r20, r18
     3fe:	48 0f       	add	r20, r24
     400:	59 1f       	adc	r21, r25
     402:	6a 1f       	adc	r22, r26
     404:	7b 1f       	adc	r23, r27
     406:	aa 0c       	add	r10, r10
     408:	bb 1c       	adc	r11, r11
     40a:	cc 1c       	adc	r12, r12
     40c:	dd 1c       	adc	r13, r13
     40e:	97 fe       	sbrs	r9, 7
     410:	08 c0       	rjmp	.+16     	; 0x422 <__mulsf3+0x10c>
     412:	81 e0       	ldi	r24, 0x01	; 1
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	a0 e0       	ldi	r26, 0x00	; 0
     418:	b0 e0       	ldi	r27, 0x00	; 0
     41a:	a8 2a       	or	r10, r24
     41c:	b9 2a       	or	r11, r25
     41e:	ca 2a       	or	r12, r26
     420:	db 2a       	or	r13, r27
     422:	31 96       	adiw	r30, 0x01	; 1
     424:	e0 32       	cpi	r30, 0x20	; 32
     426:	f1 05       	cpc	r31, r1
     428:	49 f0       	breq	.+18     	; 0x43c <__mulsf3+0x126>
     42a:	66 0c       	add	r6, r6
     42c:	77 1c       	adc	r7, r7
     42e:	88 1c       	adc	r8, r8
     430:	99 1c       	adc	r9, r9
     432:	56 94       	lsr	r5
     434:	47 94       	ror	r4
     436:	37 94       	ror	r3
     438:	27 94       	ror	r2
     43a:	c3 cf       	rjmp	.-122    	; 0x3c2 <__mulsf3+0xac>
     43c:	fa 85       	ldd	r31, Y+10	; 0x0a
     43e:	ea 89       	ldd	r30, Y+18	; 0x12
     440:	2b 89       	ldd	r18, Y+19	; 0x13
     442:	3c 89       	ldd	r19, Y+20	; 0x14
     444:	8b 85       	ldd	r24, Y+11	; 0x0b
     446:	9c 85       	ldd	r25, Y+12	; 0x0c
     448:	28 0f       	add	r18, r24
     44a:	39 1f       	adc	r19, r25
     44c:	2e 5f       	subi	r18, 0xFE	; 254
     44e:	3f 4f       	sbci	r19, 0xFF	; 255
     450:	17 c0       	rjmp	.+46     	; 0x480 <__mulsf3+0x16a>
     452:	ca 01       	movw	r24, r20
     454:	81 70       	andi	r24, 0x01	; 1
     456:	90 70       	andi	r25, 0x00	; 0
     458:	89 2b       	or	r24, r25
     45a:	61 f0       	breq	.+24     	; 0x474 <__mulsf3+0x15e>
     45c:	16 95       	lsr	r17
     45e:	07 95       	ror	r16
     460:	f7 94       	ror	r15
     462:	e7 94       	ror	r14
     464:	80 e0       	ldi	r24, 0x00	; 0
     466:	90 e0       	ldi	r25, 0x00	; 0
     468:	a0 e0       	ldi	r26, 0x00	; 0
     46a:	b0 e8       	ldi	r27, 0x80	; 128
     46c:	e8 2a       	or	r14, r24
     46e:	f9 2a       	or	r15, r25
     470:	0a 2b       	or	r16, r26
     472:	1b 2b       	or	r17, r27
     474:	76 95       	lsr	r23
     476:	67 95       	ror	r22
     478:	57 95       	ror	r21
     47a:	47 95       	ror	r20
     47c:	2f 5f       	subi	r18, 0xFF	; 255
     47e:	3f 4f       	sbci	r19, 0xFF	; 255
     480:	77 fd       	sbrc	r23, 7
     482:	e7 cf       	rjmp	.-50     	; 0x452 <__mulsf3+0x13c>
     484:	0c c0       	rjmp	.+24     	; 0x49e <__mulsf3+0x188>
     486:	44 0f       	add	r20, r20
     488:	55 1f       	adc	r21, r21
     48a:	66 1f       	adc	r22, r22
     48c:	77 1f       	adc	r23, r23
     48e:	17 fd       	sbrc	r17, 7
     490:	41 60       	ori	r20, 0x01	; 1
     492:	ee 0c       	add	r14, r14
     494:	ff 1c       	adc	r15, r15
     496:	00 1f       	adc	r16, r16
     498:	11 1f       	adc	r17, r17
     49a:	21 50       	subi	r18, 0x01	; 1
     49c:	30 40       	sbci	r19, 0x00	; 0
     49e:	40 30       	cpi	r20, 0x00	; 0
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	59 07       	cpc	r21, r25
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	69 07       	cpc	r22, r25
     4a8:	90 e4       	ldi	r25, 0x40	; 64
     4aa:	79 07       	cpc	r23, r25
     4ac:	60 f3       	brcs	.-40     	; 0x486 <__mulsf3+0x170>
     4ae:	2b 8f       	std	Y+27, r18	; 0x1b
     4b0:	3c 8f       	std	Y+28, r19	; 0x1c
     4b2:	db 01       	movw	r26, r22
     4b4:	ca 01       	movw	r24, r20
     4b6:	8f 77       	andi	r24, 0x7F	; 127
     4b8:	90 70       	andi	r25, 0x00	; 0
     4ba:	a0 70       	andi	r26, 0x00	; 0
     4bc:	b0 70       	andi	r27, 0x00	; 0
     4be:	80 34       	cpi	r24, 0x40	; 64
     4c0:	91 05       	cpc	r25, r1
     4c2:	a1 05       	cpc	r26, r1
     4c4:	b1 05       	cpc	r27, r1
     4c6:	61 f4       	brne	.+24     	; 0x4e0 <__mulsf3+0x1ca>
     4c8:	47 fd       	sbrc	r20, 7
     4ca:	0a c0       	rjmp	.+20     	; 0x4e0 <__mulsf3+0x1ca>
     4cc:	e1 14       	cp	r14, r1
     4ce:	f1 04       	cpc	r15, r1
     4d0:	01 05       	cpc	r16, r1
     4d2:	11 05       	cpc	r17, r1
     4d4:	29 f0       	breq	.+10     	; 0x4e0 <__mulsf3+0x1ca>
     4d6:	40 5c       	subi	r20, 0xC0	; 192
     4d8:	5f 4f       	sbci	r21, 0xFF	; 255
     4da:	6f 4f       	sbci	r22, 0xFF	; 255
     4dc:	7f 4f       	sbci	r23, 0xFF	; 255
     4de:	40 78       	andi	r20, 0x80	; 128
     4e0:	1a 8e       	std	Y+26, r1	; 0x1a
     4e2:	fe 17       	cp	r31, r30
     4e4:	11 f0       	breq	.+4      	; 0x4ea <__mulsf3+0x1d4>
     4e6:	81 e0       	ldi	r24, 0x01	; 1
     4e8:	8a 8f       	std	Y+26, r24	; 0x1a
     4ea:	4d 8f       	std	Y+29, r20	; 0x1d
     4ec:	5e 8f       	std	Y+30, r21	; 0x1e
     4ee:	6f 8f       	std	Y+31, r22	; 0x1f
     4f0:	78 a3       	std	Y+32, r23	; 0x20
     4f2:	83 e0       	ldi	r24, 0x03	; 3
     4f4:	89 8f       	std	Y+25, r24	; 0x19
     4f6:	ce 01       	movw	r24, r28
     4f8:	49 96       	adiw	r24, 0x19	; 25
     4fa:	00 d1       	rcall	.+512    	; 0x6fc <__pack_f>
     4fc:	a0 96       	adiw	r28, 0x20	; 32
     4fe:	e2 e1       	ldi	r30, 0x12	; 18
     500:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__epilogue_restores__>

00000504 <__divsf3>:
     504:	a8 e1       	ldi	r26, 0x18	; 24
     506:	b0 e0       	ldi	r27, 0x00	; 0
     508:	e8 e8       	ldi	r30, 0x88	; 136
     50a:	f2 e0       	ldi	r31, 0x02	; 2
     50c:	0c 94 69 0d 	jmp	0x1ad2	; 0x1ad2 <__prologue_saves__+0x10>
     510:	69 83       	std	Y+1, r22	; 0x01
     512:	7a 83       	std	Y+2, r23	; 0x02
     514:	8b 83       	std	Y+3, r24	; 0x03
     516:	9c 83       	std	Y+4, r25	; 0x04
     518:	2d 83       	std	Y+5, r18	; 0x05
     51a:	3e 83       	std	Y+6, r19	; 0x06
     51c:	4f 83       	std	Y+7, r20	; 0x07
     51e:	58 87       	std	Y+8, r21	; 0x08
     520:	b9 e0       	ldi	r27, 0x09	; 9
     522:	eb 2e       	mov	r14, r27
     524:	f1 2c       	mov	r15, r1
     526:	ec 0e       	add	r14, r28
     528:	fd 1e       	adc	r15, r29
     52a:	ce 01       	movw	r24, r28
     52c:	01 96       	adiw	r24, 0x01	; 1
     52e:	b7 01       	movw	r22, r14
     530:	ba d1       	rcall	.+884    	; 0x8a6 <__unpack_f>
     532:	8e 01       	movw	r16, r28
     534:	0f 5e       	subi	r16, 0xEF	; 239
     536:	1f 4f       	sbci	r17, 0xFF	; 255
     538:	ce 01       	movw	r24, r28
     53a:	05 96       	adiw	r24, 0x05	; 5
     53c:	b8 01       	movw	r22, r16
     53e:	b3 d1       	rcall	.+870    	; 0x8a6 <__unpack_f>
     540:	29 85       	ldd	r18, Y+9	; 0x09
     542:	22 30       	cpi	r18, 0x02	; 2
     544:	08 f4       	brcc	.+2      	; 0x548 <__divsf3+0x44>
     546:	7e c0       	rjmp	.+252    	; 0x644 <__divsf3+0x140>
     548:	39 89       	ldd	r19, Y+17	; 0x11
     54a:	32 30       	cpi	r19, 0x02	; 2
     54c:	10 f4       	brcc	.+4      	; 0x552 <__divsf3+0x4e>
     54e:	b8 01       	movw	r22, r16
     550:	7c c0       	rjmp	.+248    	; 0x64a <__divsf3+0x146>
     552:	8a 85       	ldd	r24, Y+10	; 0x0a
     554:	9a 89       	ldd	r25, Y+18	; 0x12
     556:	89 27       	eor	r24, r25
     558:	8a 87       	std	Y+10, r24	; 0x0a
     55a:	24 30       	cpi	r18, 0x04	; 4
     55c:	11 f0       	breq	.+4      	; 0x562 <__divsf3+0x5e>
     55e:	22 30       	cpi	r18, 0x02	; 2
     560:	31 f4       	brne	.+12     	; 0x56e <__divsf3+0x6a>
     562:	23 17       	cp	r18, r19
     564:	09 f0       	breq	.+2      	; 0x568 <__divsf3+0x64>
     566:	6e c0       	rjmp	.+220    	; 0x644 <__divsf3+0x140>
     568:	6c e5       	ldi	r22, 0x5C	; 92
     56a:	71 e0       	ldi	r23, 0x01	; 1
     56c:	6e c0       	rjmp	.+220    	; 0x64a <__divsf3+0x146>
     56e:	34 30       	cpi	r19, 0x04	; 4
     570:	39 f4       	brne	.+14     	; 0x580 <__divsf3+0x7c>
     572:	1d 86       	std	Y+13, r1	; 0x0d
     574:	1e 86       	std	Y+14, r1	; 0x0e
     576:	1f 86       	std	Y+15, r1	; 0x0f
     578:	18 8a       	std	Y+16, r1	; 0x10
     57a:	1c 86       	std	Y+12, r1	; 0x0c
     57c:	1b 86       	std	Y+11, r1	; 0x0b
     57e:	04 c0       	rjmp	.+8      	; 0x588 <__divsf3+0x84>
     580:	32 30       	cpi	r19, 0x02	; 2
     582:	21 f4       	brne	.+8      	; 0x58c <__divsf3+0x88>
     584:	84 e0       	ldi	r24, 0x04	; 4
     586:	89 87       	std	Y+9, r24	; 0x09
     588:	b7 01       	movw	r22, r14
     58a:	5f c0       	rjmp	.+190    	; 0x64a <__divsf3+0x146>
     58c:	2b 85       	ldd	r18, Y+11	; 0x0b
     58e:	3c 85       	ldd	r19, Y+12	; 0x0c
     590:	8b 89       	ldd	r24, Y+19	; 0x13
     592:	9c 89       	ldd	r25, Y+20	; 0x14
     594:	28 1b       	sub	r18, r24
     596:	39 0b       	sbc	r19, r25
     598:	3c 87       	std	Y+12, r19	; 0x0c
     59a:	2b 87       	std	Y+11, r18	; 0x0b
     59c:	ed 84       	ldd	r14, Y+13	; 0x0d
     59e:	fe 84       	ldd	r15, Y+14	; 0x0e
     5a0:	0f 85       	ldd	r16, Y+15	; 0x0f
     5a2:	18 89       	ldd	r17, Y+16	; 0x10
     5a4:	ad 88       	ldd	r10, Y+21	; 0x15
     5a6:	be 88       	ldd	r11, Y+22	; 0x16
     5a8:	cf 88       	ldd	r12, Y+23	; 0x17
     5aa:	d8 8c       	ldd	r13, Y+24	; 0x18
     5ac:	ea 14       	cp	r14, r10
     5ae:	fb 04       	cpc	r15, r11
     5b0:	0c 05       	cpc	r16, r12
     5b2:	1d 05       	cpc	r17, r13
     5b4:	40 f4       	brcc	.+16     	; 0x5c6 <__divsf3+0xc2>
     5b6:	ee 0c       	add	r14, r14
     5b8:	ff 1c       	adc	r15, r15
     5ba:	00 1f       	adc	r16, r16
     5bc:	11 1f       	adc	r17, r17
     5be:	21 50       	subi	r18, 0x01	; 1
     5c0:	30 40       	sbci	r19, 0x00	; 0
     5c2:	3c 87       	std	Y+12, r19	; 0x0c
     5c4:	2b 87       	std	Y+11, r18	; 0x0b
     5c6:	20 e0       	ldi	r18, 0x00	; 0
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	40 e0       	ldi	r20, 0x00	; 0
     5cc:	50 e0       	ldi	r21, 0x00	; 0
     5ce:	80 e0       	ldi	r24, 0x00	; 0
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	a0 e0       	ldi	r26, 0x00	; 0
     5d4:	b0 e4       	ldi	r27, 0x40	; 64
     5d6:	60 e0       	ldi	r22, 0x00	; 0
     5d8:	70 e0       	ldi	r23, 0x00	; 0
     5da:	ea 14       	cp	r14, r10
     5dc:	fb 04       	cpc	r15, r11
     5de:	0c 05       	cpc	r16, r12
     5e0:	1d 05       	cpc	r17, r13
     5e2:	40 f0       	brcs	.+16     	; 0x5f4 <__divsf3+0xf0>
     5e4:	28 2b       	or	r18, r24
     5e6:	39 2b       	or	r19, r25
     5e8:	4a 2b       	or	r20, r26
     5ea:	5b 2b       	or	r21, r27
     5ec:	ea 18       	sub	r14, r10
     5ee:	fb 08       	sbc	r15, r11
     5f0:	0c 09       	sbc	r16, r12
     5f2:	1d 09       	sbc	r17, r13
     5f4:	b6 95       	lsr	r27
     5f6:	a7 95       	ror	r26
     5f8:	97 95       	ror	r25
     5fa:	87 95       	ror	r24
     5fc:	ee 0c       	add	r14, r14
     5fe:	ff 1c       	adc	r15, r15
     600:	00 1f       	adc	r16, r16
     602:	11 1f       	adc	r17, r17
     604:	6f 5f       	subi	r22, 0xFF	; 255
     606:	7f 4f       	sbci	r23, 0xFF	; 255
     608:	6f 31       	cpi	r22, 0x1F	; 31
     60a:	71 05       	cpc	r23, r1
     60c:	31 f7       	brne	.-52     	; 0x5da <__divsf3+0xd6>
     60e:	da 01       	movw	r26, r20
     610:	c9 01       	movw	r24, r18
     612:	8f 77       	andi	r24, 0x7F	; 127
     614:	90 70       	andi	r25, 0x00	; 0
     616:	a0 70       	andi	r26, 0x00	; 0
     618:	b0 70       	andi	r27, 0x00	; 0
     61a:	80 34       	cpi	r24, 0x40	; 64
     61c:	91 05       	cpc	r25, r1
     61e:	a1 05       	cpc	r26, r1
     620:	b1 05       	cpc	r27, r1
     622:	61 f4       	brne	.+24     	; 0x63c <__divsf3+0x138>
     624:	27 fd       	sbrc	r18, 7
     626:	0a c0       	rjmp	.+20     	; 0x63c <__divsf3+0x138>
     628:	e1 14       	cp	r14, r1
     62a:	f1 04       	cpc	r15, r1
     62c:	01 05       	cpc	r16, r1
     62e:	11 05       	cpc	r17, r1
     630:	29 f0       	breq	.+10     	; 0x63c <__divsf3+0x138>
     632:	20 5c       	subi	r18, 0xC0	; 192
     634:	3f 4f       	sbci	r19, 0xFF	; 255
     636:	4f 4f       	sbci	r20, 0xFF	; 255
     638:	5f 4f       	sbci	r21, 0xFF	; 255
     63a:	20 78       	andi	r18, 0x80	; 128
     63c:	2d 87       	std	Y+13, r18	; 0x0d
     63e:	3e 87       	std	Y+14, r19	; 0x0e
     640:	4f 87       	std	Y+15, r20	; 0x0f
     642:	58 8b       	std	Y+16, r21	; 0x10
     644:	be 01       	movw	r22, r28
     646:	67 5f       	subi	r22, 0xF7	; 247
     648:	7f 4f       	sbci	r23, 0xFF	; 255
     64a:	cb 01       	movw	r24, r22
     64c:	57 d0       	rcall	.+174    	; 0x6fc <__pack_f>
     64e:	68 96       	adiw	r28, 0x18	; 24
     650:	ea e0       	ldi	r30, 0x0A	; 10
     652:	0c 94 85 0d 	jmp	0x1b0a	; 0x1b0a <__epilogue_restores__+0x10>

00000656 <__fixsfsi>:
     656:	ac e0       	ldi	r26, 0x0C	; 12
     658:	b0 e0       	ldi	r27, 0x00	; 0
     65a:	e1 e3       	ldi	r30, 0x31	; 49
     65c:	f3 e0       	ldi	r31, 0x03	; 3
     65e:	0c 94 71 0d 	jmp	0x1ae2	; 0x1ae2 <__prologue_saves__+0x20>
     662:	69 83       	std	Y+1, r22	; 0x01
     664:	7a 83       	std	Y+2, r23	; 0x02
     666:	8b 83       	std	Y+3, r24	; 0x03
     668:	9c 83       	std	Y+4, r25	; 0x04
     66a:	ce 01       	movw	r24, r28
     66c:	01 96       	adiw	r24, 0x01	; 1
     66e:	be 01       	movw	r22, r28
     670:	6b 5f       	subi	r22, 0xFB	; 251
     672:	7f 4f       	sbci	r23, 0xFF	; 255
     674:	18 d1       	rcall	.+560    	; 0x8a6 <__unpack_f>
     676:	8d 81       	ldd	r24, Y+5	; 0x05
     678:	82 30       	cpi	r24, 0x02	; 2
     67a:	61 f1       	breq	.+88     	; 0x6d4 <__fixsfsi+0x7e>
     67c:	82 30       	cpi	r24, 0x02	; 2
     67e:	50 f1       	brcs	.+84     	; 0x6d4 <__fixsfsi+0x7e>
     680:	84 30       	cpi	r24, 0x04	; 4
     682:	21 f4       	brne	.+8      	; 0x68c <__fixsfsi+0x36>
     684:	8e 81       	ldd	r24, Y+6	; 0x06
     686:	88 23       	and	r24, r24
     688:	51 f1       	breq	.+84     	; 0x6de <__fixsfsi+0x88>
     68a:	2e c0       	rjmp	.+92     	; 0x6e8 <__fixsfsi+0x92>
     68c:	2f 81       	ldd	r18, Y+7	; 0x07
     68e:	38 85       	ldd	r19, Y+8	; 0x08
     690:	37 fd       	sbrc	r19, 7
     692:	20 c0       	rjmp	.+64     	; 0x6d4 <__fixsfsi+0x7e>
     694:	6e 81       	ldd	r22, Y+6	; 0x06
     696:	2f 31       	cpi	r18, 0x1F	; 31
     698:	31 05       	cpc	r19, r1
     69a:	1c f0       	brlt	.+6      	; 0x6a2 <__fixsfsi+0x4c>
     69c:	66 23       	and	r22, r22
     69e:	f9 f0       	breq	.+62     	; 0x6de <__fixsfsi+0x88>
     6a0:	23 c0       	rjmp	.+70     	; 0x6e8 <__fixsfsi+0x92>
     6a2:	8e e1       	ldi	r24, 0x1E	; 30
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	82 1b       	sub	r24, r18
     6a8:	93 0b       	sbc	r25, r19
     6aa:	29 85       	ldd	r18, Y+9	; 0x09
     6ac:	3a 85       	ldd	r19, Y+10	; 0x0a
     6ae:	4b 85       	ldd	r20, Y+11	; 0x0b
     6b0:	5c 85       	ldd	r21, Y+12	; 0x0c
     6b2:	04 c0       	rjmp	.+8      	; 0x6bc <__fixsfsi+0x66>
     6b4:	56 95       	lsr	r21
     6b6:	47 95       	ror	r20
     6b8:	37 95       	ror	r19
     6ba:	27 95       	ror	r18
     6bc:	8a 95       	dec	r24
     6be:	d2 f7       	brpl	.-12     	; 0x6b4 <__fixsfsi+0x5e>
     6c0:	66 23       	and	r22, r22
     6c2:	b1 f0       	breq	.+44     	; 0x6f0 <__fixsfsi+0x9a>
     6c4:	50 95       	com	r21
     6c6:	40 95       	com	r20
     6c8:	30 95       	com	r19
     6ca:	21 95       	neg	r18
     6cc:	3f 4f       	sbci	r19, 0xFF	; 255
     6ce:	4f 4f       	sbci	r20, 0xFF	; 255
     6d0:	5f 4f       	sbci	r21, 0xFF	; 255
     6d2:	0e c0       	rjmp	.+28     	; 0x6f0 <__fixsfsi+0x9a>
     6d4:	20 e0       	ldi	r18, 0x00	; 0
     6d6:	30 e0       	ldi	r19, 0x00	; 0
     6d8:	40 e0       	ldi	r20, 0x00	; 0
     6da:	50 e0       	ldi	r21, 0x00	; 0
     6dc:	09 c0       	rjmp	.+18     	; 0x6f0 <__fixsfsi+0x9a>
     6de:	2f ef       	ldi	r18, 0xFF	; 255
     6e0:	3f ef       	ldi	r19, 0xFF	; 255
     6e2:	4f ef       	ldi	r20, 0xFF	; 255
     6e4:	5f e7       	ldi	r21, 0x7F	; 127
     6e6:	04 c0       	rjmp	.+8      	; 0x6f0 <__fixsfsi+0x9a>
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e8       	ldi	r21, 0x80	; 128
     6f0:	b9 01       	movw	r22, r18
     6f2:	ca 01       	movw	r24, r20
     6f4:	2c 96       	adiw	r28, 0x0c	; 12
     6f6:	e2 e0       	ldi	r30, 0x02	; 2
     6f8:	0c 94 8d 0d 	jmp	0x1b1a	; 0x1b1a <__epilogue_restores__+0x20>

000006fc <__pack_f>:
     6fc:	df 92       	push	r13
     6fe:	ef 92       	push	r14
     700:	ff 92       	push	r15
     702:	0f 93       	push	r16
     704:	1f 93       	push	r17
     706:	fc 01       	movw	r30, r24
     708:	e4 80       	ldd	r14, Z+4	; 0x04
     70a:	f5 80       	ldd	r15, Z+5	; 0x05
     70c:	06 81       	ldd	r16, Z+6	; 0x06
     70e:	17 81       	ldd	r17, Z+7	; 0x07
     710:	d1 80       	ldd	r13, Z+1	; 0x01
     712:	80 81       	ld	r24, Z
     714:	82 30       	cpi	r24, 0x02	; 2
     716:	48 f4       	brcc	.+18     	; 0x72a <__pack_f+0x2e>
     718:	80 e0       	ldi	r24, 0x00	; 0
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	a0 e1       	ldi	r26, 0x10	; 16
     71e:	b0 e0       	ldi	r27, 0x00	; 0
     720:	e8 2a       	or	r14, r24
     722:	f9 2a       	or	r15, r25
     724:	0a 2b       	or	r16, r26
     726:	1b 2b       	or	r17, r27
     728:	a5 c0       	rjmp	.+330    	; 0x874 <__pack_f+0x178>
     72a:	84 30       	cpi	r24, 0x04	; 4
     72c:	09 f4       	brne	.+2      	; 0x730 <__pack_f+0x34>
     72e:	9f c0       	rjmp	.+318    	; 0x86e <__pack_f+0x172>
     730:	82 30       	cpi	r24, 0x02	; 2
     732:	21 f4       	brne	.+8      	; 0x73c <__pack_f+0x40>
     734:	ee 24       	eor	r14, r14
     736:	ff 24       	eor	r15, r15
     738:	87 01       	movw	r16, r14
     73a:	05 c0       	rjmp	.+10     	; 0x746 <__pack_f+0x4a>
     73c:	e1 14       	cp	r14, r1
     73e:	f1 04       	cpc	r15, r1
     740:	01 05       	cpc	r16, r1
     742:	11 05       	cpc	r17, r1
     744:	19 f4       	brne	.+6      	; 0x74c <__pack_f+0x50>
     746:	e0 e0       	ldi	r30, 0x00	; 0
     748:	f0 e0       	ldi	r31, 0x00	; 0
     74a:	96 c0       	rjmp	.+300    	; 0x878 <__pack_f+0x17c>
     74c:	62 81       	ldd	r22, Z+2	; 0x02
     74e:	73 81       	ldd	r23, Z+3	; 0x03
     750:	9f ef       	ldi	r25, 0xFF	; 255
     752:	62 38       	cpi	r22, 0x82	; 130
     754:	79 07       	cpc	r23, r25
     756:	0c f0       	brlt	.+2      	; 0x75a <__pack_f+0x5e>
     758:	5b c0       	rjmp	.+182    	; 0x810 <__pack_f+0x114>
     75a:	22 e8       	ldi	r18, 0x82	; 130
     75c:	3f ef       	ldi	r19, 0xFF	; 255
     75e:	26 1b       	sub	r18, r22
     760:	37 0b       	sbc	r19, r23
     762:	2a 31       	cpi	r18, 0x1A	; 26
     764:	31 05       	cpc	r19, r1
     766:	2c f0       	brlt	.+10     	; 0x772 <__pack_f+0x76>
     768:	20 e0       	ldi	r18, 0x00	; 0
     76a:	30 e0       	ldi	r19, 0x00	; 0
     76c:	40 e0       	ldi	r20, 0x00	; 0
     76e:	50 e0       	ldi	r21, 0x00	; 0
     770:	2a c0       	rjmp	.+84     	; 0x7c6 <__pack_f+0xca>
     772:	b8 01       	movw	r22, r16
     774:	a7 01       	movw	r20, r14
     776:	02 2e       	mov	r0, r18
     778:	04 c0       	rjmp	.+8      	; 0x782 <__pack_f+0x86>
     77a:	76 95       	lsr	r23
     77c:	67 95       	ror	r22
     77e:	57 95       	ror	r21
     780:	47 95       	ror	r20
     782:	0a 94       	dec	r0
     784:	d2 f7       	brpl	.-12     	; 0x77a <__pack_f+0x7e>
     786:	81 e0       	ldi	r24, 0x01	; 1
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	a0 e0       	ldi	r26, 0x00	; 0
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	04 c0       	rjmp	.+8      	; 0x798 <__pack_f+0x9c>
     790:	88 0f       	add	r24, r24
     792:	99 1f       	adc	r25, r25
     794:	aa 1f       	adc	r26, r26
     796:	bb 1f       	adc	r27, r27
     798:	2a 95       	dec	r18
     79a:	d2 f7       	brpl	.-12     	; 0x790 <__pack_f+0x94>
     79c:	01 97       	sbiw	r24, 0x01	; 1
     79e:	a1 09       	sbc	r26, r1
     7a0:	b1 09       	sbc	r27, r1
     7a2:	8e 21       	and	r24, r14
     7a4:	9f 21       	and	r25, r15
     7a6:	a0 23       	and	r26, r16
     7a8:	b1 23       	and	r27, r17
     7aa:	00 97       	sbiw	r24, 0x00	; 0
     7ac:	a1 05       	cpc	r26, r1
     7ae:	b1 05       	cpc	r27, r1
     7b0:	21 f0       	breq	.+8      	; 0x7ba <__pack_f+0xbe>
     7b2:	81 e0       	ldi	r24, 0x01	; 1
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	a0 e0       	ldi	r26, 0x00	; 0
     7b8:	b0 e0       	ldi	r27, 0x00	; 0
     7ba:	9a 01       	movw	r18, r20
     7bc:	ab 01       	movw	r20, r22
     7be:	28 2b       	or	r18, r24
     7c0:	39 2b       	or	r19, r25
     7c2:	4a 2b       	or	r20, r26
     7c4:	5b 2b       	or	r21, r27
     7c6:	da 01       	movw	r26, r20
     7c8:	c9 01       	movw	r24, r18
     7ca:	8f 77       	andi	r24, 0x7F	; 127
     7cc:	90 70       	andi	r25, 0x00	; 0
     7ce:	a0 70       	andi	r26, 0x00	; 0
     7d0:	b0 70       	andi	r27, 0x00	; 0
     7d2:	80 34       	cpi	r24, 0x40	; 64
     7d4:	91 05       	cpc	r25, r1
     7d6:	a1 05       	cpc	r26, r1
     7d8:	b1 05       	cpc	r27, r1
     7da:	39 f4       	brne	.+14     	; 0x7ea <__pack_f+0xee>
     7dc:	27 ff       	sbrs	r18, 7
     7de:	09 c0       	rjmp	.+18     	; 0x7f2 <__pack_f+0xf6>
     7e0:	20 5c       	subi	r18, 0xC0	; 192
     7e2:	3f 4f       	sbci	r19, 0xFF	; 255
     7e4:	4f 4f       	sbci	r20, 0xFF	; 255
     7e6:	5f 4f       	sbci	r21, 0xFF	; 255
     7e8:	04 c0       	rjmp	.+8      	; 0x7f2 <__pack_f+0xf6>
     7ea:	21 5c       	subi	r18, 0xC1	; 193
     7ec:	3f 4f       	sbci	r19, 0xFF	; 255
     7ee:	4f 4f       	sbci	r20, 0xFF	; 255
     7f0:	5f 4f       	sbci	r21, 0xFF	; 255
     7f2:	e0 e0       	ldi	r30, 0x00	; 0
     7f4:	f0 e0       	ldi	r31, 0x00	; 0
     7f6:	20 30       	cpi	r18, 0x00	; 0
     7f8:	a0 e0       	ldi	r26, 0x00	; 0
     7fa:	3a 07       	cpc	r19, r26
     7fc:	a0 e0       	ldi	r26, 0x00	; 0
     7fe:	4a 07       	cpc	r20, r26
     800:	a0 e4       	ldi	r26, 0x40	; 64
     802:	5a 07       	cpc	r21, r26
     804:	10 f0       	brcs	.+4      	; 0x80a <__pack_f+0x10e>
     806:	e1 e0       	ldi	r30, 0x01	; 1
     808:	f0 e0       	ldi	r31, 0x00	; 0
     80a:	79 01       	movw	r14, r18
     80c:	8a 01       	movw	r16, r20
     80e:	27 c0       	rjmp	.+78     	; 0x85e <__pack_f+0x162>
     810:	60 38       	cpi	r22, 0x80	; 128
     812:	71 05       	cpc	r23, r1
     814:	64 f5       	brge	.+88     	; 0x86e <__pack_f+0x172>
     816:	fb 01       	movw	r30, r22
     818:	e1 58       	subi	r30, 0x81	; 129
     81a:	ff 4f       	sbci	r31, 0xFF	; 255
     81c:	d8 01       	movw	r26, r16
     81e:	c7 01       	movw	r24, r14
     820:	8f 77       	andi	r24, 0x7F	; 127
     822:	90 70       	andi	r25, 0x00	; 0
     824:	a0 70       	andi	r26, 0x00	; 0
     826:	b0 70       	andi	r27, 0x00	; 0
     828:	80 34       	cpi	r24, 0x40	; 64
     82a:	91 05       	cpc	r25, r1
     82c:	a1 05       	cpc	r26, r1
     82e:	b1 05       	cpc	r27, r1
     830:	39 f4       	brne	.+14     	; 0x840 <__pack_f+0x144>
     832:	e7 fe       	sbrs	r14, 7
     834:	0d c0       	rjmp	.+26     	; 0x850 <__pack_f+0x154>
     836:	80 e4       	ldi	r24, 0x40	; 64
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	a0 e0       	ldi	r26, 0x00	; 0
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	04 c0       	rjmp	.+8      	; 0x848 <__pack_f+0x14c>
     840:	8f e3       	ldi	r24, 0x3F	; 63
     842:	90 e0       	ldi	r25, 0x00	; 0
     844:	a0 e0       	ldi	r26, 0x00	; 0
     846:	b0 e0       	ldi	r27, 0x00	; 0
     848:	e8 0e       	add	r14, r24
     84a:	f9 1e       	adc	r15, r25
     84c:	0a 1f       	adc	r16, r26
     84e:	1b 1f       	adc	r17, r27
     850:	17 ff       	sbrs	r17, 7
     852:	05 c0       	rjmp	.+10     	; 0x85e <__pack_f+0x162>
     854:	16 95       	lsr	r17
     856:	07 95       	ror	r16
     858:	f7 94       	ror	r15
     85a:	e7 94       	ror	r14
     85c:	31 96       	adiw	r30, 0x01	; 1
     85e:	87 e0       	ldi	r24, 0x07	; 7
     860:	16 95       	lsr	r17
     862:	07 95       	ror	r16
     864:	f7 94       	ror	r15
     866:	e7 94       	ror	r14
     868:	8a 95       	dec	r24
     86a:	d1 f7       	brne	.-12     	; 0x860 <__pack_f+0x164>
     86c:	05 c0       	rjmp	.+10     	; 0x878 <__pack_f+0x17c>
     86e:	ee 24       	eor	r14, r14
     870:	ff 24       	eor	r15, r15
     872:	87 01       	movw	r16, r14
     874:	ef ef       	ldi	r30, 0xFF	; 255
     876:	f0 e0       	ldi	r31, 0x00	; 0
     878:	6e 2f       	mov	r22, r30
     87a:	67 95       	ror	r22
     87c:	66 27       	eor	r22, r22
     87e:	67 95       	ror	r22
     880:	90 2f       	mov	r25, r16
     882:	9f 77       	andi	r25, 0x7F	; 127
     884:	d7 94       	ror	r13
     886:	dd 24       	eor	r13, r13
     888:	d7 94       	ror	r13
     88a:	8e 2f       	mov	r24, r30
     88c:	86 95       	lsr	r24
     88e:	49 2f       	mov	r20, r25
     890:	46 2b       	or	r20, r22
     892:	58 2f       	mov	r21, r24
     894:	5d 29       	or	r21, r13
     896:	b7 01       	movw	r22, r14
     898:	ca 01       	movw	r24, r20
     89a:	1f 91       	pop	r17
     89c:	0f 91       	pop	r16
     89e:	ff 90       	pop	r15
     8a0:	ef 90       	pop	r14
     8a2:	df 90       	pop	r13
     8a4:	08 95       	ret

000008a6 <__unpack_f>:
     8a6:	fc 01       	movw	r30, r24
     8a8:	db 01       	movw	r26, r22
     8aa:	40 81       	ld	r20, Z
     8ac:	51 81       	ldd	r21, Z+1	; 0x01
     8ae:	22 81       	ldd	r18, Z+2	; 0x02
     8b0:	62 2f       	mov	r22, r18
     8b2:	6f 77       	andi	r22, 0x7F	; 127
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	22 1f       	adc	r18, r18
     8b8:	22 27       	eor	r18, r18
     8ba:	22 1f       	adc	r18, r18
     8bc:	93 81       	ldd	r25, Z+3	; 0x03
     8be:	89 2f       	mov	r24, r25
     8c0:	88 0f       	add	r24, r24
     8c2:	82 2b       	or	r24, r18
     8c4:	28 2f       	mov	r18, r24
     8c6:	30 e0       	ldi	r19, 0x00	; 0
     8c8:	99 1f       	adc	r25, r25
     8ca:	99 27       	eor	r25, r25
     8cc:	99 1f       	adc	r25, r25
     8ce:	11 96       	adiw	r26, 0x01	; 1
     8d0:	9c 93       	st	X, r25
     8d2:	11 97       	sbiw	r26, 0x01	; 1
     8d4:	21 15       	cp	r18, r1
     8d6:	31 05       	cpc	r19, r1
     8d8:	a9 f5       	brne	.+106    	; 0x944 <__unpack_f+0x9e>
     8da:	41 15       	cp	r20, r1
     8dc:	51 05       	cpc	r21, r1
     8de:	61 05       	cpc	r22, r1
     8e0:	71 05       	cpc	r23, r1
     8e2:	11 f4       	brne	.+4      	; 0x8e8 <__unpack_f+0x42>
     8e4:	82 e0       	ldi	r24, 0x02	; 2
     8e6:	37 c0       	rjmp	.+110    	; 0x956 <__unpack_f+0xb0>
     8e8:	82 e8       	ldi	r24, 0x82	; 130
     8ea:	9f ef       	ldi	r25, 0xFF	; 255
     8ec:	13 96       	adiw	r26, 0x03	; 3
     8ee:	9c 93       	st	X, r25
     8f0:	8e 93       	st	-X, r24
     8f2:	12 97       	sbiw	r26, 0x02	; 2
     8f4:	9a 01       	movw	r18, r20
     8f6:	ab 01       	movw	r20, r22
     8f8:	67 e0       	ldi	r22, 0x07	; 7
     8fa:	22 0f       	add	r18, r18
     8fc:	33 1f       	adc	r19, r19
     8fe:	44 1f       	adc	r20, r20
     900:	55 1f       	adc	r21, r21
     902:	6a 95       	dec	r22
     904:	d1 f7       	brne	.-12     	; 0x8fa <__unpack_f+0x54>
     906:	83 e0       	ldi	r24, 0x03	; 3
     908:	8c 93       	st	X, r24
     90a:	0d c0       	rjmp	.+26     	; 0x926 <__unpack_f+0x80>
     90c:	22 0f       	add	r18, r18
     90e:	33 1f       	adc	r19, r19
     910:	44 1f       	adc	r20, r20
     912:	55 1f       	adc	r21, r21
     914:	12 96       	adiw	r26, 0x02	; 2
     916:	8d 91       	ld	r24, X+
     918:	9c 91       	ld	r25, X
     91a:	13 97       	sbiw	r26, 0x03	; 3
     91c:	01 97       	sbiw	r24, 0x01	; 1
     91e:	13 96       	adiw	r26, 0x03	; 3
     920:	9c 93       	st	X, r25
     922:	8e 93       	st	-X, r24
     924:	12 97       	sbiw	r26, 0x02	; 2
     926:	20 30       	cpi	r18, 0x00	; 0
     928:	80 e0       	ldi	r24, 0x00	; 0
     92a:	38 07       	cpc	r19, r24
     92c:	80 e0       	ldi	r24, 0x00	; 0
     92e:	48 07       	cpc	r20, r24
     930:	80 e4       	ldi	r24, 0x40	; 64
     932:	58 07       	cpc	r21, r24
     934:	58 f3       	brcs	.-42     	; 0x90c <__unpack_f+0x66>
     936:	14 96       	adiw	r26, 0x04	; 4
     938:	2d 93       	st	X+, r18
     93a:	3d 93       	st	X+, r19
     93c:	4d 93       	st	X+, r20
     93e:	5c 93       	st	X, r21
     940:	17 97       	sbiw	r26, 0x07	; 7
     942:	08 95       	ret
     944:	2f 3f       	cpi	r18, 0xFF	; 255
     946:	31 05       	cpc	r19, r1
     948:	79 f4       	brne	.+30     	; 0x968 <__unpack_f+0xc2>
     94a:	41 15       	cp	r20, r1
     94c:	51 05       	cpc	r21, r1
     94e:	61 05       	cpc	r22, r1
     950:	71 05       	cpc	r23, r1
     952:	19 f4       	brne	.+6      	; 0x95a <__unpack_f+0xb4>
     954:	84 e0       	ldi	r24, 0x04	; 4
     956:	8c 93       	st	X, r24
     958:	08 95       	ret
     95a:	64 ff       	sbrs	r22, 4
     95c:	03 c0       	rjmp	.+6      	; 0x964 <__unpack_f+0xbe>
     95e:	81 e0       	ldi	r24, 0x01	; 1
     960:	8c 93       	st	X, r24
     962:	12 c0       	rjmp	.+36     	; 0x988 <__unpack_f+0xe2>
     964:	1c 92       	st	X, r1
     966:	10 c0       	rjmp	.+32     	; 0x988 <__unpack_f+0xe2>
     968:	2f 57       	subi	r18, 0x7F	; 127
     96a:	30 40       	sbci	r19, 0x00	; 0
     96c:	13 96       	adiw	r26, 0x03	; 3
     96e:	3c 93       	st	X, r19
     970:	2e 93       	st	-X, r18
     972:	12 97       	sbiw	r26, 0x02	; 2
     974:	83 e0       	ldi	r24, 0x03	; 3
     976:	8c 93       	st	X, r24
     978:	87 e0       	ldi	r24, 0x07	; 7
     97a:	44 0f       	add	r20, r20
     97c:	55 1f       	adc	r21, r21
     97e:	66 1f       	adc	r22, r22
     980:	77 1f       	adc	r23, r23
     982:	8a 95       	dec	r24
     984:	d1 f7       	brne	.-12     	; 0x97a <__unpack_f+0xd4>
     986:	70 64       	ori	r23, 0x40	; 64
     988:	14 96       	adiw	r26, 0x04	; 4
     98a:	4d 93       	st	X+, r20
     98c:	5d 93       	st	X+, r21
     98e:	6d 93       	st	X+, r22
     990:	7c 93       	st	X, r23
     992:	17 97       	sbiw	r26, 0x07	; 7
     994:	08 95       	ret

00000996 <buttonCheck>:
	}
}

void buttonCheck() {

	RIGHT = 0; LEFT = 0;
     996:	10 92 6b 01 	sts	0x016B, r1
     99a:	10 92 6a 01 	sts	0x016A, r1
     99e:	10 92 69 01 	sts	0x0169, r1
     9a2:	10 92 68 01 	sts	0x0168, r1
	
	if(PINB & 0b00000010) {
     9a6:	19 9b       	sbis	0x03, 1	; 3
     9a8:	11 c0       	rjmp	.+34     	; 0x9cc <buttonCheck+0x36>
     9aa:	84 ef       	ldi	r24, 0xF4	; 244
     9ac:	91 e0       	ldi	r25, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     9ae:	20 e9       	ldi	r18, 0x90	; 144
     9b0:	31 e0       	ldi	r19, 0x01	; 1
     9b2:	f9 01       	movw	r30, r18
     9b4:	31 97       	sbiw	r30, 0x01	; 1
     9b6:	f1 f7       	brne	.-4      	; 0x9b4 <buttonCheck+0x1e>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9b8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9ba:	d9 f7       	brne	.-10     	; 0x9b2 <buttonCheck+0x1c>
	_delay_ms(50);
	if(PINB & 0b00000010) {
     9bc:	19 9b       	sbis	0x03, 1	; 3
     9be:	06 c0       	rjmp	.+12     	; 0x9cc <buttonCheck+0x36>
		// Send output to PORTD.
		//PORTB |= (1<<3); //PORTB = 0b11111111;
		RIGHT = 1;
     9c0:	81 e0       	ldi	r24, 0x01	; 1
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	90 93 6b 01 	sts	0x016B, r25
     9c8:	80 93 6a 01 	sts	0x016A, r24
	}
	}
	
	if (PINB & 0b00000001 ) {
     9cc:	18 9b       	sbis	0x03, 0	; 3
     9ce:	11 c0       	rjmp	.+34     	; 0x9f2 <buttonCheck+0x5c>
     9d0:	84 ef       	ldi	r24, 0xF4	; 244
     9d2:	91 e0       	ldi	r25, 0x01	; 1
     9d4:	20 e9       	ldi	r18, 0x90	; 144
     9d6:	31 e0       	ldi	r19, 0x01	; 1
     9d8:	f9 01       	movw	r30, r18
     9da:	31 97       	sbiw	r30, 0x01	; 1
     9dc:	f1 f7       	brne	.-4      	; 0x9da <buttonCheck+0x44>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9de:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9e0:	d9 f7       	brne	.-10     	; 0x9d8 <buttonCheck+0x42>
	_delay_ms(50);
	if (PINB & 0b00000001 ) {
     9e2:	18 9b       	sbis	0x03, 0	; 3
     9e4:	06 c0       	rjmp	.+12     	; 0x9f2 <buttonCheck+0x5c>
		//PORTB |= (1<<2);
		LEFT = 1;
     9e6:	81 e0       	ldi	r24, 0x01	; 1
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	90 93 69 01 	sts	0x0169, r25
     9ee:	80 93 68 01 	sts	0x0168, r24
     9f2:	08 95       	ret

000009f4 <PinChangeInit>:
}

void PinChangeInit(void)
{
	//Enable PCINT0 and PCINT1 (both buttons) in the PCMSK0 register
	PCMSK0 |= (1<<PCINT0);
     9f4:	eb e6       	ldi	r30, 0x6B	; 107
     9f6:	f0 e0       	ldi	r31, 0x00	; 0
     9f8:	80 81       	ld	r24, Z
     9fa:	81 60       	ori	r24, 0x01	; 1
     9fc:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT1);
     9fe:	80 81       	ld	r24, Z
     a00:	82 60       	ori	r24, 0x02	; 2
     a02:	80 83       	st	Z, r24

	//Enable Pin change interrupts in the Pin Change Interrupt Control Register
	PCICR |= (1<<PCIE0);
     a04:	e8 e6       	ldi	r30, 0x68	; 104
     a06:	f0 e0       	ldi	r31, 0x00	; 0
     a08:	80 81       	ld	r24, Z
     a0a:	81 60       	ori	r24, 0x01	; 1
     a0c:	80 83       	st	Z, r24
	
	//Set the PCINT0 and PCINT1 interrupts to trigger on rising edge
	EICRA |= ((1<<ISC00)&&(1<<ISC01)&&(1<<ISC10)&&(1<<ISC11));
     a0e:	e9 e6       	ldi	r30, 0x69	; 105
     a10:	f0 e0       	ldi	r31, 0x00	; 0
     a12:	80 81       	ld	r24, Z
     a14:	81 60       	ori	r24, 0x01	; 1
     a16:	80 83       	st	Z, r24
		
	//Ensure to enable global interrupts as well.
	sei();
     a18:	78 94       	sei
}
     a1a:	08 95       	ret

00000a1c <__vector_9>:

ISR(PCINT0_vect) {	
     a1c:	1f 92       	push	r1
     a1e:	0f 92       	push	r0
     a20:	0f b6       	in	r0, 0x3f	; 63
     a22:	0f 92       	push	r0
     a24:	11 24       	eor	r1, r1
     a26:	8f 93       	push	r24
     a28:	9f 93       	push	r25
	RIGHT = 0; LEFT = 0;
     a2a:	10 92 6b 01 	sts	0x016B, r1
     a2e:	10 92 6a 01 	sts	0x016A, r1
     a32:	10 92 69 01 	sts	0x0169, r1
     a36:	10 92 68 01 	sts	0x0168, r1
	
	if(PINB & 0b00000010) {
     a3a:	19 9b       	sbis	0x03, 1	; 3
     a3c:	06 c0       	rjmp	.+12     	; 0xa4a <__vector_9+0x2e>
	//_delay_ms(50);
	//if(PINB & 0b00000010) {
		// Send output to PORTD.
		//PORTB |= (1<<3); //PORTB = 0b11111111;
		RIGHT = 1;
     a3e:	81 e0       	ldi	r24, 0x01	; 1
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	90 93 6b 01 	sts	0x016B, r25
     a46:	80 93 6a 01 	sts	0x016A, r24
	//}
	}
	
	if (PINB & 0b00000001 ) {
     a4a:	18 9b       	sbis	0x03, 0	; 3
     a4c:	06 c0       	rjmp	.+12     	; 0xa5a <__vector_9+0x3e>
	//_delay_ms(50);
	//if (PINB & 0b00000001 ) {
		//PORTB |= (1<<2);
		LEFT = 1;
     a4e:	81 e0       	ldi	r24, 0x01	; 1
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	90 93 69 01 	sts	0x0169, r25
     a56:	80 93 68 01 	sts	0x0168, r24
	}
	clear();
	draw_character('*',heroX,heroY);
	refresh();
	*/
}
     a5a:	9f 91       	pop	r25
     a5c:	8f 91       	pop	r24
     a5e:	0f 90       	pop	r0
     a60:	0f be       	out	0x3f, r0	; 63
     a62:	0f 90       	pop	r0
     a64:	1f 90       	pop	r1
     a66:	18 95       	reti

00000a68 <TimerInit>:

void TimerInit(void)
{
	//Set to Normal Timer Mode using TCCR0A and TCCR0B
	TCCR0A &= ~((1<<WGM01)|(WGM00));
     a68:	84 b5       	in	r24, 0x24	; 36
     a6a:	8d 7f       	andi	r24, 0xFD	; 253
     a6c:	84 bd       	out	0x24, r24	; 36
	TCCR0B &= ~((1<<WGM02));
     a6e:	85 b5       	in	r24, 0x25	; 37
     a70:	87 7f       	andi	r24, 0xF7	; 247
     a72:	85 bd       	out	0x25, r24	; 37
	
	//Set Prescaler using TCCR0B, using Clock Speed find timer speed = 1/(Clock Speed/Prescaler)
	//Prescaler = 1024
	//Timer Speed = 128 nano seconds NOT 16MHZ
	//Timer Overflow Speed = 32640 nano seconds (Timer Speed * 255) - (255 since 8-bit timer) NOT 16MHZ
	TCCR0B |= (1<<CS02)|(1<<CS00);
     a74:	85 b5       	in	r24, 0x25	; 37
     a76:	85 60       	ori	r24, 0x05	; 5
     a78:	85 bd       	out	0x25, r24	; 37
	TCCR0B &= ~((1<<CS01));
     a7a:	85 b5       	in	r24, 0x25	; 37
     a7c:	8d 7f       	andi	r24, 0xFD	; 253
     a7e:	85 bd       	out	0x25, r24	; 37
	
	//Enable TOIE0 interrupt in the TIMSK0 register
	TIMSK0 |= (1<<TOIE0);
     a80:	ee e6       	ldi	r30, 0x6E	; 110
     a82:	f0 e0       	ldi	r31, 0x00	; 0
     a84:	80 81       	ld	r24, Z
     a86:	81 60       	ori	r24, 0x01	; 1
     a88:	80 83       	st	Z, r24
	
	//Ensure to enable global interrupts as well.
	sei();
     a8a:	78 94       	sei
}
     a8c:	08 95       	ret

00000a8e <heroForward>:
		clockCounter = 0;
		heroForward();	
	}
}

void heroForward(void) {
     a8e:	0f 93       	push	r16
     a90:	1f 93       	push	r17

if (Direction == 0) {
     a92:	80 91 4e 01 	lds	r24, 0x014E
     a96:	90 91 4f 01 	lds	r25, 0x014F
     a9a:	89 2b       	or	r24, r25
     a9c:	39 f5       	brne	.+78     	; 0xaec <heroForward+0x5e>
	HeroY = 1;
     a9e:	81 e0       	ldi	r24, 0x01	; 1
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	90 93 79 01 	sts	0x0179, r25
     aa6:	80 93 78 01 	sts	0x0178, r24
	HeroX = 0;
     aaa:	10 92 51 01 	sts	0x0151, r1
     aae:	10 92 50 01 	sts	0x0150, r1
	if (my_pointer -> y > screen_y-1) {
     ab2:	00 91 7c 01 	lds	r16, 0x017C
     ab6:	10 91 7d 01 	lds	r17, 0x017D
     aba:	60 91 46 01 	lds	r22, 0x0146
     abe:	70 91 47 01 	lds	r23, 0x0147
     ac2:	61 50       	subi	r22, 0x01	; 1
     ac4:	70 40       	sbci	r23, 0x00	; 0
     ac6:	88 27       	eor	r24, r24
     ac8:	77 fd       	sbrc	r23, 7
     aca:	80 95       	com	r24
     acc:	98 2f       	mov	r25, r24
     ace:	39 d3       	rcall	.+1650   	; 0x1142 <__floatsisf>
     ad0:	9b 01       	movw	r18, r22
     ad2:	ac 01       	movw	r20, r24
     ad4:	f8 01       	movw	r30, r16
     ad6:	64 81       	ldd	r22, Z+4	; 0x04
     ad8:	75 81       	ldd	r23, Z+5	; 0x05
     ada:	86 81       	ldd	r24, Z+6	; 0x06
     adc:	97 81       	ldd	r25, Z+7	; 0x07
     ade:	e1 d3       	rcall	.+1986   	; 0x12a2 <__gesf2>
     ae0:	18 16       	cp	r1, r24
     ae2:	24 f4       	brge	.+8      	; 0xaec <heroForward+0x5e>
	HeroY = 0;
     ae4:	10 92 79 01 	sts	0x0179, r1
     ae8:	10 92 78 01 	sts	0x0178, r1
	}
}
if (Direction == 1) {
     aec:	80 91 4e 01 	lds	r24, 0x014E
     af0:	90 91 4f 01 	lds	r25, 0x014F
     af4:	81 30       	cpi	r24, 0x01	; 1
     af6:	91 05       	cpc	r25, r1
     af8:	29 f5       	brne	.+74     	; 0xb44 <__stack+0x45>
	HeroX = 1;
     afa:	90 93 51 01 	sts	0x0151, r25
     afe:	80 93 50 01 	sts	0x0150, r24
	HeroY = 0;
     b02:	10 92 79 01 	sts	0x0179, r1
     b06:	10 92 78 01 	sts	0x0178, r1
	if (my_pointer -> x > screen_x-1) {
     b0a:	00 91 7c 01 	lds	r16, 0x017C
     b0e:	10 91 7d 01 	lds	r17, 0x017D
     b12:	60 91 42 01 	lds	r22, 0x0142
     b16:	70 91 43 01 	lds	r23, 0x0143
     b1a:	61 50       	subi	r22, 0x01	; 1
     b1c:	70 40       	sbci	r23, 0x00	; 0
     b1e:	88 27       	eor	r24, r24
     b20:	77 fd       	sbrc	r23, 7
     b22:	80 95       	com	r24
     b24:	98 2f       	mov	r25, r24
     b26:	0d d3       	rcall	.+1562   	; 0x1142 <__floatsisf>
     b28:	9b 01       	movw	r18, r22
     b2a:	ac 01       	movw	r20, r24
     b2c:	f8 01       	movw	r30, r16
     b2e:	60 81       	ld	r22, Z
     b30:	71 81       	ldd	r23, Z+1	; 0x01
     b32:	82 81       	ldd	r24, Z+2	; 0x02
     b34:	93 81       	ldd	r25, Z+3	; 0x03
     b36:	b5 d3       	rcall	.+1898   	; 0x12a2 <__gesf2>
     b38:	18 16       	cp	r1, r24
     b3a:	24 f4       	brge	.+8      	; 0xb44 <__stack+0x45>
	HeroX = 0;
     b3c:	10 92 51 01 	sts	0x0151, r1
     b40:	10 92 50 01 	sts	0x0150, r1
	}
}
if (Direction == 2) {
     b44:	80 91 4e 01 	lds	r24, 0x014E
     b48:	90 91 4f 01 	lds	r25, 0x014F
     b4c:	02 97       	sbiw	r24, 0x02	; 2
     b4e:	e9 f4       	brne	.+58     	; 0xb8a <__stack+0x8b>
	HeroY = -1;
     b50:	8f ef       	ldi	r24, 0xFF	; 255
     b52:	9f ef       	ldi	r25, 0xFF	; 255
     b54:	90 93 79 01 	sts	0x0179, r25
     b58:	80 93 78 01 	sts	0x0178, r24
	HeroX = 0;
     b5c:	10 92 51 01 	sts	0x0151, r1
     b60:	10 92 50 01 	sts	0x0150, r1
	if (my_pointer -> y < 10) {
     b64:	e0 91 7c 01 	lds	r30, 0x017C
     b68:	f0 91 7d 01 	lds	r31, 0x017D
     b6c:	64 81       	ldd	r22, Z+4	; 0x04
     b6e:	75 81       	ldd	r23, Z+5	; 0x05
     b70:	86 81       	ldd	r24, Z+6	; 0x06
     b72:	97 81       	ldd	r25, Z+7	; 0x07
     b74:	20 e0       	ldi	r18, 0x00	; 0
     b76:	30 e0       	ldi	r19, 0x00	; 0
     b78:	40 e2       	ldi	r20, 0x20	; 32
     b7a:	51 e4       	ldi	r21, 0x41	; 65
     b7c:	dc d2       	rcall	.+1464   	; 0x1136 <__cmpsf2>
     b7e:	88 23       	and	r24, r24
     b80:	24 f4       	brge	.+8      	; 0xb8a <__stack+0x8b>
	HeroY = 0;
     b82:	10 92 79 01 	sts	0x0179, r1
     b86:	10 92 78 01 	sts	0x0178, r1
	}
}
if (Direction == 3) {
     b8a:	80 91 4e 01 	lds	r24, 0x014E
     b8e:	90 91 4f 01 	lds	r25, 0x014F
     b92:	03 97       	sbiw	r24, 0x03	; 3
     b94:	e9 f4       	brne	.+58     	; 0xbd0 <__stack+0xd1>
	HeroX = -1;
     b96:	8f ef       	ldi	r24, 0xFF	; 255
     b98:	9f ef       	ldi	r25, 0xFF	; 255
     b9a:	90 93 51 01 	sts	0x0151, r25
     b9e:	80 93 50 01 	sts	0x0150, r24
	HeroY = 0;
     ba2:	10 92 79 01 	sts	0x0179, r1
     ba6:	10 92 78 01 	sts	0x0178, r1
	if (my_pointer -> x < 2) {
     baa:	e0 91 7c 01 	lds	r30, 0x017C
     bae:	f0 91 7d 01 	lds	r31, 0x017D
     bb2:	60 81       	ld	r22, Z
     bb4:	71 81       	ldd	r23, Z+1	; 0x01
     bb6:	82 81       	ldd	r24, Z+2	; 0x02
     bb8:	93 81       	ldd	r25, Z+3	; 0x03
     bba:	20 e0       	ldi	r18, 0x00	; 0
     bbc:	30 e0       	ldi	r19, 0x00	; 0
     bbe:	40 e0       	ldi	r20, 0x00	; 0
     bc0:	50 e4       	ldi	r21, 0x40	; 64
     bc2:	b9 d2       	rcall	.+1394   	; 0x1136 <__cmpsf2>
     bc4:	88 23       	and	r24, r24
     bc6:	24 f4       	brge	.+8      	; 0xbd0 <__stack+0xd1>
	HeroX = 0;
     bc8:	10 92 51 01 	sts	0x0151, r1
     bcc:	10 92 50 01 	sts	0x0150, r1
	}
}

my_pointer -> x += HeroX;
     bd0:	00 91 7c 01 	lds	r16, 0x017C
     bd4:	10 91 7d 01 	lds	r17, 0x017D
     bd8:	60 91 50 01 	lds	r22, 0x0150
     bdc:	70 91 51 01 	lds	r23, 0x0151
     be0:	88 27       	eor	r24, r24
     be2:	77 fd       	sbrc	r23, 7
     be4:	80 95       	com	r24
     be6:	98 2f       	mov	r25, r24
     be8:	ac d2       	rcall	.+1368   	; 0x1142 <__floatsisf>
     bea:	9b 01       	movw	r18, r22
     bec:	ac 01       	movw	r20, r24
     bee:	f8 01       	movw	r30, r16
     bf0:	60 81       	ld	r22, Z
     bf2:	71 81       	ldd	r23, Z+1	; 0x01
     bf4:	82 81       	ldd	r24, Z+2	; 0x02
     bf6:	93 81       	ldd	r25, Z+3	; 0x03
     bf8:	3a d2       	rcall	.+1140   	; 0x106e <__addsf3>
     bfa:	f8 01       	movw	r30, r16
     bfc:	60 83       	st	Z, r22
     bfe:	71 83       	std	Z+1, r23	; 0x01
     c00:	82 83       	std	Z+2, r24	; 0x02
     c02:	93 83       	std	Z+3, r25	; 0x03
my_pointer -> y += HeroY;
     c04:	60 91 78 01 	lds	r22, 0x0178
     c08:	70 91 79 01 	lds	r23, 0x0179
     c0c:	88 27       	eor	r24, r24
     c0e:	77 fd       	sbrc	r23, 7
     c10:	80 95       	com	r24
     c12:	98 2f       	mov	r25, r24
     c14:	96 d2       	rcall	.+1324   	; 0x1142 <__floatsisf>
     c16:	9b 01       	movw	r18, r22
     c18:	ac 01       	movw	r20, r24
     c1a:	f8 01       	movw	r30, r16
     c1c:	64 81       	ldd	r22, Z+4	; 0x04
     c1e:	75 81       	ldd	r23, Z+5	; 0x05
     c20:	86 81       	ldd	r24, Z+6	; 0x06
     c22:	97 81       	ldd	r25, Z+7	; 0x07
     c24:	24 d2       	rcall	.+1096   	; 0x106e <__addsf3>
     c26:	f8 01       	movw	r30, r16
     c28:	64 83       	std	Z+4, r22	; 0x04
     c2a:	75 83       	std	Z+5, r23	; 0x05
     c2c:	86 83       	std	Z+6, r24	; 0x06
     c2e:	97 83       	std	Z+7, r25	; 0x07

}
     c30:	1f 91       	pop	r17
     c32:	0f 91       	pop	r16
     c34:	08 95       	ret

00000c36 <__vector_23>:
	sei();
}


ISR(TIMER0_OVF_vect)
{
     c36:	1f 92       	push	r1
     c38:	0f 92       	push	r0
     c3a:	0f b6       	in	r0, 0x3f	; 63
     c3c:	0f 92       	push	r0
     c3e:	11 24       	eor	r1, r1
     c40:	2f 93       	push	r18
     c42:	3f 93       	push	r19
     c44:	4f 93       	push	r20
     c46:	5f 93       	push	r21
     c48:	6f 93       	push	r22
     c4a:	7f 93       	push	r23
     c4c:	8f 93       	push	r24
     c4e:	9f 93       	push	r25
     c50:	af 93       	push	r26
     c52:	bf 93       	push	r27
     c54:	ef 93       	push	r30
     c56:	ff 93       	push	r31
	//Clear the flag by writing a one
	TIFR0 |= (1<<TOV0);
     c58:	a8 9a       	sbi	0x15, 0	; 21
	//Add one to our clockCounter
	clockCounter++;
     c5a:	80 91 74 01 	lds	r24, 0x0174
     c5e:	90 91 75 01 	lds	r25, 0x0175
     c62:	01 96       	adiw	r24, 0x01	; 1
     c64:	90 93 75 01 	sts	0x0175, r25
     c68:	80 93 74 01 	sts	0x0174, r24
	//DEBUG LED
	//PORTB ^= (1<<PINB2);
	//Check to see if our clockCounter is greater/equal to than our MAX_CLOCK_COUNTER_FOR_100MSECOND
	if(clockCounter >= MAX_CLOCK_COUNTER_FOR_100MSECOND && GAMEON)
     c6c:	80 91 74 01 	lds	r24, 0x0174
     c70:	90 91 75 01 	lds	r25, 0x0175
     c74:	05 97       	sbiw	r24, 0x05	; 5
     c76:	5c f0       	brlt	.+22     	; 0xc8e <__vector_23+0x58>
     c78:	80 91 76 01 	lds	r24, 0x0176
     c7c:	90 91 77 01 	lds	r25, 0x0177
     c80:	89 2b       	or	r24, r25
     c82:	29 f0       	breq	.+10     	; 0xc8e <__vector_23+0x58>
	{
		//PORTB ^= (1<<PINB3);
		//Reset clockCounter
		clockCounter = 0;
     c84:	10 92 75 01 	sts	0x0175, r1
     c88:	10 92 74 01 	sts	0x0174, r1
		heroForward();	
     c8c:	00 df       	rcall	.-512    	; 0xa8e <heroForward>
	}
}
     c8e:	ff 91       	pop	r31
     c90:	ef 91       	pop	r30
     c92:	bf 91       	pop	r27
     c94:	af 91       	pop	r26
     c96:	9f 91       	pop	r25
     c98:	8f 91       	pop	r24
     c9a:	7f 91       	pop	r23
     c9c:	6f 91       	pop	r22
     c9e:	5f 91       	pop	r21
     ca0:	4f 91       	pop	r20
     ca2:	3f 91       	pop	r19
     ca4:	2f 91       	pop	r18
     ca6:	0f 90       	pop	r0
     ca8:	0f be       	out	0x3f, r0	; 63
     caa:	0f 90       	pop	r0
     cac:	1f 90       	pop	r1
     cae:	18 95       	reti

00000cb0 <drawScreen>:
my_pointer -> y += HeroY;

}

void drawScreen(void) {
	draw_line(0,8,screen_x_Full,8);
     cb0:	80 e0       	ldi	r24, 0x00	; 0
     cb2:	68 e0       	ldi	r22, 0x08	; 8
     cb4:	40 91 44 01 	lds	r20, 0x0144
     cb8:	28 e0       	ldi	r18, 0x08	; 8
     cba:	32 d3       	rcall	.+1636   	; 0x1320 <draw_line>
	draw_line(0,8,0,screen_y_Full);
     cbc:	80 e0       	ldi	r24, 0x00	; 0
     cbe:	68 e0       	ldi	r22, 0x08	; 8
     cc0:	40 e0       	ldi	r20, 0x00	; 0
     cc2:	20 91 48 01 	lds	r18, 0x0148
     cc6:	2c d3       	rcall	.+1624   	; 0x1320 <draw_line>
	draw_line(screen_x_Full,8,screen_x_Full,screen_y_Full);
     cc8:	40 91 44 01 	lds	r20, 0x0144
     ccc:	84 2f       	mov	r24, r20
     cce:	68 e0       	ldi	r22, 0x08	; 8
     cd0:	20 91 48 01 	lds	r18, 0x0148
     cd4:	25 d3       	rcall	.+1610   	; 0x1320 <draw_line>
	draw_line(0,screen_y_Full,screen_x_Full,screen_y_Full);
     cd6:	20 91 48 01 	lds	r18, 0x0148
     cda:	80 e0       	ldi	r24, 0x00	; 0
     cdc:	62 2f       	mov	r22, r18
     cde:	40 91 44 01 	lds	r20, 0x0144
     ce2:	1e d3       	rcall	.+1596   	; 0x1320 <draw_line>
	draw_string("L: ",0,0);
     ce4:	80 e0       	ldi	r24, 0x00	; 0
     ce6:	91 e0       	ldi	r25, 0x01	; 1
     ce8:	60 e0       	ldi	r22, 0x00	; 0
     cea:	40 e0       	ldi	r20, 0x00	; 0
     cec:	4f d5       	rcall	.+2718   	; 0x178c <draw_string>
	draw_character((0x30 + Lives),11,0);
     cee:	80 91 54 01 	lds	r24, 0x0154
     cf2:	80 5d       	subi	r24, 0xD0	; 208
     cf4:	6b e0       	ldi	r22, 0x0B	; 11
     cf6:	40 e0       	ldi	r20, 0x00	; 0
     cf8:	f9 d4       	rcall	.+2546   	; 0x16ec <draw_character>
	draw_string("S: ", 21,0);
     cfa:	84 e0       	ldi	r24, 0x04	; 4
     cfc:	91 e0       	ldi	r25, 0x01	; 1
     cfe:	65 e1       	ldi	r22, 0x15	; 21
     d00:	40 e0       	ldi	r20, 0x00	; 0
     d02:	44 d5       	rcall	.+2696   	; 0x178c <draw_string>
	draw_character((0x30 + Score),31,0);
     d04:	80 91 7a 01 	lds	r24, 0x017A
     d08:	80 5d       	subi	r24, 0xD0	; 208
     d0a:	6f e1       	ldi	r22, 0x1F	; 31
     d0c:	40 e0       	ldi	r20, 0x00	; 0
     d0e:	ee d4       	rcall	.+2524   	; 0x16ec <draw_character>
	draw_character((0x30 + Direction),70,0);
     d10:	80 91 4e 01 	lds	r24, 0x014E
     d14:	90 91 4f 01 	lds	r25, 0x014F
     d18:	80 5d       	subi	r24, 0xD0	; 208
     d1a:	66 e4       	ldi	r22, 0x46	; 70
     d1c:	40 e0       	ldi	r20, 0x00	; 0

}
     d1e:	e6 c4       	rjmp	.+2508   	; 0x16ec <draw_character>

00000d20 <seedWithButtonPress>:
	return out;
}

void seedWithButtonPress() {
// turn on teensy LED
PORTD |= 0b01000000;
     d20:	5e 9a       	sbi	0x0b, 6	; 11
// Configure port B for the buttons....
DDRB |= 0b00001100;
     d22:	84 b1       	in	r24, 0x04	; 4
     d24:	8c 60       	ori	r24, 0x0C	; 12
     d26:	84 b9       	out	0x04, r24	; 4
     d28:	20 e0       	ldi	r18, 0x00	; 0
     d2a:	30 e0       	ldi	r19, 0x00	; 0
     d2c:	02 c0       	rjmp	.+4      	; 0xd32 <seedWithButtonPress+0x12>
// Wait for the button press on SW0 while iterating the seed
unsigned int seed = 0;
while (!RIGHT && !LEFT) {
seed++;
     d2e:	2f 5f       	subi	r18, 0xFF	; 255
     d30:	3f 4f       	sbci	r19, 0xFF	; 255
PORTD |= 0b01000000;
// Configure port B for the buttons....
DDRB |= 0b00001100;
// Wait for the button press on SW0 while iterating the seed
unsigned int seed = 0;
while (!RIGHT && !LEFT) {
     d32:	80 91 6a 01 	lds	r24, 0x016A
     d36:	90 91 6b 01 	lds	r25, 0x016B
     d3a:	89 2b       	or	r24, r25
     d3c:	31 f4       	brne	.+12     	; 0xd4a <seedWithButtonPress+0x2a>
     d3e:	80 91 68 01 	lds	r24, 0x0168
     d42:	90 91 69 01 	lds	r25, 0x0169
     d46:	89 2b       	or	r24, r25
     d48:	91 f3       	breq	.-28     	; 0xd2e <seedWithButtonPress+0xe>
seed++;
}
// Seed the random number generator
srand(seed);
     d4a:	c9 01       	movw	r24, r18
     d4c:	3d d7       	rcall	.+3706   	; 0x1bc8 <srand>
// What does dgbI do? where is it from?
// dbgI((int) seed, 10);
// turn off teensy LED
PORTD = 0b00000000;
     d4e:	1b b8       	out	0x0b, r1	; 11
}
     d50:	08 95       	ret

00000d52 <randInRange>:
		LEFT = 0;
	}
	*/
}

int randInRange(int min, int max) {
     d52:	ef 92       	push	r14
     d54:	ff 92       	push	r15
     d56:	0f 93       	push	r16
     d58:	1f 93       	push	r17
     d5a:	8c 01       	movw	r16, r24
     d5c:	7b 01       	movw	r14, r22
	int out = min + rand()%(max+1 - min);
     d5e:	31 d7       	rcall	.+3682   	; 0x1bc2 <rand>
     d60:	e0 1a       	sub	r14, r16
     d62:	f1 0a       	sbc	r15, r17
     d64:	08 94       	sec
     d66:	e1 1c       	adc	r14, r1
     d68:	f1 1c       	adc	r15, r1
     d6a:	b7 01       	movw	r22, r14
     d6c:	83 d6       	rcall	.+3334   	; 0x1a74 <__divmodhi4>
     d6e:	9c 01       	movw	r18, r24
     d70:	20 0f       	add	r18, r16
     d72:	31 1f       	adc	r19, r17
	return out;
}
     d74:	c9 01       	movw	r24, r18
     d76:	1f 91       	pop	r17
     d78:	0f 91       	pop	r16
     d7a:	ff 90       	pop	r15
     d7c:	ef 90       	pop	r14
     d7e:	08 95       	ret

00000d80 <CountDown>:
	buttonCheck();
	CountDown();
	
}

void CountDown() {
     d80:	1f 93       	push	r17
     d82:	cf 93       	push	r28
     d84:	df 93       	push	r29
     d86:	13 e3       	ldi	r17, 0x33	; 51
     d88:	c0 e9       	ldi	r28, 0x90	; 144
     d8a:	d1 e0       	ldi	r29, 0x01	; 1
	for (char i= 0x3; i>0x0; i--) {
		clear();
     d8c:	8e d2       	rcall	.+1308   	; 0x12aa <clear>
		draw_string("Game Start In: ", 2,22); // 15*5 = 75 (84 - 75)/2 = 4
     d8e:	88 e0       	ldi	r24, 0x08	; 8
     d90:	91 e0       	ldi	r25, 0x01	; 1
     d92:	62 e0       	ldi	r22, 0x02	; 2
     d94:	46 e1       	ldi	r20, 0x16	; 22
     d96:	fa d4       	rcall	.+2548   	; 0x178c <draw_string>
		draw_character((0x30 + i), 75,22);
     d98:	81 2f       	mov	r24, r17
     d9a:	6b e4       	ldi	r22, 0x4B	; 75
     d9c:	46 e1       	ldi	r20, 0x16	; 22
     d9e:	a6 d4       	rcall	.+2380   	; 0x16ec <draw_character>
		refresh();
     da0:	0a d5       	rcall	.+2580   	; 0x17b6 <refresh>
     da2:	80 e1       	ldi	r24, 0x10	; 16
     da4:	97 e2       	ldi	r25, 0x27	; 39
     da6:	fe 01       	movw	r30, r28
     da8:	31 97       	sbiw	r30, 0x01	; 1
     daa:	f1 f7       	brne	.-4      	; 0xda8 <CountDown+0x28>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dac:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     dae:	d9 f7       	brne	.-10     	; 0xda6 <CountDown+0x26>
     db0:	11 50       	subi	r17, 0x01	; 1
	CountDown();
	
}

void CountDown() {
	for (char i= 0x3; i>0x0; i--) {
     db2:	10 33       	cpi	r17, 0x30	; 48
     db4:	59 f7       	brne	.-42     	; 0xd8c <CountDown+0xc>
		draw_string("Game Start In: ", 2,22); // 15*5 = 75 (84 - 75)/2 = 4
		draw_character((0x30 + i), 75,22);
		refresh();
		_delay_ms(1000);
	}
}
     db6:	df 91       	pop	r29
     db8:	cf 91       	pop	r28
     dba:	1f 91       	pop	r17
     dbc:	08 95       	ret

00000dbe <setupGame>:
void setupGame() {

	// SW0 and SW1 are connected to pins B0 and B1
	// LED1 and LED2 connected to pins B2 and B3
	// 0 for input 1 for output
	DDRB |= 0b00001100;
     dbe:	84 b1       	in	r24, 0x04	; 4
     dc0:	8c 60       	ori	r24, 0x0C	; 12
     dc2:	84 b9       	out	0x04, r24	; 4
    // Teensy LED is connected to D6
    DDRD |= 0b01000000;
     dc4:	56 9a       	sbi	0x0a, 6	; 10
    // turn OFF LED initially
	PORTD |= 0b00000000;
     dc6:	8b b1       	in	r24, 0x0b	; 11
     dc8:	8b b9       	out	0x0b, r24	; 11
	PORTB |= (1<<2)||(1<<3); //not sure why this is here
     dca:	28 9a       	sbi	0x05, 0	; 5
	
	//initialise clock
	//CLKPR |= 1 << CLKPCE;
	//CLKPR |= 1 << CLKPS0;
	CPU_PRESCALE(CPU_16MHz);
     dcc:	e1 e6       	ldi	r30, 0x61	; 97
     dce:	f0 e0       	ldi	r31, 0x00	; 0
     dd0:	80 e8       	ldi	r24, 0x80	; 128
     dd2:	80 83       	st	Z, r24
     dd4:	10 82       	st	Z, r1
	
	
	LCDInitialise(LCD_DEFAULT_CONTRAST);
     dd6:	8f e3       	ldi	r24, 0x3F	; 63
     dd8:	20 d5       	rcall	.+2624   	; 0x181a <LCDInitialise>
	clear();
     dda:	67 d2       	rcall	.+1230   	; 0x12aa <clear>
	
	PinChangeInit();
     ddc:	0b de       	rcall	.-1002   	; 0x9f4 <PinChangeInit>
	TimerInit();
     dde:	44 de       	rcall	.-888    	; 0xa68 <TimerInit>
	
	clear();
     de0:	64 d2       	rcall	.+1224   	; 0x12aa <clear>
	draw_string("ZombieDash v1.0", 4,0); // 15*5 = 75 (84 - 75)/2 = 4
     de2:	88 e1       	ldi	r24, 0x18	; 24
     de4:	91 e0       	ldi	r25, 0x01	; 1
     de6:	64 e0       	ldi	r22, 0x04	; 4
     de8:	40 e0       	ldi	r20, 0x00	; 0
     dea:	d0 d4       	rcall	.+2464   	; 0x178c <draw_string>
	draw_string("Lachlan Robinson", 2,9); // 16*5 = 80 (84 - 80)/2 = 2
     dec:	88 e2       	ldi	r24, 0x28	; 40
     dee:	91 e0       	ldi	r25, 0x01	; 1
     df0:	62 e0       	ldi	r22, 0x02	; 2
     df2:	49 e0       	ldi	r20, 0x09	; 9
     df4:	cb d4       	rcall	.+2454   	; 0x178c <draw_string>
	draw_string("n8845409", 22, 28); // 8*5 = 40 (84 - 40)/2 = 22
     df6:	89 e3       	ldi	r24, 0x39	; 57
     df8:	91 e0       	ldi	r25, 0x01	; 1
     dfa:	66 e1       	ldi	r22, 0x16	; 22
     dfc:	4c e1       	ldi	r20, 0x1C	; 28
     dfe:	c6 d4       	rcall	.+2444   	; 0x178c <draw_string>
	refresh();
     e00:	da d4       	rcall	.+2484   	; 0x17b6 <refresh>
	
	seedWithButtonPress();
     e02:	8e df       	rcall	.-228    	; 0xd20 <seedWithButtonPress>
	buttonCheck();
     e04:	c8 dd       	rcall	.-1136   	; 0x996 <buttonCheck>
	CountDown();
	
}
     e06:	bc cf       	rjmp	.-136    	; 0xd80 <CountDown>

00000e08 <main>:
#include "my_functions.h"

#define NUM_BLOCKS 10
#define MAX_CLOCK_COUNTER_FOR_100MSECOND 5

int main() {
     e08:	6f 92       	push	r6
     e0a:	7f 92       	push	r7
     e0c:	8f 92       	push	r8
     e0e:	9f 92       	push	r9
     e10:	af 92       	push	r10
     e12:	bf 92       	push	r11
     e14:	cf 92       	push	r12
     e16:	df 92       	push	r13
     e18:	ef 92       	push	r14
     e1a:	ff 92       	push	r15
     e1c:	0f 93       	push	r16
     e1e:	1f 93       	push	r17
     e20:	df 93       	push	r29
     e22:	cf 93       	push	r28
     e24:	cd b7       	in	r28, 0x3d	; 61
     e26:	de b7       	in	r29, 0x3e	; 62
     e28:	c3 5c       	subi	r28, 0xC3	; 195
     e2a:	d0 40       	sbci	r29, 0x00	; 0
     e2c:	0f b6       	in	r0, 0x3f	; 63
     e2e:	f8 94       	cli
     e30:	de bf       	out	0x3e, r29	; 62
     e32:	0f be       	out	0x3f, r0	; 63
     e34:	cd bf       	out	0x3d, r28	; 61
	
	// INSERT_CODE_HERE
	//draw_string("eWWZ begins!",0,0);

	// screen setup etc
	setupGame();
     e36:	c3 df       	rcall	.-122    	; 0xdbe <setupGame>
	clear();
     e38:	38 d2       	rcall	.+1136   	; 0x12aa <clear>
	refresh();
     e3a:	bd d4       	rcall	.+2426   	; 0x17b6 <refresh>
	// sprites
	byte bitHero [] = {
		BYTE( 10100000),
		BYTE( 11100000),
		BYTE( 10100000),
	};
     e3c:	de 01       	movw	r26, r28
     e3e:	11 96       	adiw	r26, 0x01	; 1
     e40:	e9 e5       	ldi	r30, 0x59	; 89
     e42:	f1 e0       	ldi	r31, 0x01	; 1
     e44:	83 e0       	ldi	r24, 0x03	; 3
     e46:	01 90       	ld	r0, Z+
     e48:	0d 92       	st	X+, r0
     e4a:	81 50       	subi	r24, 0x01	; 1
     e4c:	e1 f7       	brne	.-8      	; 0xe46 <main+0x3e>
		
	byte bitZombie [] = {
		BYTE( 11100000),
		BYTE( 01000000),
		BYTE( 11100000),
	};
     e4e:	de 01       	movw	r26, r28
     e50:	14 96       	adiw	r26, 0x04	; 4
     e52:	e6 e5       	ldi	r30, 0x56	; 86
     e54:	f1 e0       	ldi	r31, 0x01	; 1
     e56:	83 e0       	ldi	r24, 0x03	; 3
     e58:	01 90       	ld	r0, Z+
     e5a:	0d 92       	st	X+, r0
     e5c:	81 50       	subi	r24, 0x01	; 1
     e5e:	e1 f7       	brne	.-8      	; 0xe58 <main+0x50>
	
	// screen parameters
	screen_x -= width;
     e60:	20 91 52 01 	lds	r18, 0x0152
     e64:	80 91 42 01 	lds	r24, 0x0142
     e68:	90 91 43 01 	lds	r25, 0x0143
     e6c:	82 1b       	sub	r24, r18
     e6e:	91 09       	sbc	r25, r1
     e70:	90 93 43 01 	sts	0x0143, r25
     e74:	80 93 42 01 	sts	0x0142, r24
	screen_y -= height;
     e78:	40 91 53 01 	lds	r20, 0x0153
     e7c:	20 91 46 01 	lds	r18, 0x0146
     e80:	30 91 47 01 	lds	r19, 0x0147
     e84:	24 1b       	sub	r18, r20
     e86:	31 09       	sbc	r19, r1
     e88:	30 93 47 01 	sts	0x0147, r19
     e8c:	20 93 46 01 	sts	0x0146, r18

	int middle_x = screen_x/2;
     e90:	62 e0       	ldi	r22, 0x02	; 2
     e92:	70 e0       	ldi	r23, 0x00	; 0
     e94:	ef d5       	rcall	.+3038   	; 0x1a74 <__divmodhi4>
     e96:	96 2e       	mov	r9, r22
	int middle_y = screen_y/2 + 5;
     e98:	c9 01       	movw	r24, r18
     e9a:	62 e0       	ldi	r22, 0x02	; 2
     e9c:	70 e0       	ldi	r23, 0x00	; 0
     e9e:	ea d5       	rcall	.+3028   	; 0x1a74 <__divmodhi4>
     ea0:	8b 01       	movw	r16, r22
     ea2:	0b 5f       	subi	r16, 0xFB	; 251
     ea4:	1f 4f       	sbci	r17, 0xFF	; 255
     ea6:	ee 24       	eor	r14, r14
     ea8:	ff 24       	eor	r15, r15
     eaa:	e0 e9       	ldi	r30, 0x90	; 144
     eac:	ce 2e       	mov	r12, r30
     eae:	e1 e0       	ldi	r30, 0x01	; 1
     eb0:	de 2e       	mov	r13, r30
	byte x, y;
	
	for (int i = 0; i<100; i++) {
		clear();
     eb2:	fb d1       	rcall	.+1014   	; 0x12aa <clear>
		
		draw_character((0x30 + randInRange(0,9)),middle_x,middle_y);
     eb4:	80 e0       	ldi	r24, 0x00	; 0
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	69 e0       	ldi	r22, 0x09	; 9
     eba:	70 e0       	ldi	r23, 0x00	; 0
     ebc:	4a df       	rcall	.-364    	; 0xd52 <randInRange>
     ebe:	80 5d       	subi	r24, 0xD0	; 208
     ec0:	69 2d       	mov	r22, r9
     ec2:	40 2f       	mov	r20, r16
     ec4:	13 d4       	rcall	.+2086   	; 0x16ec <draw_character>
		refresh();
     ec6:	77 d4       	rcall	.+2286   	; 0x17b6 <refresh>
     ec8:	88 e8       	ldi	r24, 0x88	; 136
     eca:	93 e1       	ldi	r25, 0x13	; 19
     ecc:	f6 01       	movw	r30, r12
     ece:	31 97       	sbiw	r30, 0x01	; 1
     ed0:	f1 f7       	brne	.-4      	; 0xece <main+0xc6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ed2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ed4:	d9 f7       	brne	.-10     	; 0xecc <main+0xc4>

	int middle_x = screen_x/2;
	int middle_y = screen_y/2 + 5;
	byte x, y;
	
	for (int i = 0; i<100; i++) {
     ed6:	08 94       	sec
     ed8:	e1 1c       	adc	r14, r1
     eda:	f1 1c       	adc	r15, r1
     edc:	84 e6       	ldi	r24, 0x64	; 100
     ede:	e8 16       	cp	r14, r24
     ee0:	f1 04       	cpc	r15, r1
     ee2:	39 f7       	brne	.-50     	; 0xeb2 <main+0xaa>
     ee4:	80 2e       	mov	r8, r16
     ee6:	7c e1       	ldi	r23, 0x1C	; 28
     ee8:	c7 2e       	mov	r12, r23
     eea:	d1 2c       	mov	r13, r1
     eec:	cc 0e       	add	r12, r28
     eee:	dd 1e       	adc	r13, r29
     ef0:	6e e7       	ldi	r22, 0x7E	; 126
     ef2:	a6 2e       	mov	r10, r22
     ef4:	61 e0       	ldi	r22, 0x01	; 1
     ef6:	b6 2e       	mov	r11, r22
     ef8:	19 2d       	mov	r17, r9
	}
	
	Sprite zombies[8]; 
	for (int i = 0; i<8; i++) {
	zombie[i] = &zombies[i];
	init_sprite(zombie[i], middle_x + 3*i, middle_y, width, height, bitZombie);
     efa:	54 e0       	ldi	r21, 0x04	; 4
     efc:	65 2e       	mov	r6, r21
     efe:	71 2c       	mov	r7, r1
     f00:	6c 0e       	add	r6, r28
     f02:	7d 1e       	adc	r7, r29
	
	}
	
	Sprite zombies[8]; 
	for (int i = 0; i<8; i++) {
	zombie[i] = &zombies[i];
     f04:	f5 01       	movw	r30, r10
     f06:	c0 82       	st	Z, r12
     f08:	d1 82       	std	Z+1, r13	; 0x01
	init_sprite(zombie[i], middle_x + 3*i, middle_y, width, height, bitZombie);
     f0a:	c6 01       	movw	r24, r12
     f0c:	61 2f       	mov	r22, r17
     f0e:	48 2d       	mov	r20, r8
     f10:	20 91 52 01 	lds	r18, 0x0152
     f14:	00 91 53 01 	lds	r16, 0x0153
     f18:	73 01       	movw	r14, r6
     f1a:	b2 d4       	rcall	.+2404   	; 0x1880 <init_sprite>
     f1c:	82 e0       	ldi	r24, 0x02	; 2
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	a8 0e       	add	r10, r24
     f22:	b9 1e       	adc	r11, r25
     f24:	e5 e1       	ldi	r30, 0x15	; 21
     f26:	f0 e0       	ldi	r31, 0x00	; 0
     f28:	ce 0e       	add	r12, r30
     f2a:	df 1e       	adc	r13, r31
     f2c:	1d 5f       	subi	r17, 0xFD	; 253
		_delay_ms(500);
	
	}
	
	Sprite zombies[8]; 
	for (int i = 0; i<8; i++) {
     f2e:	fe e8       	ldi	r31, 0x8E	; 142
     f30:	af 16       	cp	r10, r31
     f32:	f1 e0       	ldi	r31, 0x01	; 1
     f34:	bf 06       	cpc	r11, r31
     f36:	31 f7       	brne	.-52     	; 0xf04 <main+0xfc>
	// Hero sprite parameters
	x = screen_x/2 - width;
	y = screen_y/2 + 9/2;
	
	Sprite my_sprite;
	my_pointer = &my_sprite;
     f38:	ce 01       	movw	r24, r28
     f3a:	07 96       	adiw	r24, 0x07	; 7
     f3c:	90 93 7d 01 	sts	0x017D, r25
     f40:	80 93 7c 01 	sts	0x017C, r24

	init_sprite(my_pointer, middle_x, middle_y, width, height, bitHero);
     f44:	69 2d       	mov	r22, r9
     f46:	48 2d       	mov	r20, r8
     f48:	20 91 52 01 	lds	r18, 0x0152
     f4c:	00 91 53 01 	lds	r16, 0x0153
     f50:	7e 01       	movw	r14, r28
     f52:	08 94       	sec
     f54:	e1 1c       	adc	r14, r1
     f56:	f1 1c       	adc	r15, r1
     f58:	93 d4       	rcall	.+2342   	; 0x1880 <init_sprite>
	draw_sprite(my_pointer);
     f5a:	80 91 7c 01 	lds	r24, 0x017C
     f5e:	90 91 7d 01 	lds	r25, 0x017D
     f62:	be d4       	rcall	.+2428   	; 0x18e0 <draw_sprite>
     f64:	40 ef       	ldi	r20, 0xF0	; 240
     f66:	e4 2e       	mov	r14, r20
     f68:	4f ef       	ldi	r20, 0xFF	; 255
     f6a:	f4 2e       	mov	r15, r20
     f6c:	ea 0c       	add	r14, r10
     f6e:	fb 1c       	adc	r15, r11
	for (int i = 0; i<8; i++) {
	draw_sprite(zombie[i]);
     f70:	f7 01       	movw	r30, r14
     f72:	81 91       	ld	r24, Z+
     f74:	91 91       	ld	r25, Z+
     f76:	7f 01       	movw	r14, r30
     f78:	b3 d4       	rcall	.+2406   	; 0x18e0 <draw_sprite>
	Sprite my_sprite;
	my_pointer = &my_sprite;

	init_sprite(my_pointer, middle_x, middle_y, width, height, bitHero);
	draw_sprite(my_pointer);
	for (int i = 0; i<8; i++) {
     f7a:	fe e8       	ldi	r31, 0x8E	; 142
     f7c:	ef 16       	cp	r14, r31
     f7e:	f1 e0       	ldi	r31, 0x01	; 1
     f80:	ff 06       	cpc	r15, r31
     f82:	b1 f7       	brne	.-20     	; 0xf70 <main+0x168>
	draw_sprite(zombie[i]);
	}
	
	refresh();
     f84:	18 d4       	rcall	.+2096   	; 0x17b6 <refresh>
     f86:	88 ee       	ldi	r24, 0xE8	; 232
     f88:	93 e0       	ldi	r25, 0x03	; 3
     f8a:	20 e9       	ldi	r18, 0x90	; 144
     f8c:	31 e0       	ldi	r19, 0x01	; 1
     f8e:	f9 01       	movw	r30, r18
     f90:	31 97       	sbiw	r30, 0x01	; 1
     f92:	f1 f7       	brne	.-4      	; 0xf90 <main+0x188>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f94:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f96:	d9 f7       	brne	.-10     	; 0xf8e <main+0x186>
	//int add = 1;
	
	// initialise vars
	int notRIGHT = 1;
	int notLEFT = 1;
	GAMEON = 1;
     f98:	81 e0       	ldi	r24, 0x01	; 1
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	90 93 77 01 	sts	0x0177, r25
     fa0:	80 93 76 01 	sts	0x0176, r24
     fa4:	01 e0       	ldi	r16, 0x01	; 1
     fa6:	10 e0       	ldi	r17, 0x00	; 0
     fa8:	31 e0       	ldi	r19, 0x01	; 1
     faa:	c3 2e       	mov	r12, r19
     fac:	d1 2c       	mov	r13, r1
		
		if (RIGHT && notRIGHT) {
			notRIGHT = 0;
			Direction = (Direction-1);
			if (Direction < 0) {
			Direction = 3;
     fae:	23 e0       	ldi	r18, 0x03	; 3
     fb0:	a2 2e       	mov	r10, r18
     fb2:	b1 2c       	mov	r11, r1
		my_pointer -> y += add;
		my_pointer2 -> y -= add;
		if (my_pointer -> y < 1) add = -add;
		if (my_pointer -> y > screen_y) add = -add;
	*/
		clear();
     fb4:	7a d1       	rcall	.+756    	; 0x12aa <clear>

		if (RIGHT == 0) {
     fb6:	80 91 6a 01 	lds	r24, 0x016A
     fba:	90 91 6b 01 	lds	r25, 0x016B
     fbe:	89 2b       	or	r24, r25
     fc0:	11 f4       	brne	.+4      	; 0xfc6 <main+0x1be>
     fc2:	01 e0       	ldi	r16, 0x01	; 1
     fc4:	10 e0       	ldi	r17, 0x00	; 0
			notRIGHT = 1;
		}
		if (LEFT == 0) {
     fc6:	80 91 68 01 	lds	r24, 0x0168
     fca:	90 91 69 01 	lds	r25, 0x0169
     fce:	89 2b       	or	r24, r25
     fd0:	19 f4       	brne	.+6      	; 0xfd8 <main+0x1d0>
     fd2:	91 e0       	ldi	r25, 0x01	; 1
     fd4:	c9 2e       	mov	r12, r25
     fd6:	d1 2c       	mov	r13, r1
			notLEFT = 1;
		}
		
		if (RIGHT && notRIGHT) {
     fd8:	80 91 6a 01 	lds	r24, 0x016A
     fdc:	90 91 6b 01 	lds	r25, 0x016B
     fe0:	89 2b       	or	r24, r25
     fe2:	c1 f0       	breq	.+48     	; 0x1014 <main+0x20c>
     fe4:	01 15       	cp	r16, r1
     fe6:	11 05       	cpc	r17, r1
     fe8:	a9 f0       	breq	.+42     	; 0x1014 <main+0x20c>
			notRIGHT = 0;
			Direction = (Direction-1);
     fea:	80 91 4e 01 	lds	r24, 0x014E
     fee:	90 91 4f 01 	lds	r25, 0x014F
     ff2:	01 97       	sbiw	r24, 0x01	; 1
     ff4:	90 93 4f 01 	sts	0x014F, r25
     ff8:	80 93 4e 01 	sts	0x014E, r24
			if (Direction < 0) {
     ffc:	80 91 4e 01 	lds	r24, 0x014E
    1000:	90 91 4f 01 	lds	r25, 0x014F
    1004:	97 ff       	sbrs	r25, 7
    1006:	04 c0       	rjmp	.+8      	; 0x1010 <main+0x208>
			Direction = 3;
    1008:	b0 92 4f 01 	sts	0x014F, r11
    100c:	a0 92 4e 01 	sts	0x014E, r10
    1010:	00 e0       	ldi	r16, 0x00	; 0
    1012:	10 e0       	ldi	r17, 0x00	; 0
			//bitmapb = bitmaptemp;
			//my_pointer -> bitmap = bitmapa;
			//my_pointer2 -> bitmap = bitmapb;
			
		}
		if (LEFT & notLEFT) {
    1014:	80 91 68 01 	lds	r24, 0x0168
    1018:	90 91 69 01 	lds	r25, 0x0169
    101c:	8c 21       	and	r24, r12
    101e:	9d 21       	and	r25, r13
    1020:	89 2b       	or	r24, r25
    1022:	71 f0       	breq	.+28     	; 0x1040 <main+0x238>
			notLEFT = 0;
			Direction = (Direction+1)%4;
    1024:	80 91 4e 01 	lds	r24, 0x014E
    1028:	90 91 4f 01 	lds	r25, 0x014F
    102c:	01 96       	adiw	r24, 0x01	; 1
    102e:	64 e0       	ldi	r22, 0x04	; 4
    1030:	70 e0       	ldi	r23, 0x00	; 0
    1032:	20 d5       	rcall	.+2624   	; 0x1a74 <__divmodhi4>
    1034:	90 93 4f 01 	sts	0x014F, r25
    1038:	80 93 4e 01 	sts	0x014E, r24
    103c:	cc 24       	eor	r12, r12
    103e:	dd 24       	eor	r13, r13
			
		}
		
		draw_sprite(my_pointer);
    1040:	80 91 7c 01 	lds	r24, 0x017C
    1044:	90 91 7d 01 	lds	r25, 0x017D
    1048:	4b d4       	rcall	.+2198   	; 0x18e0 <draw_sprite>
    104a:	8e e7       	ldi	r24, 0x7E	; 126
    104c:	e8 2e       	mov	r14, r24
    104e:	81 e0       	ldi	r24, 0x01	; 1
    1050:	f8 2e       	mov	r15, r24
		for (int i = 0; i<8; i++) {
		draw_sprite(zombie[i]);
    1052:	f7 01       	movw	r30, r14
    1054:	81 91       	ld	r24, Z+
    1056:	91 91       	ld	r25, Z+
    1058:	7f 01       	movw	r14, r30
    105a:	42 d4       	rcall	.+2180   	; 0x18e0 <draw_sprite>
			Direction = (Direction+1)%4;
			
		}
		
		draw_sprite(my_pointer);
		for (int i = 0; i<8; i++) {
    105c:	fe e8       	ldi	r31, 0x8E	; 142
    105e:	ef 16       	cp	r14, r31
    1060:	f1 e0       	ldi	r31, 0x01	; 1
    1062:	ff 06       	cpc	r15, r31
    1064:	b1 f7       	brne	.-20     	; 0x1052 <main+0x24a>
		draw_sprite(zombie[i]);
		}
		drawScreen();	
    1066:	24 de       	rcall	.-952    	; 0xcb0 <drawScreen>
		refresh();
    1068:	a6 d3       	rcall	.+1868   	; 0x17b6 <refresh>
    106a:	a4 cf       	rjmp	.-184    	; 0xfb4 <main+0x1ac>

0000106c <__subsf3>:
    106c:	50 58       	subi	r21, 0x80	; 128

0000106e <__addsf3>:
    106e:	bb 27       	eor	r27, r27
    1070:	aa 27       	eor	r26, r26
    1072:	0e d0       	rcall	.+28     	; 0x1090 <__addsf3x>
    1074:	dc c0       	rjmp	.+440    	; 0x122e <__fp_round>
    1076:	cd d0       	rcall	.+410    	; 0x1212 <__fp_pscA>
    1078:	30 f0       	brcs	.+12     	; 0x1086 <__addsf3+0x18>
    107a:	d2 d0       	rcall	.+420    	; 0x1220 <__fp_pscB>
    107c:	20 f0       	brcs	.+8      	; 0x1086 <__addsf3+0x18>
    107e:	31 f4       	brne	.+12     	; 0x108c <__addsf3+0x1e>
    1080:	9f 3f       	cpi	r25, 0xFF	; 255
    1082:	11 f4       	brne	.+4      	; 0x1088 <__addsf3+0x1a>
    1084:	1e f4       	brtc	.+6      	; 0x108c <__addsf3+0x1e>
    1086:	c2 c0       	rjmp	.+388    	; 0x120c <__fp_nan>
    1088:	0e f4       	brtc	.+2      	; 0x108c <__addsf3+0x1e>
    108a:	e0 95       	com	r30
    108c:	e7 fb       	bst	r30, 7
    108e:	b8 c0       	rjmp	.+368    	; 0x1200 <__fp_inf>

00001090 <__addsf3x>:
    1090:	e9 2f       	mov	r30, r25
    1092:	de d0       	rcall	.+444    	; 0x1250 <__fp_split3>
    1094:	80 f3       	brcs	.-32     	; 0x1076 <__addsf3+0x8>
    1096:	ba 17       	cp	r27, r26
    1098:	62 07       	cpc	r22, r18
    109a:	73 07       	cpc	r23, r19
    109c:	84 07       	cpc	r24, r20
    109e:	95 07       	cpc	r25, r21
    10a0:	18 f0       	brcs	.+6      	; 0x10a8 <__addsf3x+0x18>
    10a2:	71 f4       	brne	.+28     	; 0x10c0 <__addsf3x+0x30>
    10a4:	9e f5       	brtc	.+102    	; 0x110c <__addsf3x+0x7c>
    10a6:	f6 c0       	rjmp	.+492    	; 0x1294 <__fp_zero>
    10a8:	0e f4       	brtc	.+2      	; 0x10ac <__addsf3x+0x1c>
    10aa:	e0 95       	com	r30
    10ac:	0b 2e       	mov	r0, r27
    10ae:	ba 2f       	mov	r27, r26
    10b0:	a0 2d       	mov	r26, r0
    10b2:	0b 01       	movw	r0, r22
    10b4:	b9 01       	movw	r22, r18
    10b6:	90 01       	movw	r18, r0
    10b8:	0c 01       	movw	r0, r24
    10ba:	ca 01       	movw	r24, r20
    10bc:	a0 01       	movw	r20, r0
    10be:	11 24       	eor	r1, r1
    10c0:	ff 27       	eor	r31, r31
    10c2:	59 1b       	sub	r21, r25
    10c4:	99 f0       	breq	.+38     	; 0x10ec <__addsf3x+0x5c>
    10c6:	59 3f       	cpi	r21, 0xF9	; 249
    10c8:	50 f4       	brcc	.+20     	; 0x10de <__addsf3x+0x4e>
    10ca:	50 3e       	cpi	r21, 0xE0	; 224
    10cc:	68 f1       	brcs	.+90     	; 0x1128 <__addsf3x+0x98>
    10ce:	1a 16       	cp	r1, r26
    10d0:	f0 40       	sbci	r31, 0x00	; 0
    10d2:	a2 2f       	mov	r26, r18
    10d4:	23 2f       	mov	r18, r19
    10d6:	34 2f       	mov	r19, r20
    10d8:	44 27       	eor	r20, r20
    10da:	58 5f       	subi	r21, 0xF8	; 248
    10dc:	f3 cf       	rjmp	.-26     	; 0x10c4 <__addsf3x+0x34>
    10de:	46 95       	lsr	r20
    10e0:	37 95       	ror	r19
    10e2:	27 95       	ror	r18
    10e4:	a7 95       	ror	r26
    10e6:	f0 40       	sbci	r31, 0x00	; 0
    10e8:	53 95       	inc	r21
    10ea:	c9 f7       	brne	.-14     	; 0x10de <__addsf3x+0x4e>
    10ec:	7e f4       	brtc	.+30     	; 0x110c <__addsf3x+0x7c>
    10ee:	1f 16       	cp	r1, r31
    10f0:	ba 0b       	sbc	r27, r26
    10f2:	62 0b       	sbc	r22, r18
    10f4:	73 0b       	sbc	r23, r19
    10f6:	84 0b       	sbc	r24, r20
    10f8:	ba f0       	brmi	.+46     	; 0x1128 <__addsf3x+0x98>
    10fa:	91 50       	subi	r25, 0x01	; 1
    10fc:	a1 f0       	breq	.+40     	; 0x1126 <__addsf3x+0x96>
    10fe:	ff 0f       	add	r31, r31
    1100:	bb 1f       	adc	r27, r27
    1102:	66 1f       	adc	r22, r22
    1104:	77 1f       	adc	r23, r23
    1106:	88 1f       	adc	r24, r24
    1108:	c2 f7       	brpl	.-16     	; 0x10fa <__addsf3x+0x6a>
    110a:	0e c0       	rjmp	.+28     	; 0x1128 <__addsf3x+0x98>
    110c:	ba 0f       	add	r27, r26
    110e:	62 1f       	adc	r22, r18
    1110:	73 1f       	adc	r23, r19
    1112:	84 1f       	adc	r24, r20
    1114:	48 f4       	brcc	.+18     	; 0x1128 <__addsf3x+0x98>
    1116:	87 95       	ror	r24
    1118:	77 95       	ror	r23
    111a:	67 95       	ror	r22
    111c:	b7 95       	ror	r27
    111e:	f7 95       	ror	r31
    1120:	9e 3f       	cpi	r25, 0xFE	; 254
    1122:	08 f0       	brcs	.+2      	; 0x1126 <__addsf3x+0x96>
    1124:	b3 cf       	rjmp	.-154    	; 0x108c <__addsf3+0x1e>
    1126:	93 95       	inc	r25
    1128:	88 0f       	add	r24, r24
    112a:	08 f0       	brcs	.+2      	; 0x112e <__addsf3x+0x9e>
    112c:	99 27       	eor	r25, r25
    112e:	ee 0f       	add	r30, r30
    1130:	97 95       	ror	r25
    1132:	87 95       	ror	r24
    1134:	08 95       	ret

00001136 <__cmpsf2>:
    1136:	40 d0       	rcall	.+128    	; 0x11b8 <__fp_cmp>
    1138:	08 f4       	brcc	.+2      	; 0x113c <__cmpsf2+0x6>
    113a:	81 e0       	ldi	r24, 0x01	; 1
    113c:	08 95       	ret

0000113e <__floatunsisf>:
    113e:	e8 94       	clt
    1140:	09 c0       	rjmp	.+18     	; 0x1154 <__floatsisf+0x12>

00001142 <__floatsisf>:
    1142:	97 fb       	bst	r25, 7
    1144:	3e f4       	brtc	.+14     	; 0x1154 <__floatsisf+0x12>
    1146:	90 95       	com	r25
    1148:	80 95       	com	r24
    114a:	70 95       	com	r23
    114c:	61 95       	neg	r22
    114e:	7f 4f       	sbci	r23, 0xFF	; 255
    1150:	8f 4f       	sbci	r24, 0xFF	; 255
    1152:	9f 4f       	sbci	r25, 0xFF	; 255
    1154:	99 23       	and	r25, r25
    1156:	a9 f0       	breq	.+42     	; 0x1182 <__floatsisf+0x40>
    1158:	f9 2f       	mov	r31, r25
    115a:	96 e9       	ldi	r25, 0x96	; 150
    115c:	bb 27       	eor	r27, r27
    115e:	93 95       	inc	r25
    1160:	f6 95       	lsr	r31
    1162:	87 95       	ror	r24
    1164:	77 95       	ror	r23
    1166:	67 95       	ror	r22
    1168:	b7 95       	ror	r27
    116a:	f1 11       	cpse	r31, r1
    116c:	f8 cf       	rjmp	.-16     	; 0x115e <__floatsisf+0x1c>
    116e:	fa f4       	brpl	.+62     	; 0x11ae <__floatsisf+0x6c>
    1170:	bb 0f       	add	r27, r27
    1172:	11 f4       	brne	.+4      	; 0x1178 <__floatsisf+0x36>
    1174:	60 ff       	sbrs	r22, 0
    1176:	1b c0       	rjmp	.+54     	; 0x11ae <__floatsisf+0x6c>
    1178:	6f 5f       	subi	r22, 0xFF	; 255
    117a:	7f 4f       	sbci	r23, 0xFF	; 255
    117c:	8f 4f       	sbci	r24, 0xFF	; 255
    117e:	9f 4f       	sbci	r25, 0xFF	; 255
    1180:	16 c0       	rjmp	.+44     	; 0x11ae <__floatsisf+0x6c>
    1182:	88 23       	and	r24, r24
    1184:	11 f0       	breq	.+4      	; 0x118a <__floatsisf+0x48>
    1186:	96 e9       	ldi	r25, 0x96	; 150
    1188:	11 c0       	rjmp	.+34     	; 0x11ac <__floatsisf+0x6a>
    118a:	77 23       	and	r23, r23
    118c:	21 f0       	breq	.+8      	; 0x1196 <__floatsisf+0x54>
    118e:	9e e8       	ldi	r25, 0x8E	; 142
    1190:	87 2f       	mov	r24, r23
    1192:	76 2f       	mov	r23, r22
    1194:	05 c0       	rjmp	.+10     	; 0x11a0 <__floatsisf+0x5e>
    1196:	66 23       	and	r22, r22
    1198:	71 f0       	breq	.+28     	; 0x11b6 <__floatsisf+0x74>
    119a:	96 e8       	ldi	r25, 0x86	; 134
    119c:	86 2f       	mov	r24, r22
    119e:	70 e0       	ldi	r23, 0x00	; 0
    11a0:	60 e0       	ldi	r22, 0x00	; 0
    11a2:	2a f0       	brmi	.+10     	; 0x11ae <__floatsisf+0x6c>
    11a4:	9a 95       	dec	r25
    11a6:	66 0f       	add	r22, r22
    11a8:	77 1f       	adc	r23, r23
    11aa:	88 1f       	adc	r24, r24
    11ac:	da f7       	brpl	.-10     	; 0x11a4 <__floatsisf+0x62>
    11ae:	88 0f       	add	r24, r24
    11b0:	96 95       	lsr	r25
    11b2:	87 95       	ror	r24
    11b4:	97 f9       	bld	r25, 7
    11b6:	08 95       	ret

000011b8 <__fp_cmp>:
    11b8:	99 0f       	add	r25, r25
    11ba:	00 08       	sbc	r0, r0
    11bc:	55 0f       	add	r21, r21
    11be:	aa 0b       	sbc	r26, r26
    11c0:	e0 e8       	ldi	r30, 0x80	; 128
    11c2:	fe ef       	ldi	r31, 0xFE	; 254
    11c4:	16 16       	cp	r1, r22
    11c6:	17 06       	cpc	r1, r23
    11c8:	e8 07       	cpc	r30, r24
    11ca:	f9 07       	cpc	r31, r25
    11cc:	c0 f0       	brcs	.+48     	; 0x11fe <__fp_cmp+0x46>
    11ce:	12 16       	cp	r1, r18
    11d0:	13 06       	cpc	r1, r19
    11d2:	e4 07       	cpc	r30, r20
    11d4:	f5 07       	cpc	r31, r21
    11d6:	98 f0       	brcs	.+38     	; 0x11fe <__fp_cmp+0x46>
    11d8:	62 1b       	sub	r22, r18
    11da:	73 0b       	sbc	r23, r19
    11dc:	84 0b       	sbc	r24, r20
    11de:	95 0b       	sbc	r25, r21
    11e0:	39 f4       	brne	.+14     	; 0x11f0 <__fp_cmp+0x38>
    11e2:	0a 26       	eor	r0, r26
    11e4:	61 f0       	breq	.+24     	; 0x11fe <__fp_cmp+0x46>
    11e6:	23 2b       	or	r18, r19
    11e8:	24 2b       	or	r18, r20
    11ea:	25 2b       	or	r18, r21
    11ec:	21 f4       	brne	.+8      	; 0x11f6 <__fp_cmp+0x3e>
    11ee:	08 95       	ret
    11f0:	0a 26       	eor	r0, r26
    11f2:	09 f4       	brne	.+2      	; 0x11f6 <__fp_cmp+0x3e>
    11f4:	a1 40       	sbci	r26, 0x01	; 1
    11f6:	a6 95       	lsr	r26
    11f8:	8f ef       	ldi	r24, 0xFF	; 255
    11fa:	81 1d       	adc	r24, r1
    11fc:	81 1d       	adc	r24, r1
    11fe:	08 95       	ret

00001200 <__fp_inf>:
    1200:	97 f9       	bld	r25, 7
    1202:	9f 67       	ori	r25, 0x7F	; 127
    1204:	80 e8       	ldi	r24, 0x80	; 128
    1206:	70 e0       	ldi	r23, 0x00	; 0
    1208:	60 e0       	ldi	r22, 0x00	; 0
    120a:	08 95       	ret

0000120c <__fp_nan>:
    120c:	9f ef       	ldi	r25, 0xFF	; 255
    120e:	80 ec       	ldi	r24, 0xC0	; 192
    1210:	08 95       	ret

00001212 <__fp_pscA>:
    1212:	00 24       	eor	r0, r0
    1214:	0a 94       	dec	r0
    1216:	16 16       	cp	r1, r22
    1218:	17 06       	cpc	r1, r23
    121a:	18 06       	cpc	r1, r24
    121c:	09 06       	cpc	r0, r25
    121e:	08 95       	ret

00001220 <__fp_pscB>:
    1220:	00 24       	eor	r0, r0
    1222:	0a 94       	dec	r0
    1224:	12 16       	cp	r1, r18
    1226:	13 06       	cpc	r1, r19
    1228:	14 06       	cpc	r1, r20
    122a:	05 06       	cpc	r0, r21
    122c:	08 95       	ret

0000122e <__fp_round>:
    122e:	09 2e       	mov	r0, r25
    1230:	03 94       	inc	r0
    1232:	00 0c       	add	r0, r0
    1234:	11 f4       	brne	.+4      	; 0x123a <__fp_round+0xc>
    1236:	88 23       	and	r24, r24
    1238:	52 f0       	brmi	.+20     	; 0x124e <__fp_round+0x20>
    123a:	bb 0f       	add	r27, r27
    123c:	40 f4       	brcc	.+16     	; 0x124e <__fp_round+0x20>
    123e:	bf 2b       	or	r27, r31
    1240:	11 f4       	brne	.+4      	; 0x1246 <__fp_round+0x18>
    1242:	60 ff       	sbrs	r22, 0
    1244:	04 c0       	rjmp	.+8      	; 0x124e <__fp_round+0x20>
    1246:	6f 5f       	subi	r22, 0xFF	; 255
    1248:	7f 4f       	sbci	r23, 0xFF	; 255
    124a:	8f 4f       	sbci	r24, 0xFF	; 255
    124c:	9f 4f       	sbci	r25, 0xFF	; 255
    124e:	08 95       	ret

00001250 <__fp_split3>:
    1250:	57 fd       	sbrc	r21, 7
    1252:	90 58       	subi	r25, 0x80	; 128
    1254:	44 0f       	add	r20, r20
    1256:	55 1f       	adc	r21, r21
    1258:	59 f0       	breq	.+22     	; 0x1270 <__fp_splitA+0x10>
    125a:	5f 3f       	cpi	r21, 0xFF	; 255
    125c:	71 f0       	breq	.+28     	; 0x127a <__fp_splitA+0x1a>
    125e:	47 95       	ror	r20

00001260 <__fp_splitA>:
    1260:	88 0f       	add	r24, r24
    1262:	97 fb       	bst	r25, 7
    1264:	99 1f       	adc	r25, r25
    1266:	61 f0       	breq	.+24     	; 0x1280 <__fp_splitA+0x20>
    1268:	9f 3f       	cpi	r25, 0xFF	; 255
    126a:	79 f0       	breq	.+30     	; 0x128a <__fp_splitA+0x2a>
    126c:	87 95       	ror	r24
    126e:	08 95       	ret
    1270:	12 16       	cp	r1, r18
    1272:	13 06       	cpc	r1, r19
    1274:	14 06       	cpc	r1, r20
    1276:	55 1f       	adc	r21, r21
    1278:	f2 cf       	rjmp	.-28     	; 0x125e <__fp_split3+0xe>
    127a:	46 95       	lsr	r20
    127c:	f1 df       	rcall	.-30     	; 0x1260 <__fp_splitA>
    127e:	08 c0       	rjmp	.+16     	; 0x1290 <__fp_splitA+0x30>
    1280:	16 16       	cp	r1, r22
    1282:	17 06       	cpc	r1, r23
    1284:	18 06       	cpc	r1, r24
    1286:	99 1f       	adc	r25, r25
    1288:	f1 cf       	rjmp	.-30     	; 0x126c <__fp_splitA+0xc>
    128a:	86 95       	lsr	r24
    128c:	71 05       	cpc	r23, r1
    128e:	61 05       	cpc	r22, r1
    1290:	08 94       	sec
    1292:	08 95       	ret

00001294 <__fp_zero>:
    1294:	e8 94       	clt

00001296 <__fp_szero>:
    1296:	bb 27       	eor	r27, r27
    1298:	66 27       	eor	r22, r22
    129a:	77 27       	eor	r23, r23
    129c:	cb 01       	movw	r24, r22
    129e:	97 f9       	bld	r25, 7
    12a0:	08 95       	ret

000012a2 <__gesf2>:
    12a2:	8a df       	rcall	.-236    	; 0x11b8 <__fp_cmp>
    12a4:	08 f4       	brcc	.+2      	; 0x12a8 <__gesf2+0x6>
    12a6:	8f ef       	ldi	r24, 0xFF	; 255
    12a8:	08 95       	ret

000012aa <clear>:
    12aa:	e0 e9       	ldi	r30, 0x90	; 144
    12ac:	f1 e0       	ldi	r31, 0x01	; 1
    12ae:	11 92       	st	Z+, r1
    12b0:	83 e0       	ldi	r24, 0x03	; 3
    12b2:	e8 38       	cpi	r30, 0x88	; 136
    12b4:	f8 07       	cpc	r31, r24
    12b6:	d9 f7       	brne	.-10     	; 0x12ae <clear+0x4>
    12b8:	08 95       	ret

000012ba <set_pixel>:
    12ba:	84 35       	cpi	r24, 0x54	; 84
    12bc:	80 f5       	brcc	.+96     	; 0x131e <set_pixel+0x64>
    12be:	60 33       	cpi	r22, 0x30	; 48
    12c0:	70 f5       	brcc	.+92     	; 0x131e <set_pixel+0x64>
    12c2:	26 2f       	mov	r18, r22
    12c4:	26 95       	lsr	r18
    12c6:	26 95       	lsr	r18
    12c8:	26 95       	lsr	r18
    12ca:	67 70       	andi	r22, 0x07	; 7
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	44 23       	and	r20, r20
    12d0:	99 f0       	breq	.+38     	; 0x12f8 <set_pixel+0x3e>
    12d2:	e4 e5       	ldi	r30, 0x54	; 84
    12d4:	2e 9f       	mul	r18, r30
    12d6:	f0 01       	movw	r30, r0
    12d8:	11 24       	eor	r1, r1
    12da:	e8 0f       	add	r30, r24
    12dc:	f9 1f       	adc	r31, r25
    12de:	e0 57       	subi	r30, 0x70	; 112
    12e0:	fe 4f       	sbci	r31, 0xFE	; 254
    12e2:	81 e0       	ldi	r24, 0x01	; 1
    12e4:	90 e0       	ldi	r25, 0x00	; 0
    12e6:	02 c0       	rjmp	.+4      	; 0x12ec <set_pixel+0x32>
    12e8:	88 0f       	add	r24, r24
    12ea:	99 1f       	adc	r25, r25
    12ec:	6a 95       	dec	r22
    12ee:	e2 f7       	brpl	.-8      	; 0x12e8 <set_pixel+0x2e>
    12f0:	20 81       	ld	r18, Z
    12f2:	28 2b       	or	r18, r24
    12f4:	20 83       	st	Z, r18
    12f6:	08 95       	ret
    12f8:	e4 e5       	ldi	r30, 0x54	; 84
    12fa:	2e 9f       	mul	r18, r30
    12fc:	f0 01       	movw	r30, r0
    12fe:	11 24       	eor	r1, r1
    1300:	e8 0f       	add	r30, r24
    1302:	f9 1f       	adc	r31, r25
    1304:	e0 57       	subi	r30, 0x70	; 112
    1306:	fe 4f       	sbci	r31, 0xFE	; 254
    1308:	81 e0       	ldi	r24, 0x01	; 1
    130a:	90 e0       	ldi	r25, 0x00	; 0
    130c:	02 c0       	rjmp	.+4      	; 0x1312 <set_pixel+0x58>
    130e:	88 0f       	add	r24, r24
    1310:	99 1f       	adc	r25, r25
    1312:	6a 95       	dec	r22
    1314:	e2 f7       	brpl	.-8      	; 0x130e <set_pixel+0x54>
    1316:	80 95       	com	r24
    1318:	20 81       	ld	r18, Z
    131a:	28 23       	and	r18, r24
    131c:	20 83       	st	Z, r18
    131e:	08 95       	ret

00001320 <draw_line>:
    1320:	2f 92       	push	r2
    1322:	3f 92       	push	r3
    1324:	4f 92       	push	r4
    1326:	5f 92       	push	r5
    1328:	6f 92       	push	r6
    132a:	7f 92       	push	r7
    132c:	8f 92       	push	r8
    132e:	9f 92       	push	r9
    1330:	af 92       	push	r10
    1332:	bf 92       	push	r11
    1334:	cf 92       	push	r12
    1336:	df 92       	push	r13
    1338:	ef 92       	push	r14
    133a:	ff 92       	push	r15
    133c:	0f 93       	push	r16
    133e:	1f 93       	push	r17
    1340:	df 93       	push	r29
    1342:	cf 93       	push	r28
    1344:	cd b7       	in	r28, 0x3d	; 61
    1346:	de b7       	in	r29, 0x3e	; 62
    1348:	66 97       	sbiw	r28, 0x16	; 22
    134a:	0f b6       	in	r0, 0x3f	; 63
    134c:	f8 94       	cli
    134e:	de bf       	out	0x3e, r29	; 62
    1350:	0f be       	out	0x3f, r0	; 63
    1352:	cd bf       	out	0x3d, r28	; 61
    1354:	c8 2e       	mov	r12, r24
    1356:	d6 2e       	mov	r13, r22
    1358:	49 87       	std	Y+9, r20	; 0x09
    135a:	2a 87       	std	Y+10, r18	; 0x0a
    135c:	84 17       	cp	r24, r20
    135e:	59 f4       	brne	.+22     	; 0x1376 <draw_line+0x56>
    1360:	16 2f       	mov	r17, r22
    1362:	05 c0       	rjmp	.+10     	; 0x136e <draw_line+0x4e>
    1364:	8c 2d       	mov	r24, r12
    1366:	61 2f       	mov	r22, r17
    1368:	41 e0       	ldi	r20, 0x01	; 1
    136a:	a7 df       	rcall	.-178    	; 0x12ba <set_pixel>
    136c:	1f 5f       	subi	r17, 0xFF	; 255
    136e:	2a 85       	ldd	r18, Y+10	; 0x0a
    1370:	21 17       	cp	r18, r17
    1372:	c0 f7       	brcc	.-16     	; 0x1364 <draw_line+0x44>
    1374:	a2 c1       	rjmp	.+836    	; 0x16ba <draw_line+0x39a>
    1376:	3a 85       	ldd	r19, Y+10	; 0x0a
    1378:	63 17       	cp	r22, r19
    137a:	59 f4       	brne	.+22     	; 0x1392 <draw_line+0x72>
    137c:	18 2f       	mov	r17, r24
    137e:	05 c0       	rjmp	.+10     	; 0x138a <draw_line+0x6a>
    1380:	81 2f       	mov	r24, r17
    1382:	6d 2d       	mov	r22, r13
    1384:	41 e0       	ldi	r20, 0x01	; 1
    1386:	99 df       	rcall	.-206    	; 0x12ba <set_pixel>
    1388:	1f 5f       	subi	r17, 0xFF	; 255
    138a:	49 85       	ldd	r20, Y+9	; 0x09
    138c:	41 17       	cp	r20, r17
    138e:	c0 f7       	brcc	.-16     	; 0x1380 <draw_line+0x60>
    1390:	94 c1       	rjmp	.+808    	; 0x16ba <draw_line+0x39a>
    1392:	5a 85       	ldd	r21, Y+10	; 0x0a
    1394:	65 2f       	mov	r22, r21
    1396:	70 e0       	ldi	r23, 0x00	; 0
    1398:	80 e0       	ldi	r24, 0x00	; 0
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	d0 de       	rcall	.-608    	; 0x113e <__floatunsisf>
    139e:	7b 01       	movw	r14, r22
    13a0:	8c 01       	movw	r16, r24
    13a2:	8d 2d       	mov	r24, r13
    13a4:	90 e0       	ldi	r25, 0x00	; 0
    13a6:	9c 87       	std	Y+12, r25	; 0x0c
    13a8:	8b 87       	std	Y+11, r24	; 0x0b
    13aa:	fc 01       	movw	r30, r24
    13ac:	bf 01       	movw	r22, r30
    13ae:	88 27       	eor	r24, r24
    13b0:	77 fd       	sbrc	r23, 7
    13b2:	80 95       	com	r24
    13b4:	98 2f       	mov	r25, r24
    13b6:	c5 de       	rcall	.-630    	; 0x1142 <__floatsisf>
    13b8:	9b 01       	movw	r18, r22
    13ba:	ac 01       	movw	r20, r24
    13bc:	c8 01       	movw	r24, r16
    13be:	b7 01       	movw	r22, r14
    13c0:	55 de       	rcall	.-854    	; 0x106c <__subsf3>
    13c2:	1b 01       	movw	r2, r22
    13c4:	2c 01       	movw	r4, r24
    13c6:	f9 85       	ldd	r31, Y+9	; 0x09
    13c8:	6f 2f       	mov	r22, r31
    13ca:	70 e0       	ldi	r23, 0x00	; 0
    13cc:	80 e0       	ldi	r24, 0x00	; 0
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	b6 de       	rcall	.-660    	; 0x113e <__floatunsisf>
    13d2:	7b 01       	movw	r14, r22
    13d4:	8c 01       	movw	r16, r24
    13d6:	ac 2c       	mov	r10, r12
    13d8:	bb 24       	eor	r11, r11
    13da:	b5 01       	movw	r22, r10
    13dc:	88 27       	eor	r24, r24
    13de:	77 fd       	sbrc	r23, 7
    13e0:	80 95       	com	r24
    13e2:	98 2f       	mov	r25, r24
    13e4:	ae de       	rcall	.-676    	; 0x1142 <__floatsisf>
    13e6:	9b 01       	movw	r18, r22
    13e8:	ac 01       	movw	r20, r24
    13ea:	c8 01       	movw	r24, r16
    13ec:	b7 01       	movw	r22, r14
    13ee:	3e de       	rcall	.-900    	; 0x106c <__subsf3>
    13f0:	3b 01       	movw	r6, r22
    13f2:	4c 01       	movw	r8, r24
    13f4:	c2 01       	movw	r24, r4
    13f6:	b1 01       	movw	r22, r2
    13f8:	a4 01       	movw	r20, r8
    13fa:	93 01       	movw	r18, r6
    13fc:	83 d8       	rcall	.-3834   	; 0x504 <__divsf3>
    13fe:	7b 01       	movw	r14, r22
    1400:	8c 01       	movw	r16, r24
    1402:	29 85       	ldd	r18, Y+9	; 0x09
    1404:	c2 16       	cp	r12, r18
    1406:	08 f0       	brcs	.+2      	; 0x140a <draw_line+0xea>
    1408:	38 c0       	rjmp	.+112    	; 0x147a <draw_line+0x15a>
    140a:	20 e0       	ldi	r18, 0x00	; 0
    140c:	30 e0       	ldi	r19, 0x00	; 0
    140e:	40 e8       	ldi	r20, 0x80	; 128
    1410:	5f e3       	ldi	r21, 0x3F	; 63
    1412:	47 df       	rcall	.-370    	; 0x12a2 <__gesf2>
    1414:	18 16       	cp	r1, r24
    1416:	24 f4       	brge	.+8      	; 0x1420 <draw_line+0x100>
    1418:	71 e0       	ldi	r23, 0x01	; 1
    141a:	c7 2e       	mov	r12, r23
    141c:	d1 2c       	mov	r13, r1
    141e:	37 c1       	rjmp	.+622    	; 0x168e <draw_line+0x36e>
    1420:	c8 01       	movw	r24, r16
    1422:	b7 01       	movw	r22, r14
    1424:	20 e0       	ldi	r18, 0x00	; 0
    1426:	30 e0       	ldi	r19, 0x00	; 0
    1428:	40 e8       	ldi	r20, 0x80	; 128
    142a:	5f e3       	ldi	r21, 0x3F	; 63
    142c:	84 de       	rcall	.-760    	; 0x1136 <__cmpsf2>
    142e:	18 16       	cp	r1, r24
    1430:	64 f0       	brlt	.+24     	; 0x144a <draw_line+0x12a>
    1432:	c8 01       	movw	r24, r16
    1434:	b7 01       	movw	r22, r14
    1436:	20 e0       	ldi	r18, 0x00	; 0
    1438:	30 e0       	ldi	r19, 0x00	; 0
    143a:	40 e0       	ldi	r20, 0x00	; 0
    143c:	50 e0       	ldi	r21, 0x00	; 0
    143e:	31 df       	rcall	.-414    	; 0x12a2 <__gesf2>
    1440:	18 16       	cp	r1, r24
    1442:	1c f4       	brge	.+6      	; 0x144a <draw_line+0x12a>
    1444:	cc 24       	eor	r12, r12
    1446:	dd 24       	eor	r13, r13
    1448:	50 c0       	rjmp	.+160    	; 0x14ea <draw_line+0x1ca>
    144a:	c8 01       	movw	r24, r16
    144c:	b7 01       	movw	r22, r14
    144e:	20 e0       	ldi	r18, 0x00	; 0
    1450:	30 e0       	ldi	r19, 0x00	; 0
    1452:	40 e0       	ldi	r20, 0x00	; 0
    1454:	50 e0       	ldi	r21, 0x00	; 0
    1456:	6f de       	rcall	.-802    	; 0x1136 <__cmpsf2>
    1458:	18 16       	cp	r1, r24
    145a:	0c f4       	brge	.+2      	; 0x145e <draw_line+0x13e>
    145c:	11 c1       	rjmp	.+546    	; 0x1680 <draw_line+0x360>
    145e:	c8 01       	movw	r24, r16
    1460:	b7 01       	movw	r22, r14
    1462:	20 e0       	ldi	r18, 0x00	; 0
    1464:	30 e0       	ldi	r19, 0x00	; 0
    1466:	40 e8       	ldi	r20, 0x80	; 128
    1468:	5f eb       	ldi	r21, 0xBF	; 191
    146a:	1b df       	rcall	.-458    	; 0x12a2 <__gesf2>
    146c:	18 16       	cp	r1, r24
    146e:	0c f0       	brlt	.+2      	; 0x1472 <draw_line+0x152>
    1470:	07 c1       	rjmp	.+526    	; 0x1680 <draw_line+0x360>
    1472:	67 e0       	ldi	r22, 0x07	; 7
    1474:	c6 2e       	mov	r12, r22
    1476:	d1 2c       	mov	r13, r1
    1478:	38 c0       	rjmp	.+112    	; 0x14ea <draw_line+0x1ca>
    147a:	20 e0       	ldi	r18, 0x00	; 0
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	40 e8       	ldi	r20, 0x80	; 128
    1480:	5f e3       	ldi	r21, 0x3F	; 63
    1482:	0f df       	rcall	.-482    	; 0x12a2 <__gesf2>
    1484:	18 16       	cp	r1, r24
    1486:	24 f4       	brge	.+8      	; 0x1490 <draw_line+0x170>
    1488:	55 e0       	ldi	r21, 0x05	; 5
    148a:	c5 2e       	mov	r12, r21
    148c:	d1 2c       	mov	r13, r1
    148e:	ff c0       	rjmp	.+510    	; 0x168e <draw_line+0x36e>
    1490:	c8 01       	movw	r24, r16
    1492:	b7 01       	movw	r22, r14
    1494:	20 e0       	ldi	r18, 0x00	; 0
    1496:	30 e0       	ldi	r19, 0x00	; 0
    1498:	40 e8       	ldi	r20, 0x80	; 128
    149a:	5f e3       	ldi	r21, 0x3F	; 63
    149c:	4c de       	rcall	.-872    	; 0x1136 <__cmpsf2>
    149e:	18 16       	cp	r1, r24
    14a0:	6c f0       	brlt	.+26     	; 0x14bc <draw_line+0x19c>
    14a2:	c8 01       	movw	r24, r16
    14a4:	b7 01       	movw	r22, r14
    14a6:	20 e0       	ldi	r18, 0x00	; 0
    14a8:	30 e0       	ldi	r19, 0x00	; 0
    14aa:	40 e0       	ldi	r20, 0x00	; 0
    14ac:	50 e0       	ldi	r21, 0x00	; 0
    14ae:	f9 de       	rcall	.-526    	; 0x12a2 <__gesf2>
    14b0:	18 16       	cp	r1, r24
    14b2:	24 f4       	brge	.+8      	; 0x14bc <draw_line+0x19c>
    14b4:	44 e0       	ldi	r20, 0x04	; 4
    14b6:	c4 2e       	mov	r12, r20
    14b8:	d1 2c       	mov	r13, r1
    14ba:	17 c0       	rjmp	.+46     	; 0x14ea <draw_line+0x1ca>
    14bc:	c8 01       	movw	r24, r16
    14be:	b7 01       	movw	r22, r14
    14c0:	20 e0       	ldi	r18, 0x00	; 0
    14c2:	30 e0       	ldi	r19, 0x00	; 0
    14c4:	40 e0       	ldi	r20, 0x00	; 0
    14c6:	50 e0       	ldi	r21, 0x00	; 0
    14c8:	36 de       	rcall	.-916    	; 0x1136 <__cmpsf2>
    14ca:	18 16       	cp	r1, r24
    14cc:	0c f4       	brge	.+2      	; 0x14d0 <draw_line+0x1b0>
    14ce:	dc c0       	rjmp	.+440    	; 0x1688 <draw_line+0x368>
    14d0:	c8 01       	movw	r24, r16
    14d2:	b7 01       	movw	r22, r14
    14d4:	20 e0       	ldi	r18, 0x00	; 0
    14d6:	30 e0       	ldi	r19, 0x00	; 0
    14d8:	40 e8       	ldi	r20, 0x80	; 128
    14da:	5f eb       	ldi	r21, 0xBF	; 191
    14dc:	e2 de       	rcall	.-572    	; 0x12a2 <__gesf2>
    14de:	18 16       	cp	r1, r24
    14e0:	0c f0       	brlt	.+2      	; 0x14e4 <draw_line+0x1c4>
    14e2:	d2 c0       	rjmp	.+420    	; 0x1688 <draw_line+0x368>
    14e4:	33 e0       	ldi	r19, 0x03	; 3
    14e6:	c3 2e       	mov	r12, r19
    14e8:	d1 2c       	mov	r13, r1
    14ea:	4b 85       	ldd	r20, Y+11	; 0x0b
    14ec:	5c 85       	ldd	r21, Y+12	; 0x0c
    14ee:	5a 83       	std	Y+2, r21	; 0x02
    14f0:	49 83       	std	Y+1, r20	; 0x01
    14f2:	be 82       	std	Y+6, r11	; 0x06
    14f4:	ad 82       	std	Y+5, r10	; 0x05
    14f6:	99 85       	ldd	r25, Y+9	; 0x09
    14f8:	89 2f       	mov	r24, r25
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	9c 83       	std	Y+4, r25	; 0x04
    14fe:	8b 83       	std	Y+3, r24	; 0x03
    1500:	17 01       	movw	r2, r14
    1502:	28 01       	movw	r4, r16
    1504:	e1 e0       	ldi	r30, 0x01	; 1
    1506:	f0 e0       	ldi	r31, 0x00	; 0
    1508:	f8 87       	std	Y+8, r31	; 0x08
    150a:	ef 83       	std	Y+7, r30	; 0x07
    150c:	f7 e0       	ldi	r31, 0x07	; 7
    150e:	cf 16       	cp	r12, r31
    1510:	d1 04       	cpc	r13, r1
    1512:	28 f4       	brcc	.+10     	; 0x151e <draw_line+0x1fe>
    1514:	23 e0       	ldi	r18, 0x03	; 3
    1516:	c2 16       	cp	r12, r18
    1518:	d1 04       	cpc	r13, r1
    151a:	40 f4       	brcc	.+16     	; 0x152c <draw_line+0x20c>
    151c:	04 c0       	rjmp	.+8      	; 0x1526 <draw_line+0x206>
    151e:	37 e0       	ldi	r19, 0x07	; 7
    1520:	c3 16       	cp	r12, r19
    1522:	d1 04       	cpc	r13, r1
    1524:	29 f4       	brne	.+10     	; 0x1530 <draw_line+0x210>
    1526:	81 e0       	ldi	r24, 0x01	; 1
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	02 c0       	rjmp	.+4      	; 0x1530 <draw_line+0x210>
    152c:	8f ef       	ldi	r24, 0xFF	; 255
    152e:	9f ef       	ldi	r25, 0xFF	; 255
    1530:	ad 80       	ldd	r10, Y+5	; 0x05
    1532:	be 80       	ldd	r11, Y+6	; 0x06
    1534:	0f 2e       	mov	r0, r31
    1536:	f0 e0       	ldi	r31, 0x00	; 0
    1538:	6f 2e       	mov	r6, r31
    153a:	f0 e0       	ldi	r31, 0x00	; 0
    153c:	7f 2e       	mov	r7, r31
    153e:	f0 e0       	ldi	r31, 0x00	; 0
    1540:	8f 2e       	mov	r8, r31
    1542:	f0 e0       	ldi	r31, 0x00	; 0
    1544:	9f 2e       	mov	r9, r31
    1546:	f0 2d       	mov	r31, r0
    1548:	a2 01       	movw	r20, r4
    154a:	91 01       	movw	r18, r2
    154c:	50 58       	subi	r21, 0x80	; 128
    154e:	2d 87       	std	Y+13, r18	; 0x0d
    1550:	3e 87       	std	Y+14, r19	; 0x0e
    1552:	4f 87       	std	Y+15, r20	; 0x0f
    1554:	58 8b       	std	Y+16, r21	; 0x10
    1556:	9c 01       	movw	r18, r24
    1558:	44 27       	eor	r20, r20
    155a:	37 fd       	sbrc	r19, 7
    155c:	40 95       	com	r20
    155e:	54 2f       	mov	r21, r20
    1560:	29 8b       	std	Y+17, r18	; 0x11
    1562:	3a 8b       	std	Y+18, r19	; 0x12
    1564:	4b 8b       	std	Y+19, r20	; 0x13
    1566:	5c 8b       	std	Y+20, r21	; 0x14
    1568:	7a c0       	rjmp	.+244    	; 0x165e <draw_line+0x33e>
    156a:	4f 81       	ldd	r20, Y+7	; 0x07
    156c:	58 85       	ldd	r21, Y+8	; 0x08
    156e:	45 2b       	or	r20, r21
    1570:	19 f0       	breq	.+6      	; 0x1578 <draw_line+0x258>
    1572:	8a 2d       	mov	r24, r10
    1574:	69 81       	ldd	r22, Y+1	; 0x01
    1576:	02 c0       	rjmp	.+4      	; 0x157c <draw_line+0x25c>
    1578:	89 81       	ldd	r24, Y+1	; 0x01
    157a:	6a 2d       	mov	r22, r10
    157c:	41 e0       	ldi	r20, 0x01	; 1
    157e:	9d de       	rcall	.-710    	; 0x12ba <set_pixel>
    1580:	c2 01       	movw	r24, r4
    1582:	b1 01       	movw	r22, r2
    1584:	20 e0       	ldi	r18, 0x00	; 0
    1586:	30 e0       	ldi	r19, 0x00	; 0
    1588:	40 e0       	ldi	r20, 0x00	; 0
    158a:	50 e0       	ldi	r21, 0x00	; 0
    158c:	8a de       	rcall	.-748    	; 0x12a2 <__gesf2>
    158e:	88 23       	and	r24, r24
    1590:	1c f0       	brlt	.+6      	; 0x1598 <draw_line+0x278>
    1592:	a2 01       	movw	r20, r4
    1594:	91 01       	movw	r18, r2
    1596:	04 c0       	rjmp	.+8      	; 0x15a0 <draw_line+0x280>
    1598:	2d 85       	ldd	r18, Y+13	; 0x0d
    159a:	3e 85       	ldd	r19, Y+14	; 0x0e
    159c:	4f 85       	ldd	r20, Y+15	; 0x0f
    159e:	58 89       	ldd	r21, Y+16	; 0x10
    15a0:	c4 01       	movw	r24, r8
    15a2:	b3 01       	movw	r22, r6
    15a4:	64 dd       	rcall	.-1336   	; 0x106e <__addsf3>
    15a6:	3b 01       	movw	r6, r22
    15a8:	4c 01       	movw	r8, r24
    15aa:	20 e0       	ldi	r18, 0x00	; 0
    15ac:	30 e0       	ldi	r19, 0x00	; 0
    15ae:	40 e0       	ldi	r20, 0x00	; 0
    15b0:	5f e3       	ldi	r21, 0x3F	; 63
    15b2:	77 de       	rcall	.-786    	; 0x12a2 <__gesf2>
    15b4:	18 16       	cp	r1, r24
    15b6:	0c f0       	brlt	.+2      	; 0x15ba <draw_line+0x29a>
    15b8:	44 c0       	rjmp	.+136    	; 0x1642 <draw_line+0x322>
    15ba:	69 89       	ldd	r22, Y+17	; 0x11
    15bc:	7a 89       	ldd	r23, Y+18	; 0x12
    15be:	8b 89       	ldd	r24, Y+19	; 0x13
    15c0:	9c 89       	ldd	r25, Y+20	; 0x14
    15c2:	bf dd       	rcall	.-1154   	; 0x1142 <__floatsisf>
    15c4:	9b 01       	movw	r18, r22
    15c6:	ac 01       	movw	r20, r24
    15c8:	c2 01       	movw	r24, r4
    15ca:	b1 01       	movw	r22, r2
    15cc:	0e 94 8b 01 	call	0x316	; 0x316 <__mulsf3>
    15d0:	7b 01       	movw	r14, r22
    15d2:	8c 01       	movw	r16, r24
    15d4:	1e 8a       	std	Y+22, r1	; 0x16
    15d6:	1d 8a       	std	Y+21, r1	; 0x15
    15d8:	20 e0       	ldi	r18, 0x00	; 0
    15da:	30 e0       	ldi	r19, 0x00	; 0
    15dc:	40 e0       	ldi	r20, 0x00	; 0
    15de:	50 e0       	ldi	r21, 0x00	; 0
    15e0:	60 de       	rcall	.-832    	; 0x12a2 <__gesf2>
    15e2:	18 16       	cp	r1, r24
    15e4:	24 f4       	brge	.+8      	; 0x15ee <draw_line+0x2ce>
    15e6:	81 e0       	ldi	r24, 0x01	; 1
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	9e 8b       	std	Y+22, r25	; 0x16
    15ec:	8d 8b       	std	Y+21, r24	; 0x15
    15ee:	cc 24       	eor	r12, r12
    15f0:	dd 24       	eor	r13, r13
    15f2:	c8 01       	movw	r24, r16
    15f4:	b7 01       	movw	r22, r14
    15f6:	20 e0       	ldi	r18, 0x00	; 0
    15f8:	30 e0       	ldi	r19, 0x00	; 0
    15fa:	40 e0       	ldi	r20, 0x00	; 0
    15fc:	50 e0       	ldi	r21, 0x00	; 0
    15fe:	9b dd       	rcall	.-1226   	; 0x1136 <__cmpsf2>
    1600:	88 23       	and	r24, r24
    1602:	1c f4       	brge	.+6      	; 0x160a <draw_line+0x2ea>
    1604:	21 e0       	ldi	r18, 0x01	; 1
    1606:	c2 2e       	mov	r12, r18
    1608:	d1 2c       	mov	r13, r1
    160a:	ed 89       	ldd	r30, Y+21	; 0x15
    160c:	fe 89       	ldd	r31, Y+22	; 0x16
    160e:	ec 19       	sub	r30, r12
    1610:	fd 09       	sbc	r31, r13
    1612:	31 97       	sbiw	r30, 0x01	; 1
    1614:	39 f4       	brne	.+14     	; 0x1624 <draw_line+0x304>
    1616:	29 81       	ldd	r18, Y+1	; 0x01
    1618:	3a 81       	ldd	r19, Y+2	; 0x02
    161a:	2f 5f       	subi	r18, 0xFF	; 255
    161c:	3f 4f       	sbci	r19, 0xFF	; 255
    161e:	3a 83       	std	Y+2, r19	; 0x02
    1620:	29 83       	std	Y+1, r18	; 0x01
    1622:	06 c0       	rjmp	.+12     	; 0x1630 <draw_line+0x310>
    1624:	49 81       	ldd	r20, Y+1	; 0x01
    1626:	5a 81       	ldd	r21, Y+2	; 0x02
    1628:	41 50       	subi	r20, 0x01	; 1
    162a:	50 40       	sbci	r21, 0x00	; 0
    162c:	5a 83       	std	Y+2, r21	; 0x02
    162e:	49 83       	std	Y+1, r20	; 0x01
    1630:	c4 01       	movw	r24, r8
    1632:	b3 01       	movw	r22, r6
    1634:	20 e0       	ldi	r18, 0x00	; 0
    1636:	30 e0       	ldi	r19, 0x00	; 0
    1638:	40 e8       	ldi	r20, 0x80	; 128
    163a:	5f e3       	ldi	r21, 0x3F	; 63
    163c:	17 dd       	rcall	.-1490   	; 0x106c <__subsf3>
    163e:	3b 01       	movw	r6, r22
    1640:	4c 01       	movw	r8, r24
    1642:	8b 81       	ldd	r24, Y+3	; 0x03
    1644:	9c 81       	ldd	r25, Y+4	; 0x04
    1646:	ed 81       	ldd	r30, Y+5	; 0x05
    1648:	fe 81       	ldd	r31, Y+6	; 0x06
    164a:	e8 17       	cp	r30, r24
    164c:	f9 07       	cpc	r31, r25
    164e:	20 f4       	brcc	.+8      	; 0x1658 <draw_line+0x338>
    1650:	08 94       	sec
    1652:	a1 1c       	adc	r10, r1
    1654:	b1 1c       	adc	r11, r1
    1656:	03 c0       	rjmp	.+6      	; 0x165e <draw_line+0x33e>
    1658:	08 94       	sec
    165a:	a1 08       	sbc	r10, r1
    165c:	b1 08       	sbc	r11, r1
    165e:	2b 81       	ldd	r18, Y+3	; 0x03
    1660:	3c 81       	ldd	r19, Y+4	; 0x04
    1662:	4d 81       	ldd	r20, Y+5	; 0x05
    1664:	5e 81       	ldd	r21, Y+6	; 0x06
    1666:	42 17       	cp	r20, r18
    1668:	53 07       	cpc	r21, r19
    166a:	20 f4       	brcc	.+8      	; 0x1674 <draw_line+0x354>
    166c:	2a 15       	cp	r18, r10
    166e:	3b 05       	cpc	r19, r11
    1670:	20 f1       	brcs	.+72     	; 0x16ba <draw_line+0x39a>
    1672:	7b cf       	rjmp	.-266    	; 0x156a <draw_line+0x24a>
    1674:	8b 81       	ldd	r24, Y+3	; 0x03
    1676:	9c 81       	ldd	r25, Y+4	; 0x04
    1678:	a8 16       	cp	r10, r24
    167a:	b9 06       	cpc	r11, r25
    167c:	f0 f0       	brcs	.+60     	; 0x16ba <draw_line+0x39a>
    167e:	75 cf       	rjmp	.-278    	; 0x156a <draw_line+0x24a>
    1680:	96 e0       	ldi	r25, 0x06	; 6
    1682:	c9 2e       	mov	r12, r25
    1684:	d1 2c       	mov	r13, r1
    1686:	03 c0       	rjmp	.+6      	; 0x168e <draw_line+0x36e>
    1688:	82 e0       	ldi	r24, 0x02	; 2
    168a:	c8 2e       	mov	r12, r24
    168c:	d1 2c       	mov	r13, r1
    168e:	c4 01       	movw	r24, r8
    1690:	b3 01       	movw	r22, r6
    1692:	a2 01       	movw	r20, r4
    1694:	91 01       	movw	r18, r2
    1696:	0e 94 82 02 	call	0x504	; 0x504 <__divsf3>
    169a:	1b 01       	movw	r2, r22
    169c:	2c 01       	movw	r4, r24
    169e:	ba 82       	std	Y+2, r11	; 0x02
    16a0:	a9 82       	std	Y+1, r10	; 0x01
    16a2:	eb 85       	ldd	r30, Y+11	; 0x0b
    16a4:	fc 85       	ldd	r31, Y+12	; 0x0c
    16a6:	fe 83       	std	Y+6, r31	; 0x06
    16a8:	ed 83       	std	Y+5, r30	; 0x05
    16aa:	3a 85       	ldd	r19, Y+10	; 0x0a
    16ac:	23 2f       	mov	r18, r19
    16ae:	30 e0       	ldi	r19, 0x00	; 0
    16b0:	3c 83       	std	Y+4, r19	; 0x04
    16b2:	2b 83       	std	Y+3, r18	; 0x03
    16b4:	18 86       	std	Y+8, r1	; 0x08
    16b6:	1f 82       	std	Y+7, r1	; 0x07
    16b8:	29 cf       	rjmp	.-430    	; 0x150c <draw_line+0x1ec>
    16ba:	66 96       	adiw	r28, 0x16	; 22
    16bc:	0f b6       	in	r0, 0x3f	; 63
    16be:	f8 94       	cli
    16c0:	de bf       	out	0x3e, r29	; 62
    16c2:	0f be       	out	0x3f, r0	; 63
    16c4:	cd bf       	out	0x3d, r28	; 61
    16c6:	cf 91       	pop	r28
    16c8:	df 91       	pop	r29
    16ca:	1f 91       	pop	r17
    16cc:	0f 91       	pop	r16
    16ce:	ff 90       	pop	r15
    16d0:	ef 90       	pop	r14
    16d2:	df 90       	pop	r13
    16d4:	cf 90       	pop	r12
    16d6:	bf 90       	pop	r11
    16d8:	af 90       	pop	r10
    16da:	9f 90       	pop	r9
    16dc:	8f 90       	pop	r8
    16de:	7f 90       	pop	r7
    16e0:	6f 90       	pop	r6
    16e2:	5f 90       	pop	r5
    16e4:	4f 90       	pop	r4
    16e6:	3f 90       	pop	r3
    16e8:	2f 90       	pop	r2
    16ea:	08 95       	ret

000016ec <draw_character>:
    16ec:	8f 92       	push	r8
    16ee:	9f 92       	push	r9
    16f0:	af 92       	push	r10
    16f2:	bf 92       	push	r11
    16f4:	cf 92       	push	r12
    16f6:	df 92       	push	r13
    16f8:	ef 92       	push	r14
    16fa:	ff 92       	push	r15
    16fc:	0f 93       	push	r16
    16fe:	1f 93       	push	r17
    1700:	cf 93       	push	r28
    1702:	df 93       	push	r29
    1704:	d6 2e       	mov	r13, r22
    1706:	c4 2e       	mov	r12, r20
    1708:	95 e0       	ldi	r25, 0x05	; 5
    170a:	89 9f       	mul	r24, r25
    170c:	c0 01       	movw	r24, r0
    170e:	11 24       	eor	r1, r1
    1710:	8c 01       	movw	r16, r24
    1712:	04 5f       	subi	r16, 0xF4	; 244
    1714:	1f 4f       	sbci	r17, 0xFF	; 255
    1716:	f1 e0       	ldi	r31, 0x01	; 1
    1718:	8f 2e       	mov	r8, r31
    171a:	91 2c       	mov	r9, r1
    171c:	e1 e1       	ldi	r30, 0x11	; 17
    171e:	ae 2e       	mov	r10, r30
    1720:	e0 e0       	ldi	r30, 0x00	; 0
    1722:	be 2e       	mov	r11, r30
    1724:	a8 0e       	add	r10, r24
    1726:	b9 1e       	adc	r11, r25
    1728:	1d c0       	rjmp	.+58     	; 0x1764 <draw_character+0x78>
    172a:	6c 2d       	mov	r22, r12
    172c:	6c 0f       	add	r22, r28
    172e:	a4 01       	movw	r20, r8
    1730:	0c 2e       	mov	r0, r28
    1732:	02 c0       	rjmp	.+4      	; 0x1738 <draw_character+0x4c>
    1734:	44 0f       	add	r20, r20
    1736:	55 1f       	adc	r21, r21
    1738:	0a 94       	dec	r0
    173a:	e2 f7       	brpl	.-8      	; 0x1734 <draw_character+0x48>
    173c:	4e 21       	and	r20, r14
    173e:	5f 21       	and	r21, r15
    1740:	0c 2e       	mov	r0, r28
    1742:	02 c0       	rjmp	.+4      	; 0x1748 <draw_character+0x5c>
    1744:	55 95       	asr	r21
    1746:	47 95       	ror	r20
    1748:	0a 94       	dec	r0
    174a:	e2 f7       	brpl	.-8      	; 0x1744 <draw_character+0x58>
    174c:	8d 2d       	mov	r24, r13
    174e:	b5 dd       	rcall	.-1174   	; 0x12ba <set_pixel>
    1750:	21 96       	adiw	r28, 0x01	; 1
    1752:	c8 30       	cpi	r28, 0x08	; 8
    1754:	d1 05       	cpc	r29, r1
    1756:	49 f7       	brne	.-46     	; 0x172a <draw_character+0x3e>
    1758:	0f 5f       	subi	r16, 0xFF	; 255
    175a:	1f 4f       	sbci	r17, 0xFF	; 255
    175c:	d3 94       	inc	r13
    175e:	0a 15       	cp	r16, r10
    1760:	1b 05       	cpc	r17, r11
    1762:	39 f0       	breq	.+14     	; 0x1772 <draw_character+0x86>
    1764:	c0 e0       	ldi	r28, 0x00	; 0
    1766:	d0 e0       	ldi	r29, 0x00	; 0
    1768:	f8 01       	movw	r30, r16
    176a:	84 91       	lpm	r24, Z+
    176c:	e8 2e       	mov	r14, r24
    176e:	ff 24       	eor	r15, r15
    1770:	dc cf       	rjmp	.-72     	; 0x172a <draw_character+0x3e>
    1772:	df 91       	pop	r29
    1774:	cf 91       	pop	r28
    1776:	1f 91       	pop	r17
    1778:	0f 91       	pop	r16
    177a:	ff 90       	pop	r15
    177c:	ef 90       	pop	r14
    177e:	df 90       	pop	r13
    1780:	cf 90       	pop	r12
    1782:	bf 90       	pop	r11
    1784:	af 90       	pop	r10
    1786:	9f 90       	pop	r9
    1788:	8f 90       	pop	r8
    178a:	08 95       	ret

0000178c <draw_string>:
    178c:	0f 93       	push	r16
    178e:	1f 93       	push	r17
    1790:	cf 93       	push	r28
    1792:	df 93       	push	r29
    1794:	ec 01       	movw	r28, r24
    1796:	16 2f       	mov	r17, r22
    1798:	04 2f       	mov	r16, r20
    179a:	05 c0       	rjmp	.+10     	; 0x17a6 <draw_string+0x1a>
    179c:	61 2f       	mov	r22, r17
    179e:	40 2f       	mov	r20, r16
    17a0:	a5 df       	rcall	.-182    	; 0x16ec <draw_character>
    17a2:	21 96       	adiw	r28, 0x01	; 1
    17a4:	1b 5f       	subi	r17, 0xFB	; 251
    17a6:	88 81       	ld	r24, Y
    17a8:	88 23       	and	r24, r24
    17aa:	c1 f7       	brne	.-16     	; 0x179c <draw_string+0x10>
    17ac:	df 91       	pop	r29
    17ae:	cf 91       	pop	r28
    17b0:	1f 91       	pop	r17
    17b2:	0f 91       	pop	r16
    17b4:	08 95       	ret

000017b6 <refresh>:
    17b6:	cf 93       	push	r28
    17b8:	df 93       	push	r29
    17ba:	80 e0       	ldi	r24, 0x00	; 0
    17bc:	60 e0       	ldi	r22, 0x00	; 0
    17be:	55 d0       	rcall	.+170    	; 0x186a <LCDPosition>
    17c0:	c0 e9       	ldi	r28, 0x90	; 144
    17c2:	d1 e0       	ldi	r29, 0x01	; 1
    17c4:	81 e0       	ldi	r24, 0x01	; 1
    17c6:	69 91       	ld	r22, Y+
    17c8:	07 d0       	rcall	.+14     	; 0x17d8 <LCDWrite>
    17ca:	83 e0       	ldi	r24, 0x03	; 3
    17cc:	c8 38       	cpi	r28, 0x88	; 136
    17ce:	d8 07       	cpc	r29, r24
    17d0:	c9 f7       	brne	.-14     	; 0x17c4 <refresh+0xe>
    17d2:	df 91       	pop	r29
    17d4:	cf 91       	pop	r28
    17d6:	08 95       	ret

000017d8 <LCDWrite>:
    17d8:	95 b1       	in	r25, 0x05	; 5
    17da:	82 95       	swap	r24
    17dc:	88 0f       	add	r24, r24
    17de:	80 7e       	andi	r24, 0xE0	; 224
    17e0:	9f 7d       	andi	r25, 0xDF	; 223
    17e2:	98 2b       	or	r25, r24
    17e4:	95 b9       	out	0x05, r25	; 5
    17e6:	5f 98       	cbi	0x0b, 7	; 11
    17e8:	27 e0       	ldi	r18, 0x07	; 7
    17ea:	30 e0       	ldi	r19, 0x00	; 0
    17ec:	70 e0       	ldi	r23, 0x00	; 0
    17ee:	8f 98       	cbi	0x11, 7	; 17
    17f0:	cb 01       	movw	r24, r22
    17f2:	02 2e       	mov	r0, r18
    17f4:	02 c0       	rjmp	.+4      	; 0x17fa <LCDWrite+0x22>
    17f6:	95 95       	asr	r25
    17f8:	87 95       	ror	r24
    17fa:	0a 94       	dec	r0
    17fc:	e2 f7       	brpl	.-8      	; 0x17f6 <LCDWrite+0x1e>
    17fe:	80 ff       	sbrs	r24, 0
    1800:	02 c0       	rjmp	.+4      	; 0x1806 <LCDWrite+0x2e>
    1802:	2e 9a       	sbi	0x05, 6	; 5
    1804:	01 c0       	rjmp	.+2      	; 0x1808 <LCDWrite+0x30>
    1806:	2e 98       	cbi	0x05, 6	; 5
    1808:	8f 9a       	sbi	0x11, 7	; 17
    180a:	21 50       	subi	r18, 0x01	; 1
    180c:	30 40       	sbci	r19, 0x00	; 0
    180e:	8f ef       	ldi	r24, 0xFF	; 255
    1810:	2f 3f       	cpi	r18, 0xFF	; 255
    1812:	38 07       	cpc	r19, r24
    1814:	61 f7       	brne	.-40     	; 0x17ee <LCDWrite+0x16>
    1816:	5f 9a       	sbi	0x0b, 7	; 11
    1818:	08 95       	ret

0000181a <LCDInitialise>:
    181a:	1f 93       	push	r17
    181c:	18 2f       	mov	r17, r24
    181e:	57 9a       	sbi	0x0a, 7	; 10
    1820:	24 9a       	sbi	0x04, 4	; 4
    1822:	25 9a       	sbi	0x04, 5	; 4
    1824:	26 9a       	sbi	0x04, 6	; 4
    1826:	87 9a       	sbi	0x10, 7	; 16
    1828:	2c 98       	cbi	0x05, 4	; 5
    182a:	5f 9a       	sbi	0x0b, 7	; 11
    182c:	2c 9a       	sbi	0x05, 4	; 5
    182e:	80 e0       	ldi	r24, 0x00	; 0
    1830:	61 e2       	ldi	r22, 0x21	; 33
    1832:	d2 df       	rcall	.-92     	; 0x17d8 <LCDWrite>
    1834:	10 68       	ori	r17, 0x80	; 128
    1836:	80 e0       	ldi	r24, 0x00	; 0
    1838:	61 2f       	mov	r22, r17
    183a:	ce df       	rcall	.-100    	; 0x17d8 <LCDWrite>
    183c:	80 e0       	ldi	r24, 0x00	; 0
    183e:	64 e0       	ldi	r22, 0x04	; 4
    1840:	cb df       	rcall	.-106    	; 0x17d8 <LCDWrite>
    1842:	80 e0       	ldi	r24, 0x00	; 0
    1844:	63 e1       	ldi	r22, 0x13	; 19
    1846:	c8 df       	rcall	.-112    	; 0x17d8 <LCDWrite>
    1848:	80 e0       	ldi	r24, 0x00	; 0
    184a:	6c e0       	ldi	r22, 0x0C	; 12
    184c:	c5 df       	rcall	.-118    	; 0x17d8 <LCDWrite>
    184e:	80 e0       	ldi	r24, 0x00	; 0
    1850:	60 e2       	ldi	r22, 0x20	; 32
    1852:	c2 df       	rcall	.-124    	; 0x17d8 <LCDWrite>
    1854:	80 e0       	ldi	r24, 0x00	; 0
    1856:	6c e0       	ldi	r22, 0x0C	; 12
    1858:	bf df       	rcall	.-130    	; 0x17d8 <LCDWrite>
    185a:	80 e0       	ldi	r24, 0x00	; 0
    185c:	60 e4       	ldi	r22, 0x40	; 64
    185e:	bc df       	rcall	.-136    	; 0x17d8 <LCDWrite>
    1860:	80 e0       	ldi	r24, 0x00	; 0
    1862:	60 e8       	ldi	r22, 0x80	; 128
    1864:	b9 df       	rcall	.-142    	; 0x17d8 <LCDWrite>
    1866:	1f 91       	pop	r17
    1868:	08 95       	ret

0000186a <LCDPosition>:
    186a:	1f 93       	push	r17
    186c:	18 2f       	mov	r17, r24
    186e:	60 64       	ori	r22, 0x40	; 64
    1870:	80 e0       	ldi	r24, 0x00	; 0
    1872:	b2 df       	rcall	.-156    	; 0x17d8 <LCDWrite>
    1874:	10 68       	ori	r17, 0x80	; 128
    1876:	80 e0       	ldi	r24, 0x00	; 0
    1878:	61 2f       	mov	r22, r17
    187a:	ae df       	rcall	.-164    	; 0x17d8 <LCDWrite>
    187c:	1f 91       	pop	r17
    187e:	08 95       	ret

00001880 <init_sprite>:
    1880:	8f 92       	push	r8
    1882:	9f 92       	push	r9
    1884:	af 92       	push	r10
    1886:	bf 92       	push	r11
    1888:	cf 92       	push	r12
    188a:	df 92       	push	r13
    188c:	ef 92       	push	r14
    188e:	ff 92       	push	r15
    1890:	0f 93       	push	r16
    1892:	1f 93       	push	r17
    1894:	4c 01       	movw	r8, r24
    1896:	a4 2e       	mov	r10, r20
    1898:	12 2f       	mov	r17, r18
    189a:	70 e0       	ldi	r23, 0x00	; 0
    189c:	80 e0       	ldi	r24, 0x00	; 0
    189e:	90 e0       	ldi	r25, 0x00	; 0
    18a0:	4e dc       	rcall	.-1892   	; 0x113e <__floatunsisf>
    18a2:	f4 01       	movw	r30, r8
    18a4:	60 83       	st	Z, r22
    18a6:	71 83       	std	Z+1, r23	; 0x01
    18a8:	82 83       	std	Z+2, r24	; 0x02
    18aa:	93 83       	std	Z+3, r25	; 0x03
    18ac:	bb 24       	eor	r11, r11
    18ae:	cc 24       	eor	r12, r12
    18b0:	dd 24       	eor	r13, r13
    18b2:	c6 01       	movw	r24, r12
    18b4:	b5 01       	movw	r22, r10
    18b6:	43 dc       	rcall	.-1914   	; 0x113e <__floatunsisf>
    18b8:	f4 01       	movw	r30, r8
    18ba:	64 83       	std	Z+4, r22	; 0x04
    18bc:	75 83       	std	Z+5, r23	; 0x05
    18be:	86 83       	std	Z+6, r24	; 0x06
    18c0:	97 83       	std	Z+7, r25	; 0x07
    18c2:	10 87       	std	Z+8, r17	; 0x08
    18c4:	01 87       	std	Z+9, r16	; 0x09
    18c6:	f4 86       	std	Z+12, r15	; 0x0c
    18c8:	e3 86       	std	Z+11, r14	; 0x0b
    18ca:	1f 91       	pop	r17
    18cc:	0f 91       	pop	r16
    18ce:	ff 90       	pop	r15
    18d0:	ef 90       	pop	r14
    18d2:	df 90       	pop	r13
    18d4:	cf 90       	pop	r12
    18d6:	bf 90       	pop	r11
    18d8:	af 90       	pop	r10
    18da:	9f 90       	pop	r9
    18dc:	8f 90       	pop	r8
    18de:	08 95       	ret

000018e0 <draw_sprite>:
    18e0:	2f 92       	push	r2
    18e2:	3f 92       	push	r3
    18e4:	4f 92       	push	r4
    18e6:	5f 92       	push	r5
    18e8:	7f 92       	push	r7
    18ea:	8f 92       	push	r8
    18ec:	9f 92       	push	r9
    18ee:	af 92       	push	r10
    18f0:	bf 92       	push	r11
    18f2:	cf 92       	push	r12
    18f4:	df 92       	push	r13
    18f6:	ef 92       	push	r14
    18f8:	ff 92       	push	r15
    18fa:	0f 93       	push	r16
    18fc:	1f 93       	push	r17
    18fe:	df 93       	push	r29
    1900:	cf 93       	push	r28
    1902:	00 d0       	rcall	.+0      	; 0x1904 <draw_sprite+0x24>
    1904:	00 d0       	rcall	.+0      	; 0x1906 <draw_sprite+0x26>
    1906:	cd b7       	in	r28, 0x3d	; 61
    1908:	de b7       	in	r29, 0x3e	; 62
    190a:	2c 01       	movw	r4, r24
    190c:	dc 01       	movw	r26, r24
    190e:	1a 96       	adiw	r26, 0x0a	; 10
    1910:	8c 91       	ld	r24, X
    1912:	88 23       	and	r24, r24
    1914:	09 f4       	brne	.+2      	; 0x1918 <draw_sprite+0x38>
    1916:	98 c0       	rjmp	.+304    	; 0x1a48 <draw_sprite+0x168>
    1918:	22 24       	eor	r2, r2
    191a:	33 24       	eor	r3, r3
    191c:	1a 82       	std	Y+2, r1	; 0x02
    191e:	19 82       	std	Y+1, r1	; 0x01
    1920:	89 c0       	rjmp	.+274    	; 0x1a34 <draw_sprite+0x154>
    1922:	e9 81       	ldd	r30, Y+1	; 0x01
    1924:	fa 81       	ldd	r31, Y+2	; 0x02
    1926:	bf 01       	movw	r22, r30
    1928:	88 27       	eor	r24, r24
    192a:	77 fd       	sbrc	r23, 7
    192c:	80 95       	com	r24
    192e:	98 2f       	mov	r25, r24
    1930:	08 dc       	rcall	.-2032   	; 0x1142 <__floatsisf>
    1932:	d2 01       	movw	r26, r4
    1934:	14 96       	adiw	r26, 0x04	; 4
    1936:	2d 91       	ld	r18, X+
    1938:	3d 91       	ld	r19, X+
    193a:	4d 91       	ld	r20, X+
    193c:	5c 91       	ld	r21, X
    193e:	17 97       	sbiw	r26, 0x07	; 7
    1940:	96 db       	rcall	.-2260   	; 0x106e <__addsf3>
    1942:	5b 01       	movw	r10, r22
    1944:	6c 01       	movw	r12, r24
    1946:	20 e0       	ldi	r18, 0x00	; 0
    1948:	30 e0       	ldi	r19, 0x00	; 0
    194a:	40 e0       	ldi	r20, 0x00	; 0
    194c:	50 e0       	ldi	r21, 0x00	; 0
    194e:	f3 db       	rcall	.-2074   	; 0x1136 <__cmpsf2>
    1950:	87 fd       	sbrc	r24, 7
    1952:	6a c0       	rjmp	.+212    	; 0x1a28 <draw_sprite+0x148>
    1954:	c6 01       	movw	r24, r12
    1956:	b5 01       	movw	r22, r10
    1958:	20 e0       	ldi	r18, 0x00	; 0
    195a:	30 e0       	ldi	r19, 0x00	; 0
    195c:	40 e4       	ldi	r20, 0x40	; 64
    195e:	52 e4       	ldi	r21, 0x42	; 66
    1960:	a0 dc       	rcall	.-1728   	; 0x12a2 <__gesf2>
    1962:	87 ff       	sbrs	r24, 7
    1964:	71 c0       	rjmp	.+226    	; 0x1a48 <draw_sprite+0x168>
    1966:	1c 82       	std	Y+4, r1	; 0x04
    1968:	1b 82       	std	Y+3, r1	; 0x03
    196a:	47 c0       	rjmp	.+142    	; 0x19fa <draw_sprite+0x11a>
    196c:	d2 01       	movw	r26, r4
    196e:	1b 96       	adiw	r26, 0x0b	; 11
    1970:	ed 91       	ld	r30, X+
    1972:	fc 91       	ld	r31, X
    1974:	1c 97       	sbiw	r26, 0x0c	; 12
    1976:	e2 0d       	add	r30, r2
    1978:	f3 1d       	adc	r31, r3
    197a:	70 80       	ld	r7, Z
    197c:	eb 81       	ldd	r30, Y+3	; 0x03
    197e:	fc 81       	ldd	r31, Y+4	; 0x04
    1980:	bf 01       	movw	r22, r30
    1982:	88 27       	eor	r24, r24
    1984:	77 fd       	sbrc	r23, 7
    1986:	80 95       	com	r24
    1988:	98 2f       	mov	r25, r24
    198a:	db db       	rcall	.-2122   	; 0x1142 <__floatsisf>
    198c:	d2 01       	movw	r26, r4
    198e:	2d 91       	ld	r18, X+
    1990:	3d 91       	ld	r19, X+
    1992:	4d 91       	ld	r20, X+
    1994:	5c 91       	ld	r21, X
    1996:	6b db       	rcall	.-2346   	; 0x106e <__addsf3>
    1998:	7b 01       	movw	r14, r22
    199a:	8c 01       	movw	r16, r24
    199c:	20 e0       	ldi	r18, 0x00	; 0
    199e:	30 e0       	ldi	r19, 0x00	; 0
    19a0:	40 e0       	ldi	r20, 0x00	; 0
    19a2:	50 e0       	ldi	r21, 0x00	; 0
    19a4:	7e dc       	rcall	.-1796   	; 0x12a2 <__gesf2>
    19a6:	88 23       	and	r24, r24
    19a8:	dc f0       	brlt	.+54     	; 0x19e0 <draw_sprite+0x100>
    19aa:	c8 01       	movw	r24, r16
    19ac:	b7 01       	movw	r22, r14
    19ae:	20 e0       	ldi	r18, 0x00	; 0
    19b0:	30 e0       	ldi	r19, 0x00	; 0
    19b2:	48 ea       	ldi	r20, 0xA8	; 168
    19b4:	52 e4       	ldi	r21, 0x42	; 66
    19b6:	bf db       	rcall	.-2178   	; 0x1136 <__cmpsf2>
    19b8:	88 23       	and	r24, r24
    19ba:	94 f4       	brge	.+36     	; 0x19e0 <draw_sprite+0x100>
    19bc:	78 20       	and	r7, r8
    19be:	81 f0       	breq	.+32     	; 0x19e0 <draw_sprite+0x100>
    19c0:	c8 01       	movw	r24, r16
    19c2:	b7 01       	movw	r22, r14
    19c4:	0e 94 63 01 	call	0x2c6	; 0x2c6 <__fixunssfsi>
    19c8:	7b 01       	movw	r14, r22
    19ca:	8c 01       	movw	r16, r24
    19cc:	c6 01       	movw	r24, r12
    19ce:	b5 01       	movw	r22, r10
    19d0:	0e 94 63 01 	call	0x2c6	; 0x2c6 <__fixunssfsi>
    19d4:	9b 01       	movw	r18, r22
    19d6:	ac 01       	movw	r20, r24
    19d8:	8e 2d       	mov	r24, r14
    19da:	62 2f       	mov	r22, r18
    19dc:	41 e0       	ldi	r20, 0x01	; 1
    19de:	6d dc       	rcall	.-1830   	; 0x12ba <set_pixel>
    19e0:	eb 81       	ldd	r30, Y+3	; 0x03
    19e2:	fc 81       	ldd	r31, Y+4	; 0x04
    19e4:	31 96       	adiw	r30, 0x01	; 1
    19e6:	fc 83       	std	Y+4, r31	; 0x04
    19e8:	eb 83       	std	Y+3, r30	; 0x03
    19ea:	cf 01       	movw	r24, r30
    19ec:	87 70       	andi	r24, 0x07	; 7
    19ee:	90 70       	andi	r25, 0x00	; 0
    19f0:	89 2b       	or	r24, r25
    19f2:	39 f4       	brne	.+14     	; 0x1a02 <draw_sprite+0x122>
    19f4:	08 94       	sec
    19f6:	21 1c       	adc	r2, r1
    19f8:	31 1c       	adc	r3, r1
    19fa:	90 e8       	ldi	r25, 0x80	; 128
    19fc:	89 2e       	mov	r8, r25
    19fe:	91 2c       	mov	r9, r1
    1a00:	02 c0       	rjmp	.+4      	; 0x1a06 <draw_sprite+0x126>
    1a02:	95 94       	asr	r9
    1a04:	87 94       	ror	r8
    1a06:	d2 01       	movw	r26, r4
    1a08:	18 96       	adiw	r26, 0x08	; 8
    1a0a:	8c 91       	ld	r24, X
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	eb 81       	ldd	r30, Y+3	; 0x03
    1a10:	fc 81       	ldd	r31, Y+4	; 0x04
    1a12:	e8 17       	cp	r30, r24
    1a14:	f9 07       	cpc	r31, r25
    1a16:	0c f4       	brge	.+2      	; 0x1a1a <draw_sprite+0x13a>
    1a18:	a9 cf       	rjmp	.-174    	; 0x196c <draw_sprite+0x8c>
    1a1a:	87 70       	andi	r24, 0x07	; 7
    1a1c:	90 70       	andi	r25, 0x00	; 0
    1a1e:	89 2b       	or	r24, r25
    1a20:	19 f0       	breq	.+6      	; 0x1a28 <draw_sprite+0x148>
    1a22:	08 94       	sec
    1a24:	21 1c       	adc	r2, r1
    1a26:	31 1c       	adc	r3, r1
    1a28:	29 81       	ldd	r18, Y+1	; 0x01
    1a2a:	3a 81       	ldd	r19, Y+2	; 0x02
    1a2c:	2f 5f       	subi	r18, 0xFF	; 255
    1a2e:	3f 4f       	sbci	r19, 0xFF	; 255
    1a30:	3a 83       	std	Y+2, r19	; 0x02
    1a32:	29 83       	std	Y+1, r18	; 0x01
    1a34:	d2 01       	movw	r26, r4
    1a36:	19 96       	adiw	r26, 0x09	; 9
    1a38:	8c 91       	ld	r24, X
    1a3a:	90 e0       	ldi	r25, 0x00	; 0
    1a3c:	e9 81       	ldd	r30, Y+1	; 0x01
    1a3e:	fa 81       	ldd	r31, Y+2	; 0x02
    1a40:	e8 17       	cp	r30, r24
    1a42:	f9 07       	cpc	r31, r25
    1a44:	0c f4       	brge	.+2      	; 0x1a48 <draw_sprite+0x168>
    1a46:	6d cf       	rjmp	.-294    	; 0x1922 <draw_sprite+0x42>
    1a48:	0f 90       	pop	r0
    1a4a:	0f 90       	pop	r0
    1a4c:	0f 90       	pop	r0
    1a4e:	0f 90       	pop	r0
    1a50:	cf 91       	pop	r28
    1a52:	df 91       	pop	r29
    1a54:	1f 91       	pop	r17
    1a56:	0f 91       	pop	r16
    1a58:	ff 90       	pop	r15
    1a5a:	ef 90       	pop	r14
    1a5c:	df 90       	pop	r13
    1a5e:	cf 90       	pop	r12
    1a60:	bf 90       	pop	r11
    1a62:	af 90       	pop	r10
    1a64:	9f 90       	pop	r9
    1a66:	8f 90       	pop	r8
    1a68:	7f 90       	pop	r7
    1a6a:	5f 90       	pop	r5
    1a6c:	4f 90       	pop	r4
    1a6e:	3f 90       	pop	r3
    1a70:	2f 90       	pop	r2
    1a72:	08 95       	ret

00001a74 <__divmodhi4>:
    1a74:	97 fb       	bst	r25, 7
    1a76:	09 2e       	mov	r0, r25
    1a78:	07 26       	eor	r0, r23
    1a7a:	0a d0       	rcall	.+20     	; 0x1a90 <__divmodhi4_neg1>
    1a7c:	77 fd       	sbrc	r23, 7
    1a7e:	04 d0       	rcall	.+8      	; 0x1a88 <__divmodhi4_neg2>
    1a80:	0c d0       	rcall	.+24     	; 0x1a9a <__udivmodhi4>
    1a82:	06 d0       	rcall	.+12     	; 0x1a90 <__divmodhi4_neg1>
    1a84:	00 20       	and	r0, r0
    1a86:	1a f4       	brpl	.+6      	; 0x1a8e <__divmodhi4_exit>

00001a88 <__divmodhi4_neg2>:
    1a88:	70 95       	com	r23
    1a8a:	61 95       	neg	r22
    1a8c:	7f 4f       	sbci	r23, 0xFF	; 255

00001a8e <__divmodhi4_exit>:
    1a8e:	08 95       	ret

00001a90 <__divmodhi4_neg1>:
    1a90:	f6 f7       	brtc	.-4      	; 0x1a8e <__divmodhi4_exit>
    1a92:	90 95       	com	r25
    1a94:	81 95       	neg	r24
    1a96:	9f 4f       	sbci	r25, 0xFF	; 255
    1a98:	08 95       	ret

00001a9a <__udivmodhi4>:
    1a9a:	aa 1b       	sub	r26, r26
    1a9c:	bb 1b       	sub	r27, r27
    1a9e:	51 e1       	ldi	r21, 0x11	; 17
    1aa0:	07 c0       	rjmp	.+14     	; 0x1ab0 <__udivmodhi4_ep>

00001aa2 <__udivmodhi4_loop>:
    1aa2:	aa 1f       	adc	r26, r26
    1aa4:	bb 1f       	adc	r27, r27
    1aa6:	a6 17       	cp	r26, r22
    1aa8:	b7 07       	cpc	r27, r23
    1aaa:	10 f0       	brcs	.+4      	; 0x1ab0 <__udivmodhi4_ep>
    1aac:	a6 1b       	sub	r26, r22
    1aae:	b7 0b       	sbc	r27, r23

00001ab0 <__udivmodhi4_ep>:
    1ab0:	88 1f       	adc	r24, r24
    1ab2:	99 1f       	adc	r25, r25
    1ab4:	5a 95       	dec	r21
    1ab6:	a9 f7       	brne	.-22     	; 0x1aa2 <__udivmodhi4_loop>
    1ab8:	80 95       	com	r24
    1aba:	90 95       	com	r25
    1abc:	bc 01       	movw	r22, r24
    1abe:	cd 01       	movw	r24, r26
    1ac0:	08 95       	ret

00001ac2 <__prologue_saves__>:
    1ac2:	2f 92       	push	r2
    1ac4:	3f 92       	push	r3
    1ac6:	4f 92       	push	r4
    1ac8:	5f 92       	push	r5
    1aca:	6f 92       	push	r6
    1acc:	7f 92       	push	r7
    1ace:	8f 92       	push	r8
    1ad0:	9f 92       	push	r9
    1ad2:	af 92       	push	r10
    1ad4:	bf 92       	push	r11
    1ad6:	cf 92       	push	r12
    1ad8:	df 92       	push	r13
    1ada:	ef 92       	push	r14
    1adc:	ff 92       	push	r15
    1ade:	0f 93       	push	r16
    1ae0:	1f 93       	push	r17
    1ae2:	cf 93       	push	r28
    1ae4:	df 93       	push	r29
    1ae6:	cd b7       	in	r28, 0x3d	; 61
    1ae8:	de b7       	in	r29, 0x3e	; 62
    1aea:	ca 1b       	sub	r28, r26
    1aec:	db 0b       	sbc	r29, r27
    1aee:	0f b6       	in	r0, 0x3f	; 63
    1af0:	f8 94       	cli
    1af2:	de bf       	out	0x3e, r29	; 62
    1af4:	0f be       	out	0x3f, r0	; 63
    1af6:	cd bf       	out	0x3d, r28	; 61
    1af8:	09 94       	ijmp

00001afa <__epilogue_restores__>:
    1afa:	2a 88       	ldd	r2, Y+18	; 0x12
    1afc:	39 88       	ldd	r3, Y+17	; 0x11
    1afe:	48 88       	ldd	r4, Y+16	; 0x10
    1b00:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b02:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b04:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b06:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b08:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b0a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b0c:	b9 84       	ldd	r11, Y+9	; 0x09
    1b0e:	c8 84       	ldd	r12, Y+8	; 0x08
    1b10:	df 80       	ldd	r13, Y+7	; 0x07
    1b12:	ee 80       	ldd	r14, Y+6	; 0x06
    1b14:	fd 80       	ldd	r15, Y+5	; 0x05
    1b16:	0c 81       	ldd	r16, Y+4	; 0x04
    1b18:	1b 81       	ldd	r17, Y+3	; 0x03
    1b1a:	aa 81       	ldd	r26, Y+2	; 0x02
    1b1c:	b9 81       	ldd	r27, Y+1	; 0x01
    1b1e:	ce 0f       	add	r28, r30
    1b20:	d1 1d       	adc	r29, r1
    1b22:	0f b6       	in	r0, 0x3f	; 63
    1b24:	f8 94       	cli
    1b26:	de bf       	out	0x3e, r29	; 62
    1b28:	0f be       	out	0x3f, r0	; 63
    1b2a:	cd bf       	out	0x3d, r28	; 61
    1b2c:	ed 01       	movw	r28, r26
    1b2e:	08 95       	ret

00001b30 <do_rand>:
    1b30:	a0 e0       	ldi	r26, 0x00	; 0
    1b32:	b0 e0       	ldi	r27, 0x00	; 0
    1b34:	ed e9       	ldi	r30, 0x9D	; 157
    1b36:	fd e0       	ldi	r31, 0x0D	; 13
    1b38:	cc cf       	rjmp	.-104    	; 0x1ad2 <__prologue_saves__+0x10>
    1b3a:	ec 01       	movw	r28, r24
    1b3c:	a8 80       	ld	r10, Y
    1b3e:	b9 80       	ldd	r11, Y+1	; 0x01
    1b40:	ca 80       	ldd	r12, Y+2	; 0x02
    1b42:	db 80       	ldd	r13, Y+3	; 0x03
    1b44:	a1 14       	cp	r10, r1
    1b46:	b1 04       	cpc	r11, r1
    1b48:	c1 04       	cpc	r12, r1
    1b4a:	d1 04       	cpc	r13, r1
    1b4c:	41 f4       	brne	.+16     	; 0x1b5e <do_rand+0x2e>
    1b4e:	84 e2       	ldi	r24, 0x24	; 36
    1b50:	a8 2e       	mov	r10, r24
    1b52:	89 ed       	ldi	r24, 0xD9	; 217
    1b54:	b8 2e       	mov	r11, r24
    1b56:	8b e5       	ldi	r24, 0x5B	; 91
    1b58:	c8 2e       	mov	r12, r24
    1b5a:	87 e0       	ldi	r24, 0x07	; 7
    1b5c:	d8 2e       	mov	r13, r24
    1b5e:	c6 01       	movw	r24, r12
    1b60:	b5 01       	movw	r22, r10
    1b62:	2d e1       	ldi	r18, 0x1D	; 29
    1b64:	33 ef       	ldi	r19, 0xF3	; 243
    1b66:	41 e0       	ldi	r20, 0x01	; 1
    1b68:	50 e0       	ldi	r21, 0x00	; 0
    1b6a:	58 d0       	rcall	.+176    	; 0x1c1c <__divmodsi4>
    1b6c:	27 ea       	ldi	r18, 0xA7	; 167
    1b6e:	31 e4       	ldi	r19, 0x41	; 65
    1b70:	40 e0       	ldi	r20, 0x00	; 0
    1b72:	50 e0       	ldi	r21, 0x00	; 0
    1b74:	34 d0       	rcall	.+104    	; 0x1bde <__mulsi3>
    1b76:	7b 01       	movw	r14, r22
    1b78:	8c 01       	movw	r16, r24
    1b7a:	c6 01       	movw	r24, r12
    1b7c:	b5 01       	movw	r22, r10
    1b7e:	2d e1       	ldi	r18, 0x1D	; 29
    1b80:	33 ef       	ldi	r19, 0xF3	; 243
    1b82:	41 e0       	ldi	r20, 0x01	; 1
    1b84:	50 e0       	ldi	r21, 0x00	; 0
    1b86:	4a d0       	rcall	.+148    	; 0x1c1c <__divmodsi4>
    1b88:	ca 01       	movw	r24, r20
    1b8a:	b9 01       	movw	r22, r18
    1b8c:	2c ee       	ldi	r18, 0xEC	; 236
    1b8e:	34 ef       	ldi	r19, 0xF4	; 244
    1b90:	4f ef       	ldi	r20, 0xFF	; 255
    1b92:	5f ef       	ldi	r21, 0xFF	; 255
    1b94:	24 d0       	rcall	.+72     	; 0x1bde <__mulsi3>
    1b96:	6e 0d       	add	r22, r14
    1b98:	7f 1d       	adc	r23, r15
    1b9a:	80 1f       	adc	r24, r16
    1b9c:	91 1f       	adc	r25, r17
    1b9e:	97 ff       	sbrs	r25, 7
    1ba0:	04 c0       	rjmp	.+8      	; 0x1baa <do_rand+0x7a>
    1ba2:	61 50       	subi	r22, 0x01	; 1
    1ba4:	70 40       	sbci	r23, 0x00	; 0
    1ba6:	80 40       	sbci	r24, 0x00	; 0
    1ba8:	90 48       	sbci	r25, 0x80	; 128
    1baa:	68 83       	st	Y, r22
    1bac:	79 83       	std	Y+1, r23	; 0x01
    1bae:	8a 83       	std	Y+2, r24	; 0x02
    1bb0:	9b 83       	std	Y+3, r25	; 0x03
    1bb2:	9b 01       	movw	r18, r22
    1bb4:	3f 77       	andi	r19, 0x7F	; 127
    1bb6:	c9 01       	movw	r24, r18
    1bb8:	cd b7       	in	r28, 0x3d	; 61
    1bba:	de b7       	in	r29, 0x3e	; 62
    1bbc:	ea e0       	ldi	r30, 0x0A	; 10
    1bbe:	a5 cf       	rjmp	.-182    	; 0x1b0a <__epilogue_restores__+0x10>

00001bc0 <rand_r>:
    1bc0:	b7 cf       	rjmp	.-146    	; 0x1b30 <do_rand>

00001bc2 <rand>:
    1bc2:	84 e6       	ldi	r24, 0x64	; 100
    1bc4:	91 e0       	ldi	r25, 0x01	; 1
    1bc6:	b4 cf       	rjmp	.-152    	; 0x1b30 <do_rand>

00001bc8 <srand>:
    1bc8:	a0 e0       	ldi	r26, 0x00	; 0
    1bca:	b0 e0       	ldi	r27, 0x00	; 0
    1bcc:	80 93 64 01 	sts	0x0164, r24
    1bd0:	90 93 65 01 	sts	0x0165, r25
    1bd4:	a0 93 66 01 	sts	0x0166, r26
    1bd8:	b0 93 67 01 	sts	0x0167, r27
    1bdc:	08 95       	ret

00001bde <__mulsi3>:
    1bde:	62 9f       	mul	r22, r18
    1be0:	d0 01       	movw	r26, r0
    1be2:	73 9f       	mul	r23, r19
    1be4:	f0 01       	movw	r30, r0
    1be6:	82 9f       	mul	r24, r18
    1be8:	e0 0d       	add	r30, r0
    1bea:	f1 1d       	adc	r31, r1
    1bec:	64 9f       	mul	r22, r20
    1bee:	e0 0d       	add	r30, r0
    1bf0:	f1 1d       	adc	r31, r1
    1bf2:	92 9f       	mul	r25, r18
    1bf4:	f0 0d       	add	r31, r0
    1bf6:	83 9f       	mul	r24, r19
    1bf8:	f0 0d       	add	r31, r0
    1bfa:	74 9f       	mul	r23, r20
    1bfc:	f0 0d       	add	r31, r0
    1bfe:	65 9f       	mul	r22, r21
    1c00:	f0 0d       	add	r31, r0
    1c02:	99 27       	eor	r25, r25
    1c04:	72 9f       	mul	r23, r18
    1c06:	b0 0d       	add	r27, r0
    1c08:	e1 1d       	adc	r30, r1
    1c0a:	f9 1f       	adc	r31, r25
    1c0c:	63 9f       	mul	r22, r19
    1c0e:	b0 0d       	add	r27, r0
    1c10:	e1 1d       	adc	r30, r1
    1c12:	f9 1f       	adc	r31, r25
    1c14:	bd 01       	movw	r22, r26
    1c16:	cf 01       	movw	r24, r30
    1c18:	11 24       	eor	r1, r1
    1c1a:	08 95       	ret

00001c1c <__divmodsi4>:
    1c1c:	97 fb       	bst	r25, 7
    1c1e:	09 2e       	mov	r0, r25
    1c20:	05 26       	eor	r0, r21
    1c22:	0e d0       	rcall	.+28     	; 0x1c40 <__divmodsi4_neg1>
    1c24:	57 fd       	sbrc	r21, 7
    1c26:	04 d0       	rcall	.+8      	; 0x1c30 <__divmodsi4_neg2>
    1c28:	14 d0       	rcall	.+40     	; 0x1c52 <__udivmodsi4>
    1c2a:	0a d0       	rcall	.+20     	; 0x1c40 <__divmodsi4_neg1>
    1c2c:	00 1c       	adc	r0, r0
    1c2e:	38 f4       	brcc	.+14     	; 0x1c3e <__divmodsi4_exit>

00001c30 <__divmodsi4_neg2>:
    1c30:	50 95       	com	r21
    1c32:	40 95       	com	r20
    1c34:	30 95       	com	r19
    1c36:	21 95       	neg	r18
    1c38:	3f 4f       	sbci	r19, 0xFF	; 255
    1c3a:	4f 4f       	sbci	r20, 0xFF	; 255
    1c3c:	5f 4f       	sbci	r21, 0xFF	; 255

00001c3e <__divmodsi4_exit>:
    1c3e:	08 95       	ret

00001c40 <__divmodsi4_neg1>:
    1c40:	f6 f7       	brtc	.-4      	; 0x1c3e <__divmodsi4_exit>
    1c42:	90 95       	com	r25
    1c44:	80 95       	com	r24
    1c46:	70 95       	com	r23
    1c48:	61 95       	neg	r22
    1c4a:	7f 4f       	sbci	r23, 0xFF	; 255
    1c4c:	8f 4f       	sbci	r24, 0xFF	; 255
    1c4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c50:	08 95       	ret

00001c52 <__udivmodsi4>:
    1c52:	a1 e2       	ldi	r26, 0x21	; 33
    1c54:	1a 2e       	mov	r1, r26
    1c56:	aa 1b       	sub	r26, r26
    1c58:	bb 1b       	sub	r27, r27
    1c5a:	fd 01       	movw	r30, r26
    1c5c:	0d c0       	rjmp	.+26     	; 0x1c78 <__udivmodsi4_ep>

00001c5e <__udivmodsi4_loop>:
    1c5e:	aa 1f       	adc	r26, r26
    1c60:	bb 1f       	adc	r27, r27
    1c62:	ee 1f       	adc	r30, r30
    1c64:	ff 1f       	adc	r31, r31
    1c66:	a2 17       	cp	r26, r18
    1c68:	b3 07       	cpc	r27, r19
    1c6a:	e4 07       	cpc	r30, r20
    1c6c:	f5 07       	cpc	r31, r21
    1c6e:	20 f0       	brcs	.+8      	; 0x1c78 <__udivmodsi4_ep>
    1c70:	a2 1b       	sub	r26, r18
    1c72:	b3 0b       	sbc	r27, r19
    1c74:	e4 0b       	sbc	r30, r20
    1c76:	f5 0b       	sbc	r31, r21

00001c78 <__udivmodsi4_ep>:
    1c78:	66 1f       	adc	r22, r22
    1c7a:	77 1f       	adc	r23, r23
    1c7c:	88 1f       	adc	r24, r24
    1c7e:	99 1f       	adc	r25, r25
    1c80:	1a 94       	dec	r1
    1c82:	69 f7       	brne	.-38     	; 0x1c5e <__udivmodsi4_loop>
    1c84:	60 95       	com	r22
    1c86:	70 95       	com	r23
    1c88:	80 95       	com	r24
    1c8a:	90 95       	com	r25
    1c8c:	9b 01       	movw	r18, r22
    1c8e:	ac 01       	movw	r20, r24
    1c90:	bd 01       	movw	r22, r26
    1c92:	cf 01       	movw	r24, r30
    1c94:	08 95       	ret

00001c96 <_exit>:
    1c96:	f8 94       	cli

00001c98 <__stop_program>:
    1c98:	ff cf       	rjmp	.-2      	; 0x1c98 <__stop_program>
