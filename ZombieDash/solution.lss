
solution.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000086  00800100  00001078  0000110c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001078  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000204  00800186  00800186  00001192  2**0
                  ALLOC
  3 .debug_aranges 000001e8  00000000  00000000  00001192  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000347  00000000  00000000  0000137a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001fdd  00000000  00000000  000016c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ee8  00000000  00000000  0000369e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001578  00000000  00000000  00004586  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000290  00000000  00000000  00005b00  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005e0  00000000  00000000  00005d90  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001052  00000000  00000000  00006370  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001d0  00000000  00000000  000073c2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	refresh();
	*/
}

void TimerInit(void)
{
       0:	45 c1       	rjmp	.+650    	; 0x28c <__ctors_end>
       2:	00 00       	nop
       4:	5e c1       	rjmp	.+700    	; 0x2c2 <__bad_interrupt>
       6:	00 00       	nop
       8:	5c c1       	rjmp	.+696    	; 0x2c2 <__bad_interrupt>
       a:	00 00       	nop
       c:	5a c1       	rjmp	.+692    	; 0x2c2 <__bad_interrupt>
       e:	00 00       	nop
      10:	58 c1       	rjmp	.+688    	; 0x2c2 <__bad_interrupt>
      12:	00 00       	nop
      14:	56 c1       	rjmp	.+684    	; 0x2c2 <__bad_interrupt>
      16:	00 00       	nop
      18:	54 c1       	rjmp	.+680    	; 0x2c2 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	52 c1       	rjmp	.+676    	; 0x2c2 <__bad_interrupt>
      1e:	00 00       	nop
      20:	50 c1       	rjmp	.+672    	; 0x2c2 <__bad_interrupt>
      22:	00 00       	nop
      24:	83 c2       	rjmp	.+1286   	; 0x52c <__vector_9>
      26:	00 00       	nop
      28:	4c c1       	rjmp	.+664    	; 0x2c2 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4a c1       	rjmp	.+660    	; 0x2c2 <__bad_interrupt>
      2e:	00 00       	nop
      30:	48 c1       	rjmp	.+656    	; 0x2c2 <__bad_interrupt>
      32:	00 00       	nop
      34:	46 c1       	rjmp	.+652    	; 0x2c2 <__bad_interrupt>
      36:	00 00       	nop
      38:	44 c1       	rjmp	.+648    	; 0x2c2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	42 c1       	rjmp	.+644    	; 0x2c2 <__bad_interrupt>
      3e:	00 00       	nop
      40:	40 c1       	rjmp	.+640    	; 0x2c2 <__bad_interrupt>
      42:	00 00       	nop
      44:	3e c1       	rjmp	.+636    	; 0x2c2 <__bad_interrupt>
      46:	00 00       	nop
      48:	3c c1       	rjmp	.+632    	; 0x2c2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3a c1       	rjmp	.+628    	; 0x2c2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	38 c1       	rjmp	.+624    	; 0x2c2 <__bad_interrupt>
      52:	00 00       	nop
      54:	36 c1       	rjmp	.+620    	; 0x2c2 <__bad_interrupt>
      56:	00 00       	nop
      58:	34 c1       	rjmp	.+616    	; 0x2c2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	8d c2       	rjmp	.+1306   	; 0x578 <__vector_23>
      5e:	00 00       	nop
      60:	30 c1       	rjmp	.+608    	; 0x2c2 <__bad_interrupt>
      62:	00 00       	nop
      64:	2e c1       	rjmp	.+604    	; 0x2c2 <__bad_interrupt>
      66:	00 00       	nop
      68:	2c c1       	rjmp	.+600    	; 0x2c2 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2a c1       	rjmp	.+596    	; 0x2c2 <__bad_interrupt>
      6e:	00 00       	nop
      70:	28 c1       	rjmp	.+592    	; 0x2c2 <__bad_interrupt>
      72:	00 00       	nop
      74:	26 c1       	rjmp	.+588    	; 0x2c2 <__bad_interrupt>
      76:	00 00       	nop
      78:	24 c1       	rjmp	.+584    	; 0x2c2 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	22 c1       	rjmp	.+580    	; 0x2c2 <__bad_interrupt>
      7e:	00 00       	nop
      80:	20 c1       	rjmp	.+576    	; 0x2c2 <__bad_interrupt>
      82:	00 00       	nop
      84:	1e c1       	rjmp	.+572    	; 0x2c2 <__bad_interrupt>
      86:	00 00       	nop
      88:	1c c1       	rjmp	.+568    	; 0x2c2 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	1a c1       	rjmp	.+564    	; 0x2c2 <__bad_interrupt>
      8e:	00 00       	nop
      90:	18 c1       	rjmp	.+560    	; 0x2c2 <__bad_interrupt>
      92:	00 00       	nop
      94:	16 c1       	rjmp	.+556    	; 0x2c2 <__bad_interrupt>
      96:	00 00       	nop
      98:	14 c1       	rjmp	.+552    	; 0x2c2 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	12 c1       	rjmp	.+548    	; 0x2c2 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	10 c1       	rjmp	.+544    	; 0x2c2 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	0e c1       	rjmp	.+540    	; 0x2c2 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0c c1       	rjmp	.+536    	; 0x2c2 <__bad_interrupt>
      aa:	00 00       	nop

000000ac <ASCII>:
      ac:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      bc:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      cc:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      dc:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      ec:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      fc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     10c:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     11c:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     12c:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     13c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     14c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     15c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     16c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     17c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     18c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     19c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     1ac:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1bc:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1cc:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1dc:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1ec:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1fc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     20c:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     21c:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     22c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     23c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     24c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     25c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     26c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     27c:	00 00 41 36 08 00 10 08 08 10 08 78 46 41 46 78     ..A6.......xFAFx

0000028c <__ctors_end>:
     28c:	11 24       	eor	r1, r1
     28e:	1f be       	out	0x3f, r1	; 63
     290:	cf ef       	ldi	r28, 0xFF	; 255
     292:	da e0       	ldi	r29, 0x0A	; 10
     294:	de bf       	out	0x3e, r29	; 62
     296:	cd bf       	out	0x3d, r28	; 61

00000298 <__do_copy_data>:
     298:	11 e0       	ldi	r17, 0x01	; 1
     29a:	a0 e0       	ldi	r26, 0x00	; 0
     29c:	b1 e0       	ldi	r27, 0x01	; 1
     29e:	e8 e7       	ldi	r30, 0x78	; 120
     2a0:	f0 e1       	ldi	r31, 0x10	; 16
     2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <.do_copy_data_start>

000002a4 <.do_copy_data_loop>:
     2a4:	05 90       	lpm	r0, Z+
     2a6:	0d 92       	st	X+, r0

000002a8 <.do_copy_data_start>:
     2a8:	a6 38       	cpi	r26, 0x86	; 134
     2aa:	b1 07       	cpc	r27, r17
     2ac:	d9 f7       	brne	.-10     	; 0x2a4 <.do_copy_data_loop>

000002ae <__do_clear_bss>:
     2ae:	13 e0       	ldi	r17, 0x03	; 3
     2b0:	a6 e8       	ldi	r26, 0x86	; 134
     2b2:	b1 e0       	ldi	r27, 0x01	; 1
     2b4:	01 c0       	rjmp	.+2      	; 0x2b8 <.do_clear_bss_start>

000002b6 <.do_clear_bss_loop>:
     2b6:	1d 92       	st	X+, r1

000002b8 <.do_clear_bss_start>:
     2b8:	aa 38       	cpi	r26, 0x8A	; 138
     2ba:	b1 07       	cpc	r27, r17
     2bc:	e1 f7       	brne	.-8      	; 0x2b6 <.do_clear_bss_loop>
     2be:	bd d1       	rcall	.+890    	; 0x63a <main>
     2c0:	d9 c6       	rjmp	.+3506   	; 0x1074 <_exit>

000002c2 <__bad_interrupt>:
     2c2:	9e ce       	rjmp	.-708    	; 0x0 <__vectors>

000002c4 <__fixunssfsi>:
     2c4:	ef 92       	push	r14
     2c6:	ff 92       	push	r15
     2c8:	0f 93       	push	r16
     2ca:	1f 93       	push	r17
     2cc:	7b 01       	movw	r14, r22
     2ce:	8c 01       	movw	r16, r24
     2d0:	20 e0       	ldi	r18, 0x00	; 0
     2d2:	30 e0       	ldi	r19, 0x00	; 0
     2d4:	40 e0       	ldi	r20, 0x00	; 0
     2d6:	5f e4       	ldi	r21, 0x4F	; 79
     2d8:	bb d3       	rcall	.+1910   	; 0xa50 <__gesf2>
     2da:	88 23       	and	r24, r24
     2dc:	7c f0       	brlt	.+30     	; 0x2fc <__fixunssfsi+0x38>
     2de:	c8 01       	movw	r24, r16
     2e0:	b7 01       	movw	r22, r14
     2e2:	20 e0       	ldi	r18, 0x00	; 0
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	40 e0       	ldi	r20, 0x00	; 0
     2e8:	5f e4       	ldi	r21, 0x4F	; 79
     2ea:	97 d2       	rcall	.+1326   	; 0x81a <__subsf3>
     2ec:	13 d0       	rcall	.+38     	; 0x314 <__fixsfsi>
     2ee:	9b 01       	movw	r18, r22
     2f0:	ac 01       	movw	r20, r24
     2f2:	20 50       	subi	r18, 0x00	; 0
     2f4:	30 40       	sbci	r19, 0x00	; 0
     2f6:	40 40       	sbci	r20, 0x00	; 0
     2f8:	50 48       	sbci	r21, 0x80	; 128
     2fa:	05 c0       	rjmp	.+10     	; 0x306 <__fixunssfsi+0x42>
     2fc:	c8 01       	movw	r24, r16
     2fe:	b7 01       	movw	r22, r14
     300:	09 d0       	rcall	.+18     	; 0x314 <__fixsfsi>
     302:	9b 01       	movw	r18, r22
     304:	ac 01       	movw	r20, r24
     306:	b9 01       	movw	r22, r18
     308:	ca 01       	movw	r24, r20
     30a:	1f 91       	pop	r17
     30c:	0f 91       	pop	r16
     30e:	ff 90       	pop	r15
     310:	ef 90       	pop	r14
     312:	08 95       	ret

00000314 <__fixsfsi>:
     314:	ac e0       	ldi	r26, 0x0C	; 12
     316:	b0 e0       	ldi	r27, 0x00	; 0
     318:	ef e8       	ldi	r30, 0x8F	; 143
     31a:	f1 e0       	ldi	r31, 0x01	; 1
     31c:	d1 c5       	rjmp	.+2978   	; 0xec0 <__prologue_saves__+0x20>
     31e:	69 83       	std	Y+1, r22	; 0x01
     320:	7a 83       	std	Y+2, r23	; 0x02
     322:	8b 83       	std	Y+3, r24	; 0x03
     324:	9c 83       	std	Y+4, r25	; 0x04
     326:	ce 01       	movw	r24, r28
     328:	01 96       	adiw	r24, 0x01	; 1
     32a:	be 01       	movw	r22, r28
     32c:	6b 5f       	subi	r22, 0xFB	; 251
     32e:	7f 4f       	sbci	r23, 0xFF	; 255
     330:	42 d0       	rcall	.+132    	; 0x3b6 <__unpack_f>
     332:	8d 81       	ldd	r24, Y+5	; 0x05
     334:	82 30       	cpi	r24, 0x02	; 2
     336:	61 f1       	breq	.+88     	; 0x390 <__fixsfsi+0x7c>
     338:	82 30       	cpi	r24, 0x02	; 2
     33a:	50 f1       	brcs	.+84     	; 0x390 <__fixsfsi+0x7c>
     33c:	84 30       	cpi	r24, 0x04	; 4
     33e:	21 f4       	brne	.+8      	; 0x348 <__fixsfsi+0x34>
     340:	8e 81       	ldd	r24, Y+6	; 0x06
     342:	88 23       	and	r24, r24
     344:	51 f1       	breq	.+84     	; 0x39a <__fixsfsi+0x86>
     346:	2e c0       	rjmp	.+92     	; 0x3a4 <__fixsfsi+0x90>
     348:	2f 81       	ldd	r18, Y+7	; 0x07
     34a:	38 85       	ldd	r19, Y+8	; 0x08
     34c:	37 fd       	sbrc	r19, 7
     34e:	20 c0       	rjmp	.+64     	; 0x390 <__fixsfsi+0x7c>
     350:	6e 81       	ldd	r22, Y+6	; 0x06
     352:	2f 31       	cpi	r18, 0x1F	; 31
     354:	31 05       	cpc	r19, r1
     356:	1c f0       	brlt	.+6      	; 0x35e <__fixsfsi+0x4a>
     358:	66 23       	and	r22, r22
     35a:	f9 f0       	breq	.+62     	; 0x39a <__fixsfsi+0x86>
     35c:	23 c0       	rjmp	.+70     	; 0x3a4 <__fixsfsi+0x90>
     35e:	8e e1       	ldi	r24, 0x1E	; 30
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	82 1b       	sub	r24, r18
     364:	93 0b       	sbc	r25, r19
     366:	29 85       	ldd	r18, Y+9	; 0x09
     368:	3a 85       	ldd	r19, Y+10	; 0x0a
     36a:	4b 85       	ldd	r20, Y+11	; 0x0b
     36c:	5c 85       	ldd	r21, Y+12	; 0x0c
     36e:	04 c0       	rjmp	.+8      	; 0x378 <__fixsfsi+0x64>
     370:	56 95       	lsr	r21
     372:	47 95       	ror	r20
     374:	37 95       	ror	r19
     376:	27 95       	ror	r18
     378:	8a 95       	dec	r24
     37a:	d2 f7       	brpl	.-12     	; 0x370 <__fixsfsi+0x5c>
     37c:	66 23       	and	r22, r22
     37e:	b1 f0       	breq	.+44     	; 0x3ac <__fixsfsi+0x98>
     380:	50 95       	com	r21
     382:	40 95       	com	r20
     384:	30 95       	com	r19
     386:	21 95       	neg	r18
     388:	3f 4f       	sbci	r19, 0xFF	; 255
     38a:	4f 4f       	sbci	r20, 0xFF	; 255
     38c:	5f 4f       	sbci	r21, 0xFF	; 255
     38e:	0e c0       	rjmp	.+28     	; 0x3ac <__fixsfsi+0x98>
     390:	20 e0       	ldi	r18, 0x00	; 0
     392:	30 e0       	ldi	r19, 0x00	; 0
     394:	40 e0       	ldi	r20, 0x00	; 0
     396:	50 e0       	ldi	r21, 0x00	; 0
     398:	09 c0       	rjmp	.+18     	; 0x3ac <__fixsfsi+0x98>
     39a:	2f ef       	ldi	r18, 0xFF	; 255
     39c:	3f ef       	ldi	r19, 0xFF	; 255
     39e:	4f ef       	ldi	r20, 0xFF	; 255
     3a0:	5f e7       	ldi	r21, 0x7F	; 127
     3a2:	04 c0       	rjmp	.+8      	; 0x3ac <__fixsfsi+0x98>
     3a4:	20 e0       	ldi	r18, 0x00	; 0
     3a6:	30 e0       	ldi	r19, 0x00	; 0
     3a8:	40 e0       	ldi	r20, 0x00	; 0
     3aa:	50 e8       	ldi	r21, 0x80	; 128
     3ac:	b9 01       	movw	r22, r18
     3ae:	ca 01       	movw	r24, r20
     3b0:	2c 96       	adiw	r28, 0x0c	; 12
     3b2:	e2 e0       	ldi	r30, 0x02	; 2
     3b4:	a1 c5       	rjmp	.+2882   	; 0xef8 <__epilogue_restores__+0x20>

000003b6 <__unpack_f>:
     3b6:	fc 01       	movw	r30, r24
     3b8:	db 01       	movw	r26, r22
     3ba:	40 81       	ld	r20, Z
     3bc:	51 81       	ldd	r21, Z+1	; 0x01
     3be:	22 81       	ldd	r18, Z+2	; 0x02
     3c0:	62 2f       	mov	r22, r18
     3c2:	6f 77       	andi	r22, 0x7F	; 127
     3c4:	70 e0       	ldi	r23, 0x00	; 0
     3c6:	22 1f       	adc	r18, r18
     3c8:	22 27       	eor	r18, r18
     3ca:	22 1f       	adc	r18, r18
     3cc:	93 81       	ldd	r25, Z+3	; 0x03
     3ce:	89 2f       	mov	r24, r25
     3d0:	88 0f       	add	r24, r24
     3d2:	82 2b       	or	r24, r18
     3d4:	28 2f       	mov	r18, r24
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	99 1f       	adc	r25, r25
     3da:	99 27       	eor	r25, r25
     3dc:	99 1f       	adc	r25, r25
     3de:	11 96       	adiw	r26, 0x01	; 1
     3e0:	9c 93       	st	X, r25
     3e2:	11 97       	sbiw	r26, 0x01	; 1
     3e4:	21 15       	cp	r18, r1
     3e6:	31 05       	cpc	r19, r1
     3e8:	a9 f5       	brne	.+106    	; 0x454 <__unpack_f+0x9e>
     3ea:	41 15       	cp	r20, r1
     3ec:	51 05       	cpc	r21, r1
     3ee:	61 05       	cpc	r22, r1
     3f0:	71 05       	cpc	r23, r1
     3f2:	11 f4       	brne	.+4      	; 0x3f8 <__unpack_f+0x42>
     3f4:	82 e0       	ldi	r24, 0x02	; 2
     3f6:	37 c0       	rjmp	.+110    	; 0x466 <__unpack_f+0xb0>
     3f8:	82 e8       	ldi	r24, 0x82	; 130
     3fa:	9f ef       	ldi	r25, 0xFF	; 255
     3fc:	13 96       	adiw	r26, 0x03	; 3
     3fe:	9c 93       	st	X, r25
     400:	8e 93       	st	-X, r24
     402:	12 97       	sbiw	r26, 0x02	; 2
     404:	9a 01       	movw	r18, r20
     406:	ab 01       	movw	r20, r22
     408:	67 e0       	ldi	r22, 0x07	; 7
     40a:	22 0f       	add	r18, r18
     40c:	33 1f       	adc	r19, r19
     40e:	44 1f       	adc	r20, r20
     410:	55 1f       	adc	r21, r21
     412:	6a 95       	dec	r22
     414:	d1 f7       	brne	.-12     	; 0x40a <__unpack_f+0x54>
     416:	83 e0       	ldi	r24, 0x03	; 3
     418:	8c 93       	st	X, r24
     41a:	0d c0       	rjmp	.+26     	; 0x436 <__unpack_f+0x80>
     41c:	22 0f       	add	r18, r18
     41e:	33 1f       	adc	r19, r19
     420:	44 1f       	adc	r20, r20
     422:	55 1f       	adc	r21, r21
     424:	12 96       	adiw	r26, 0x02	; 2
     426:	8d 91       	ld	r24, X+
     428:	9c 91       	ld	r25, X
     42a:	13 97       	sbiw	r26, 0x03	; 3
     42c:	01 97       	sbiw	r24, 0x01	; 1
     42e:	13 96       	adiw	r26, 0x03	; 3
     430:	9c 93       	st	X, r25
     432:	8e 93       	st	-X, r24
     434:	12 97       	sbiw	r26, 0x02	; 2
     436:	20 30       	cpi	r18, 0x00	; 0
     438:	80 e0       	ldi	r24, 0x00	; 0
     43a:	38 07       	cpc	r19, r24
     43c:	80 e0       	ldi	r24, 0x00	; 0
     43e:	48 07       	cpc	r20, r24
     440:	80 e4       	ldi	r24, 0x40	; 64
     442:	58 07       	cpc	r21, r24
     444:	58 f3       	brcs	.-42     	; 0x41c <__unpack_f+0x66>
     446:	14 96       	adiw	r26, 0x04	; 4
     448:	2d 93       	st	X+, r18
     44a:	3d 93       	st	X+, r19
     44c:	4d 93       	st	X+, r20
     44e:	5c 93       	st	X, r21
     450:	17 97       	sbiw	r26, 0x07	; 7
     452:	08 95       	ret
     454:	2f 3f       	cpi	r18, 0xFF	; 255
     456:	31 05       	cpc	r19, r1
     458:	79 f4       	brne	.+30     	; 0x478 <__unpack_f+0xc2>
     45a:	41 15       	cp	r20, r1
     45c:	51 05       	cpc	r21, r1
     45e:	61 05       	cpc	r22, r1
     460:	71 05       	cpc	r23, r1
     462:	19 f4       	brne	.+6      	; 0x46a <__unpack_f+0xb4>
     464:	84 e0       	ldi	r24, 0x04	; 4
     466:	8c 93       	st	X, r24
     468:	08 95       	ret
     46a:	64 ff       	sbrs	r22, 4
     46c:	03 c0       	rjmp	.+6      	; 0x474 <__unpack_f+0xbe>
     46e:	81 e0       	ldi	r24, 0x01	; 1
     470:	8c 93       	st	X, r24
     472:	12 c0       	rjmp	.+36     	; 0x498 <__unpack_f+0xe2>
     474:	1c 92       	st	X, r1
     476:	10 c0       	rjmp	.+32     	; 0x498 <__unpack_f+0xe2>
     478:	2f 57       	subi	r18, 0x7F	; 127
     47a:	30 40       	sbci	r19, 0x00	; 0
     47c:	13 96       	adiw	r26, 0x03	; 3
     47e:	3c 93       	st	X, r19
     480:	2e 93       	st	-X, r18
     482:	12 97       	sbiw	r26, 0x02	; 2
     484:	83 e0       	ldi	r24, 0x03	; 3
     486:	8c 93       	st	X, r24
     488:	87 e0       	ldi	r24, 0x07	; 7
     48a:	44 0f       	add	r20, r20
     48c:	55 1f       	adc	r21, r21
     48e:	66 1f       	adc	r22, r22
     490:	77 1f       	adc	r23, r23
     492:	8a 95       	dec	r24
     494:	d1 f7       	brne	.-12     	; 0x48a <__unpack_f+0xd4>
     496:	70 64       	ori	r23, 0x40	; 64
     498:	14 96       	adiw	r26, 0x04	; 4
     49a:	4d 93       	st	X+, r20
     49c:	5d 93       	st	X+, r21
     49e:	6d 93       	st	X+, r22
     4a0:	7c 93       	st	X, r23
     4a2:	17 97       	sbiw	r26, 0x07	; 7
     4a4:	08 95       	ret

000004a6 <buttonCheck>:
	}
}

void buttonCheck() {

	RIGHT = 0; LEFT = 0;
     4a6:	10 92 89 01 	sts	0x0189, r1
     4aa:	10 92 88 01 	sts	0x0188, r1
     4ae:	10 92 87 01 	sts	0x0187, r1
     4b2:	10 92 86 01 	sts	0x0186, r1
	
	if(PINB & 0b00000010) {
     4b6:	19 9b       	sbis	0x03, 1	; 3
     4b8:	11 c0       	rjmp	.+34     	; 0x4dc <buttonCheck+0x36>
     4ba:	84 ef       	ldi	r24, 0xF4	; 244
     4bc:	91 e0       	ldi	r25, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     4be:	20 e9       	ldi	r18, 0x90	; 144
     4c0:	31 e0       	ldi	r19, 0x01	; 1
     4c2:	f9 01       	movw	r30, r18
     4c4:	31 97       	sbiw	r30, 0x01	; 1
     4c6:	f1 f7       	brne	.-4      	; 0x4c4 <buttonCheck+0x1e>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4c8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4ca:	d9 f7       	brne	.-10     	; 0x4c2 <buttonCheck+0x1c>
	_delay_ms(50);
	if(PINB & 0b00000010) {
     4cc:	19 9b       	sbis	0x03, 1	; 3
     4ce:	06 c0       	rjmp	.+12     	; 0x4dc <buttonCheck+0x36>
		// Send output to PORTD.
		//PORTB |= (1<<3); //PORTB = 0b11111111;
		RIGHT = 1;
     4d0:	81 e0       	ldi	r24, 0x01	; 1
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	90 93 89 01 	sts	0x0189, r25
     4d8:	80 93 88 01 	sts	0x0188, r24
	}
	}
	
	if (PINB & 0b00000001 ) {
     4dc:	18 9b       	sbis	0x03, 0	; 3
     4de:	11 c0       	rjmp	.+34     	; 0x502 <buttonCheck+0x5c>
     4e0:	84 ef       	ldi	r24, 0xF4	; 244
     4e2:	91 e0       	ldi	r25, 0x01	; 1
     4e4:	20 e9       	ldi	r18, 0x90	; 144
     4e6:	31 e0       	ldi	r19, 0x01	; 1
     4e8:	f9 01       	movw	r30, r18
     4ea:	31 97       	sbiw	r30, 0x01	; 1
     4ec:	f1 f7       	brne	.-4      	; 0x4ea <buttonCheck+0x44>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4ee:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4f0:	d9 f7       	brne	.-10     	; 0x4e8 <buttonCheck+0x42>
	_delay_ms(50);
	if (PINB & 0b00000001 ) {
     4f2:	18 9b       	sbis	0x03, 0	; 3
     4f4:	06 c0       	rjmp	.+12     	; 0x502 <buttonCheck+0x5c>
		//PORTB |= (1<<2);
		LEFT = 1;
     4f6:	81 e0       	ldi	r24, 0x01	; 1
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	90 93 87 01 	sts	0x0187, r25
     4fe:	80 93 86 01 	sts	0x0186, r24
     502:	08 95       	ret

00000504 <PinChangeInit>:
}

void PinChangeInit(void)
{
	//Enable PCINT0 and PCINT1 (both buttons) in the PCMSK0 register
	PCMSK0 |= (1<<PCINT0);
     504:	eb e6       	ldi	r30, 0x6B	; 107
     506:	f0 e0       	ldi	r31, 0x00	; 0
     508:	80 81       	ld	r24, Z
     50a:	81 60       	ori	r24, 0x01	; 1
     50c:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT1);
     50e:	80 81       	ld	r24, Z
     510:	82 60       	ori	r24, 0x02	; 2
     512:	80 83       	st	Z, r24

	//Enable Pin change interrupts in the Pin Change Interrupt Control Register
	PCICR |= (1<<PCIE0);
     514:	e8 e6       	ldi	r30, 0x68	; 104
     516:	f0 e0       	ldi	r31, 0x00	; 0
     518:	80 81       	ld	r24, Z
     51a:	81 60       	ori	r24, 0x01	; 1
     51c:	80 83       	st	Z, r24
	
	//Set the PCINT0 and PCINT1 interrupts to trigger on rising edge
	EICRA |= ((1<<ISC00)&&(1<<ISC01)&&(1<<ISC10)&&(1<<ISC11));
     51e:	e9 e6       	ldi	r30, 0x69	; 105
     520:	f0 e0       	ldi	r31, 0x00	; 0
     522:	80 81       	ld	r24, Z
     524:	81 60       	ori	r24, 0x01	; 1
     526:	80 83       	st	Z, r24
		
	//Ensure to enable global interrupts as well.
	sei();
     528:	78 94       	sei
}
     52a:	08 95       	ret

0000052c <__vector_9>:

ISR(PCINT0_vect)
{	
     52c:	1f 92       	push	r1
     52e:	0f 92       	push	r0
     530:	0f b6       	in	r0, 0x3f	; 63
     532:	0f 92       	push	r0
     534:	11 24       	eor	r1, r1
     536:	8f 93       	push	r24
     538:	9f 93       	push	r25
	RIGHT = 0; LEFT = 0;
     53a:	10 92 89 01 	sts	0x0189, r1
     53e:	10 92 88 01 	sts	0x0188, r1
     542:	10 92 87 01 	sts	0x0187, r1
     546:	10 92 86 01 	sts	0x0186, r1
	
	if(PINB & 0b00000010) {
     54a:	19 9b       	sbis	0x03, 1	; 3
     54c:	06 c0       	rjmp	.+12     	; 0x55a <__vector_9+0x2e>
	//_delay_ms(50);
	//if(PINB & 0b00000010) {
		// Send output to PORTD.
		//PORTB |= (1<<3); //PORTB = 0b11111111;
		RIGHT = 1;
     54e:	81 e0       	ldi	r24, 0x01	; 1
     550:	90 e0       	ldi	r25, 0x00	; 0
     552:	90 93 89 01 	sts	0x0189, r25
     556:	80 93 88 01 	sts	0x0188, r24
	//}
	}
	
	if (PINB & 0b00000001 ) {
     55a:	18 9b       	sbis	0x03, 0	; 3
     55c:	06 c0       	rjmp	.+12     	; 0x56a <__vector_9+0x3e>
	//_delay_ms(50);
	//if (PINB & 0b00000001 ) {
		//PORTB |= (1<<2);
		LEFT = 1;
     55e:	81 e0       	ldi	r24, 0x01	; 1
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	90 93 87 01 	sts	0x0187, r25
     566:	80 93 86 01 	sts	0x0186, r24
	}
	clear();
	draw_character('*',heroX,heroY);
	refresh();
	*/
}
     56a:	9f 91       	pop	r25
     56c:	8f 91       	pop	r24
     56e:	0f 90       	pop	r0
     570:	0f be       	out	0x3f, r0	; 63
     572:	0f 90       	pop	r0
     574:	1f 90       	pop	r1
     576:	18 95       	reti

00000578 <__vector_23>:
	//Ensure to enable global interrupts as well.
	sei();
}

ISR(TIMER0_OVF_vect)
{
     578:	1f 92       	push	r1
     57a:	0f 92       	push	r0
     57c:	0f b6       	in	r0, 0x3f	; 63
     57e:	0f 92       	push	r0
     580:	11 24       	eor	r1, r1
	//Clear the flag by writing a one
	TIFR0 |= (1<<TOV0);
     582:	a8 9a       	sbi	0x15, 0	; 21
			draw_character('x',(LCD_X/NUM_BLOCKS)*i+5,fallingBlocks[i]);
		}
		refresh();
	}
	*/
}
     584:	0f 90       	pop	r0
     586:	0f be       	out	0x3f, r0	; 63
     588:	0f 90       	pop	r0
     58a:	1f 90       	pop	r1
     58c:	18 95       	reti

0000058e <seedWithButtonPress>:
	return out;
}

void seedWithButtonPress() {
// turn on teensy LED
PORTD |= 0b01000000;
     58e:	5e 9a       	sbi	0x0b, 6	; 11
// Configure port B for the buttons....
DDRB |= 0b00001100;
     590:	84 b1       	in	r24, 0x04	; 4
     592:	8c 60       	ori	r24, 0x0C	; 12
     594:	84 b9       	out	0x04, r24	; 4
     596:	20 e0       	ldi	r18, 0x00	; 0
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	02 c0       	rjmp	.+4      	; 0x5a0 <seedWithButtonPress+0x12>
// Wait for the button press on SW0 while iterating the seed
unsigned int seed = 0;
while (!RIGHT) {
seed++;
     59c:	2f 5f       	subi	r18, 0xFF	; 255
     59e:	3f 4f       	sbci	r19, 0xFF	; 255
PORTD |= 0b01000000;
// Configure port B for the buttons....
DDRB |= 0b00001100;
// Wait for the button press on SW0 while iterating the seed
unsigned int seed = 0;
while (!RIGHT) {
     5a0:	80 91 88 01 	lds	r24, 0x0188
     5a4:	90 91 89 01 	lds	r25, 0x0189
     5a8:	89 2b       	or	r24, r25
     5aa:	c1 f3       	breq	.-16     	; 0x59c <seedWithButtonPress+0xe>
seed++;
}
// Seed the random number generator
srand(seed);
     5ac:	c9 01       	movw	r24, r18
     5ae:	fb d4       	rcall	.+2550   	; 0xfa6 <srand>
// What does dgbI do? where is it from?
// dbgI((int) seed, 10);
// turn off teensy LED
PORTD = 0b00000000;
     5b0:	1b b8       	out	0x0b, r1	; 11
}
     5b2:	08 95       	ret

000005b4 <CountDown>:
	buttonCheck();
	CountDown();
	
}

void CountDown() {
     5b4:	1f 93       	push	r17
     5b6:	cf 93       	push	r28
     5b8:	df 93       	push	r29
     5ba:	13 e3       	ldi	r17, 0x33	; 51
     5bc:	c0 e9       	ldi	r28, 0x90	; 144
     5be:	d1 e0       	ldi	r29, 0x01	; 1
	for (char i= 0x3; i>0x0; i--) {
		clear();
     5c0:	4b d2       	rcall	.+1174   	; 0xa58 <clear>
		draw_string("Game Start In: ", 2,22); // 15*5 = 75 (84 - 75)/2 = 4
     5c2:	80 e0       	ldi	r24, 0x00	; 0
     5c4:	91 e0       	ldi	r25, 0x01	; 1
     5c6:	62 e0       	ldi	r22, 0x02	; 2
     5c8:	46 e1       	ldi	r20, 0x16	; 22
     5ca:	d1 d2       	rcall	.+1442   	; 0xb6e <draw_string>
		draw_character((0x30 + i), 75,22);
     5cc:	81 2f       	mov	r24, r17
     5ce:	6b e4       	ldi	r22, 0x4B	; 75
     5d0:	46 e1       	ldi	r20, 0x16	; 22
     5d2:	7d d2       	rcall	.+1274   	; 0xace <draw_character>
		refresh();
     5d4:	e1 d2       	rcall	.+1474   	; 0xb98 <refresh>
     5d6:	80 e1       	ldi	r24, 0x10	; 16
     5d8:	97 e2       	ldi	r25, 0x27	; 39
     5da:	fe 01       	movw	r30, r28
     5dc:	31 97       	sbiw	r30, 0x01	; 1
     5de:	f1 f7       	brne	.-4      	; 0x5dc <CountDown+0x28>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5e0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5e2:	d9 f7       	brne	.-10     	; 0x5da <CountDown+0x26>
     5e4:	11 50       	subi	r17, 0x01	; 1
	CountDown();
	
}

void CountDown() {
	for (char i= 0x3; i>0x0; i--) {
     5e6:	10 33       	cpi	r17, 0x30	; 48
     5e8:	59 f7       	brne	.-42     	; 0x5c0 <CountDown+0xc>
		draw_string("Game Start In: ", 2,22); // 15*5 = 75 (84 - 75)/2 = 4
		draw_character((0x30 + i), 75,22);
		refresh();
		_delay_ms(1000);
	}
}
     5ea:	df 91       	pop	r29
     5ec:	cf 91       	pop	r28
     5ee:	1f 91       	pop	r17
     5f0:	08 95       	ret

000005f2 <setupGame>:
void setupGame() {

	// SW0 and SW1 are connected to pins B0 and B1
	// LED1 and LED2 connected to pins B2 and B3
	// 0 for input 1 for output
	DDRB |= 0b00001100;
     5f2:	84 b1       	in	r24, 0x04	; 4
     5f4:	8c 60       	ori	r24, 0x0C	; 12
     5f6:	84 b9       	out	0x04, r24	; 4
    // Teensy LED is connected to D6
    DDRD |= 0b01000000;
     5f8:	56 9a       	sbi	0x0a, 6	; 10
    // turn OFF LED initially
	PORTD |= 0b00000000;
     5fa:	8b b1       	in	r24, 0x0b	; 11
     5fc:	8b b9       	out	0x0b, r24	; 11
	PORTB |= (1<<2)||(1<<3); //not sure why this is here
     5fe:	28 9a       	sbi	0x05, 0	; 5
	
	//initialise clock
	//CLKPR |= 1 << CLKPCE;
	//CLKPR |= 1 << CLKPS0;
	CPU_PRESCALE(CPU_16MHz);
     600:	e1 e6       	ldi	r30, 0x61	; 97
     602:	f0 e0       	ldi	r31, 0x00	; 0
     604:	80 e8       	ldi	r24, 0x80	; 128
     606:	80 83       	st	Z, r24
     608:	10 82       	st	Z, r1
	
	
	LCDInitialise(LCD_DEFAULT_CONTRAST);
     60a:	8f e3       	ldi	r24, 0x3F	; 63
     60c:	f7 d2       	rcall	.+1518   	; 0xbfc <LCDInitialise>
	clear();
     60e:	24 d2       	rcall	.+1096   	; 0xa58 <clear>
	
	PinChangeInit();
     610:	79 df       	rcall	.-270    	; 0x504 <PinChangeInit>
	
	clear();
     612:	22 d2       	rcall	.+1092   	; 0xa58 <clear>
	draw_string("ZombieDash v1.0", 4,0); // 15*5 = 75 (84 - 75)/2 = 4
     614:	80 e1       	ldi	r24, 0x10	; 16
     616:	91 e0       	ldi	r25, 0x01	; 1
     618:	64 e0       	ldi	r22, 0x04	; 4
     61a:	40 e0       	ldi	r20, 0x00	; 0
     61c:	a8 d2       	rcall	.+1360   	; 0xb6e <draw_string>
	draw_string("Lachlan Robinson", 2,9); // 16*5 = 80 (84 - 80)/2 = 2
     61e:	80 e2       	ldi	r24, 0x20	; 32
     620:	91 e0       	ldi	r25, 0x01	; 1
     622:	62 e0       	ldi	r22, 0x02	; 2
     624:	49 e0       	ldi	r20, 0x09	; 9
     626:	a3 d2       	rcall	.+1350   	; 0xb6e <draw_string>
	draw_string("n8845409", 22, 28); // 8*5 = 40 (84 - 40)/2 = 22
     628:	81 e3       	ldi	r24, 0x31	; 49
     62a:	91 e0       	ldi	r25, 0x01	; 1
     62c:	66 e1       	ldi	r22, 0x16	; 22
     62e:	4c e1       	ldi	r20, 0x1C	; 28
     630:	9e d2       	rcall	.+1340   	; 0xb6e <draw_string>
	refresh();
     632:	b2 d2       	rcall	.+1380   	; 0xb98 <refresh>
	
	seedWithButtonPress();
     634:	ac df       	rcall	.-168    	; 0x58e <seedWithButtonPress>
	buttonCheck();
     636:	37 df       	rcall	.-402    	; 0x4a6 <buttonCheck>
	CountDown();
	
}
     638:	bd cf       	rjmp	.-134    	; 0x5b4 <CountDown>

0000063a <main>:
#include "my_functions.h"

#define NUM_BLOCKS 10
#define MAX_CLOCK_COUNTER_FOR_100MSECOND 3

int main() {
     63a:	2f 92       	push	r2
     63c:	3f 92       	push	r3
     63e:	4f 92       	push	r4
     640:	5f 92       	push	r5
     642:	6f 92       	push	r6
     644:	7f 92       	push	r7
     646:	8f 92       	push	r8
     648:	9f 92       	push	r9
     64a:	af 92       	push	r10
     64c:	bf 92       	push	r11
     64e:	cf 92       	push	r12
     650:	df 92       	push	r13
     652:	ef 92       	push	r14
     654:	ff 92       	push	r15
     656:	0f 93       	push	r16
     658:	1f 93       	push	r17
     65a:	df 93       	push	r29
     65c:	cf 93       	push	r28
     65e:	cd b7       	in	r28, 0x3d	; 61
     660:	de b7       	in	r29, 0x3e	; 62
     662:	ca 56       	subi	r28, 0x6A	; 106
     664:	d0 40       	sbci	r29, 0x00	; 0
     666:	0f b6       	in	r0, 0x3f	; 63
     668:	f8 94       	cli
     66a:	de bf       	out	0x3e, r29	; 62
     66c:	0f be       	out	0x3f, r0	; 63
     66e:	cd bf       	out	0x3d, r28	; 61
	
	setupGame();
     670:	c0 df       	rcall	.-128    	; 0x5f2 <setupGame>
		UINT( 00100100, 00100100 ),
		UINT( 00010011, 11001000 ),
		UINT( 00010000, 00001000 ),
		UINT( 00011000, 00011000 ),
		UINT( 00000111, 11100000 ),
	};
     672:	de 01       	movw	r26, r28
     674:	9b 96       	adiw	r26, 0x2b	; 43
     676:	e2 e6       	ldi	r30, 0x62	; 98
     678:	f1 e0       	ldi	r31, 0x01	; 1
     67a:	80 e2       	ldi	r24, 0x20	; 32
     67c:	01 90       	ld	r0, Z+
     67e:	0d 92       	st	X+, r0
     680:	81 50       	subi	r24, 0x01	; 1
     682:	e1 f7       	brne	.-8      	; 0x67c <main+0x42>
		UINT( 00100111, 11100100 ),
		UINT( 00010000, 00001000 ),
		UINT( 00010000, 00001000 ),
		UINT( 00011000, 00011000 ),
		UINT( 00000111, 11100000 ),
	};
     684:	de 01       	movw	r26, r28
     686:	a5 5b       	subi	r26, 0xB5	; 181
     688:	bf 4f       	sbci	r27, 0xFF	; 255
     68a:	e2 e4       	ldi	r30, 0x42	; 66
     68c:	f1 e0       	ldi	r31, 0x01	; 1
     68e:	80 e2       	ldi	r24, 0x20	; 32
     690:	01 90       	ld	r0, Z+
     692:	0d 92       	st	X+, r0
     694:	81 50       	subi	r24, 0x01	; 1
     696:	e1 f7       	brne	.-8      	; 0x690 <main+0x56>
	byte *bitmapb;
	
	Sprite my_sprite;
	byte width = 16;
	byte height = 16;
	screen_x -= width;
     698:	80 91 3a 01 	lds	r24, 0x013A
     69c:	90 91 3b 01 	lds	r25, 0x013B
     6a0:	40 97       	sbiw	r24, 0x10	; 16
     6a2:	90 93 3b 01 	sts	0x013B, r25
     6a6:	80 93 3a 01 	sts	0x013A, r24
	screen_y -= height;
     6aa:	20 91 3c 01 	lds	r18, 0x013C
     6ae:	30 91 3d 01 	lds	r19, 0x013D
     6b2:	20 51       	subi	r18, 0x10	; 16
     6b4:	30 40       	sbci	r19, 0x00	; 0
     6b6:	30 93 3d 01 	sts	0x013D, r19
     6ba:	20 93 3c 01 	sts	0x013C, r18
	byte x = screen_x/2 - width;
     6be:	62 e0       	ldi	r22, 0x02	; 2
     6c0:	70 e0       	ldi	r23, 0x00	; 0
     6c2:	c7 d3       	rcall	.+1934   	; 0xe52 <__divmodhi4>
     6c4:	16 2f       	mov	r17, r22
     6c6:	10 51       	subi	r17, 0x10	; 16
	byte y = screen_y/2;
     6c8:	c9 01       	movw	r24, r18
     6ca:	62 e0       	ldi	r22, 0x02	; 2
     6cc:	70 e0       	ldi	r23, 0x00	; 0
     6ce:	c1 d3       	rcall	.+1922   	; 0xe52 <__divmodhi4>
     6d0:	b6 2e       	mov	r11, r22
	init_sprite(&my_sprite, x, y, width, height, bitmap1);
     6d2:	6e 01       	movw	r12, r28
     6d4:	08 94       	sec
     6d6:	c1 1c       	adc	r12, r1
     6d8:	d1 1c       	adc	r13, r1
     6da:	c6 01       	movw	r24, r12
     6dc:	61 2f       	mov	r22, r17
     6de:	4b 2d       	mov	r20, r11
     6e0:	20 e1       	ldi	r18, 0x10	; 16
     6e2:	00 e1       	ldi	r16, 0x10	; 16
     6e4:	5b e2       	ldi	r21, 0x2B	; 43
     6e6:	e5 2e       	mov	r14, r21
     6e8:	f1 2c       	mov	r15, r1
     6ea:	ec 0e       	add	r14, r28
     6ec:	fd 1e       	adc	r15, r29
     6ee:	b9 d2       	rcall	.+1394   	; 0xc62 <init_sprite>
	draw_sprite(&my_sprite);
     6f0:	c6 01       	movw	r24, r12
     6f2:	e7 d2       	rcall	.+1486   	; 0xcc2 <draw_sprite>
	
	Sprite my_sprite2;
	init_sprite(&my_sprite2, x + 2*width, y, width, height, bitmap2);
     6f4:	46 e1       	ldi	r20, 0x16	; 22
     6f6:	c4 2e       	mov	r12, r20
     6f8:	d1 2c       	mov	r13, r1
     6fa:	cc 0e       	add	r12, r28
     6fc:	dd 1e       	adc	r13, r29
     6fe:	10 5e       	subi	r17, 0xE0	; 224
     700:	c6 01       	movw	r24, r12
     702:	61 2f       	mov	r22, r17
     704:	4b 2d       	mov	r20, r11
     706:	20 e1       	ldi	r18, 0x10	; 16
     708:	3b e4       	ldi	r19, 0x4B	; 75
     70a:	e3 2e       	mov	r14, r19
     70c:	f1 2c       	mov	r15, r1
     70e:	ec 0e       	add	r14, r28
     710:	fd 1e       	adc	r15, r29
     712:	a7 d2       	rcall	.+1358   	; 0xc62 <init_sprite>
	draw_sprite(&my_sprite2);
     714:	c6 01       	movw	r24, r12
     716:	d5 d2       	rcall	.+1450   	; 0xcc2 <draw_sprite>
	refresh();
     718:	3f d2       	rcall	.+1150   	; 0xb98 <refresh>
	
	refresh();
     71a:	3e d2       	rcall	.+1148   	; 0xb98 <refresh>
     71c:	88 ee       	ldi	r24, 0xE8	; 232
     71e:	93 e0       	ldi	r25, 0x03	; 3
     720:	20 e9       	ldi	r18, 0x90	; 144
     722:	31 e0       	ldi	r19, 0x01	; 1
     724:	f9 01       	movw	r30, r18
     726:	31 97       	sbiw	r30, 0x01	; 1
     728:	f1 f7       	brne	.-4      	; 0x726 <main+0xec>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     72a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     72c:	d9 f7       	brne	.-10     	; 0x724 <main+0xea>
     72e:	21 e0       	ldi	r18, 0x01	; 1
     730:	42 2e       	mov	r4, r18
     732:	51 2c       	mov	r5, r1
     734:	91 e0       	ldi	r25, 0x01	; 1
     736:	29 2e       	mov	r2, r25
     738:	31 2c       	mov	r3, r1
	refresh();
	*/
	int add = 1;
	int notPressed = 1;
	while(1){
	my_sprite.y += add;
     73a:	b2 01       	movw	r22, r4
     73c:	88 27       	eor	r24, r24
     73e:	77 fd       	sbrc	r23, 7
     740:	80 95       	com	r24
     742:	98 2f       	mov	r25, r24
     744:	d5 d0       	rcall	.+426    	; 0x8f0 <__floatsisf>
     746:	5b 01       	movw	r10, r22
     748:	6c 01       	movw	r12, r24
     74a:	2d 81       	ldd	r18, Y+5	; 0x05
     74c:	3e 81       	ldd	r19, Y+6	; 0x06
     74e:	4f 81       	ldd	r20, Y+7	; 0x07
     750:	58 85       	ldd	r21, Y+8	; 0x08
     752:	64 d0       	rcall	.+200    	; 0x81c <__addsf3>
     754:	7b 01       	movw	r14, r22
     756:	8c 01       	movw	r16, r24
	my_sprite2.y -= add;
     758:	6a 8c       	ldd	r6, Y+26	; 0x1a
     75a:	7b 8c       	ldd	r7, Y+27	; 0x1b
     75c:	8c 8c       	ldd	r8, Y+28	; 0x1c
     75e:	9d 8c       	ldd	r9, Y+29	; 0x1d
	if (my_sprite.y < 1) add = -add;
     760:	20 e0       	ldi	r18, 0x00	; 0
     762:	30 e0       	ldi	r19, 0x00	; 0
     764:	40 e8       	ldi	r20, 0x80	; 128
     766:	5f e3       	ldi	r21, 0x3F	; 63
     768:	bd d0       	rcall	.+378    	; 0x8e4 <__cmpsf2>
     76a:	88 23       	and	r24, r24
     76c:	24 f4       	brge	.+8      	; 0x776 <main+0x13c>
     76e:	50 94       	com	r5
     770:	41 94       	neg	r4
     772:	51 08       	sbc	r5, r1
     774:	53 94       	inc	r5
	if (my_sprite.y > screen_y) add = -add;
     776:	60 91 3c 01 	lds	r22, 0x013C
     77a:	70 91 3d 01 	lds	r23, 0x013D
     77e:	88 27       	eor	r24, r24
     780:	77 fd       	sbrc	r23, 7
     782:	80 95       	com	r24
     784:	98 2f       	mov	r25, r24
     786:	b4 d0       	rcall	.+360    	; 0x8f0 <__floatsisf>
     788:	9b 01       	movw	r18, r22
     78a:	ac 01       	movw	r20, r24
     78c:	c8 01       	movw	r24, r16
     78e:	b7 01       	movw	r22, r14
     790:	5f d1       	rcall	.+702    	; 0xa50 <__gesf2>
     792:	18 16       	cp	r1, r24
     794:	24 f4       	brge	.+8      	; 0x79e <main+0x164>
     796:	50 94       	com	r5
     798:	41 94       	neg	r4
     79a:	51 08       	sbc	r5, r1
     79c:	53 94       	inc	r5
	*/
	int add = 1;
	int notPressed = 1;
	while(1){
	my_sprite.y += add;
	my_sprite2.y -= add;
     79e:	c4 01       	movw	r24, r8
     7a0:	b3 01       	movw	r22, r6
     7a2:	a6 01       	movw	r20, r12
     7a4:	95 01       	movw	r18, r10
     7a6:	39 d0       	rcall	.+114    	; 0x81a <__subsf3>
     7a8:	6a 8f       	std	Y+26, r22	; 0x1a
     7aa:	7b 8f       	std	Y+27, r23	; 0x1b
     7ac:	8c 8f       	std	Y+28, r24	; 0x1c
     7ae:	9d 8f       	std	Y+29, r25	; 0x1d
	refresh();
	*/
	int add = 1;
	int notPressed = 1;
	while(1){
	my_sprite.y += add;
     7b0:	ed 82       	std	Y+5, r14	; 0x05
     7b2:	fe 82       	std	Y+6, r15	; 0x06
     7b4:	0f 83       	std	Y+7, r16	; 0x07
     7b6:	18 87       	std	Y+8, r17	; 0x08
	my_sprite2.y -= add;
	if (my_sprite.y < 1) add = -add;
	if (my_sprite.y > screen_y) add = -add;
	
	clear();
     7b8:	4f d1       	rcall	.+670    	; 0xa58 <clear>
	
	if (RIGHT == 0 || LEFT == 0) {
     7ba:	80 91 88 01 	lds	r24, 0x0188
     7be:	90 91 89 01 	lds	r25, 0x0189
     7c2:	89 2b       	or	r24, r25
     7c4:	31 f0       	breq	.+12     	; 0x7d2 <main+0x198>
     7c6:	80 91 86 01 	lds	r24, 0x0186
     7ca:	90 91 87 01 	lds	r25, 0x0187
     7ce:	89 2b       	or	r24, r25
     7d0:	19 f4       	brne	.+6      	; 0x7d8 <main+0x19e>
     7d2:	81 e0       	ldi	r24, 0x01	; 1
     7d4:	28 2e       	mov	r2, r24
     7d6:	31 2c       	mov	r3, r1
		notPressed = 1;
	}
	
	if (RIGHT == 1 && LEFT == 1 && notPressed) {
     7d8:	80 91 88 01 	lds	r24, 0x0188
     7dc:	90 91 89 01 	lds	r25, 0x0189
     7e0:	01 97       	sbiw	r24, 0x01	; 1
     7e2:	99 f4       	brne	.+38     	; 0x80a <main+0x1d0>
     7e4:	80 91 86 01 	lds	r24, 0x0186
     7e8:	90 91 87 01 	lds	r25, 0x0187
     7ec:	01 97       	sbiw	r24, 0x01	; 1
     7ee:	69 f4       	brne	.+26     	; 0x80a <main+0x1d0>
     7f0:	21 14       	cp	r2, r1
     7f2:	31 04       	cpc	r3, r1
     7f4:	51 f0       	breq	.+20     	; 0x80a <main+0x1d0>
	notPressed = 0;
	bitmapa = my_sprite.bitmap;
     7f6:	2c 85       	ldd	r18, Y+12	; 0x0c
     7f8:	3d 85       	ldd	r19, Y+13	; 0x0d
	bitmapb = my_sprite2.bitmap;
	bitmaptemp = bitmapa;
	bitmapa = bitmapb;
	bitmapb = bitmaptemp;
	my_sprite.bitmap = bitmapa;
     7fa:	89 a1       	ldd	r24, Y+33	; 0x21
     7fc:	9a a1       	ldd	r25, Y+34	; 0x22
     7fe:	9d 87       	std	Y+13, r25	; 0x0d
     800:	8c 87       	std	Y+12, r24	; 0x0c
	my_sprite2.bitmap = bitmapb;
     802:	3a a3       	std	Y+34, r19	; 0x22
     804:	29 a3       	std	Y+33, r18	; 0x21
     806:	22 24       	eor	r2, r2
     808:	33 24       	eor	r3, r3
	}
	draw_sprite(&my_sprite);
     80a:	ce 01       	movw	r24, r28
     80c:	01 96       	adiw	r24, 0x01	; 1
     80e:	59 d2       	rcall	.+1202   	; 0xcc2 <draw_sprite>
	draw_sprite(&my_sprite2);
     810:	ce 01       	movw	r24, r28
     812:	46 96       	adiw	r24, 0x16	; 22
     814:	56 d2       	rcall	.+1196   	; 0xcc2 <draw_sprite>
	refresh();
     816:	c0 d1       	rcall	.+896    	; 0xb98 <refresh>
     818:	90 cf       	rjmp	.-224    	; 0x73a <main+0x100>

0000081a <__subsf3>:
     81a:	50 58       	subi	r21, 0x80	; 128

0000081c <__addsf3>:
     81c:	bb 27       	eor	r27, r27
     81e:	aa 27       	eor	r26, r26
     820:	0e d0       	rcall	.+28     	; 0x83e <__addsf3x>
     822:	dc c0       	rjmp	.+440    	; 0x9dc <__fp_round>
     824:	cd d0       	rcall	.+410    	; 0x9c0 <__fp_pscA>
     826:	30 f0       	brcs	.+12     	; 0x834 <__addsf3+0x18>
     828:	d2 d0       	rcall	.+420    	; 0x9ce <__fp_pscB>
     82a:	20 f0       	brcs	.+8      	; 0x834 <__addsf3+0x18>
     82c:	31 f4       	brne	.+12     	; 0x83a <__addsf3+0x1e>
     82e:	9f 3f       	cpi	r25, 0xFF	; 255
     830:	11 f4       	brne	.+4      	; 0x836 <__addsf3+0x1a>
     832:	1e f4       	brtc	.+6      	; 0x83a <__addsf3+0x1e>
     834:	c2 c0       	rjmp	.+388    	; 0x9ba <__fp_nan>
     836:	0e f4       	brtc	.+2      	; 0x83a <__addsf3+0x1e>
     838:	e0 95       	com	r30
     83a:	e7 fb       	bst	r30, 7
     83c:	b8 c0       	rjmp	.+368    	; 0x9ae <__fp_inf>

0000083e <__addsf3x>:
     83e:	e9 2f       	mov	r30, r25
     840:	de d0       	rcall	.+444    	; 0x9fe <__fp_split3>
     842:	80 f3       	brcs	.-32     	; 0x824 <__addsf3+0x8>
     844:	ba 17       	cp	r27, r26
     846:	62 07       	cpc	r22, r18
     848:	73 07       	cpc	r23, r19
     84a:	84 07       	cpc	r24, r20
     84c:	95 07       	cpc	r25, r21
     84e:	18 f0       	brcs	.+6      	; 0x856 <__addsf3x+0x18>
     850:	71 f4       	brne	.+28     	; 0x86e <__addsf3x+0x30>
     852:	9e f5       	brtc	.+102    	; 0x8ba <__addsf3x+0x7c>
     854:	f6 c0       	rjmp	.+492    	; 0xa42 <__fp_zero>
     856:	0e f4       	brtc	.+2      	; 0x85a <__addsf3x+0x1c>
     858:	e0 95       	com	r30
     85a:	0b 2e       	mov	r0, r27
     85c:	ba 2f       	mov	r27, r26
     85e:	a0 2d       	mov	r26, r0
     860:	0b 01       	movw	r0, r22
     862:	b9 01       	movw	r22, r18
     864:	90 01       	movw	r18, r0
     866:	0c 01       	movw	r0, r24
     868:	ca 01       	movw	r24, r20
     86a:	a0 01       	movw	r20, r0
     86c:	11 24       	eor	r1, r1
     86e:	ff 27       	eor	r31, r31
     870:	59 1b       	sub	r21, r25
     872:	99 f0       	breq	.+38     	; 0x89a <__addsf3x+0x5c>
     874:	59 3f       	cpi	r21, 0xF9	; 249
     876:	50 f4       	brcc	.+20     	; 0x88c <__addsf3x+0x4e>
     878:	50 3e       	cpi	r21, 0xE0	; 224
     87a:	68 f1       	brcs	.+90     	; 0x8d6 <__addsf3x+0x98>
     87c:	1a 16       	cp	r1, r26
     87e:	f0 40       	sbci	r31, 0x00	; 0
     880:	a2 2f       	mov	r26, r18
     882:	23 2f       	mov	r18, r19
     884:	34 2f       	mov	r19, r20
     886:	44 27       	eor	r20, r20
     888:	58 5f       	subi	r21, 0xF8	; 248
     88a:	f3 cf       	rjmp	.-26     	; 0x872 <__addsf3x+0x34>
     88c:	46 95       	lsr	r20
     88e:	37 95       	ror	r19
     890:	27 95       	ror	r18
     892:	a7 95       	ror	r26
     894:	f0 40       	sbci	r31, 0x00	; 0
     896:	53 95       	inc	r21
     898:	c9 f7       	brne	.-14     	; 0x88c <__addsf3x+0x4e>
     89a:	7e f4       	brtc	.+30     	; 0x8ba <__addsf3x+0x7c>
     89c:	1f 16       	cp	r1, r31
     89e:	ba 0b       	sbc	r27, r26
     8a0:	62 0b       	sbc	r22, r18
     8a2:	73 0b       	sbc	r23, r19
     8a4:	84 0b       	sbc	r24, r20
     8a6:	ba f0       	brmi	.+46     	; 0x8d6 <__addsf3x+0x98>
     8a8:	91 50       	subi	r25, 0x01	; 1
     8aa:	a1 f0       	breq	.+40     	; 0x8d4 <__addsf3x+0x96>
     8ac:	ff 0f       	add	r31, r31
     8ae:	bb 1f       	adc	r27, r27
     8b0:	66 1f       	adc	r22, r22
     8b2:	77 1f       	adc	r23, r23
     8b4:	88 1f       	adc	r24, r24
     8b6:	c2 f7       	brpl	.-16     	; 0x8a8 <__addsf3x+0x6a>
     8b8:	0e c0       	rjmp	.+28     	; 0x8d6 <__addsf3x+0x98>
     8ba:	ba 0f       	add	r27, r26
     8bc:	62 1f       	adc	r22, r18
     8be:	73 1f       	adc	r23, r19
     8c0:	84 1f       	adc	r24, r20
     8c2:	48 f4       	brcc	.+18     	; 0x8d6 <__addsf3x+0x98>
     8c4:	87 95       	ror	r24
     8c6:	77 95       	ror	r23
     8c8:	67 95       	ror	r22
     8ca:	b7 95       	ror	r27
     8cc:	f7 95       	ror	r31
     8ce:	9e 3f       	cpi	r25, 0xFE	; 254
     8d0:	08 f0       	brcs	.+2      	; 0x8d4 <__addsf3x+0x96>
     8d2:	b3 cf       	rjmp	.-154    	; 0x83a <__addsf3+0x1e>
     8d4:	93 95       	inc	r25
     8d6:	88 0f       	add	r24, r24
     8d8:	08 f0       	brcs	.+2      	; 0x8dc <__addsf3x+0x9e>
     8da:	99 27       	eor	r25, r25
     8dc:	ee 0f       	add	r30, r30
     8de:	97 95       	ror	r25
     8e0:	87 95       	ror	r24
     8e2:	08 95       	ret

000008e4 <__cmpsf2>:
     8e4:	40 d0       	rcall	.+128    	; 0x966 <__fp_cmp>
     8e6:	08 f4       	brcc	.+2      	; 0x8ea <__cmpsf2+0x6>
     8e8:	81 e0       	ldi	r24, 0x01	; 1
     8ea:	08 95       	ret

000008ec <__floatunsisf>:
     8ec:	e8 94       	clt
     8ee:	09 c0       	rjmp	.+18     	; 0x902 <__floatsisf+0x12>

000008f0 <__floatsisf>:
     8f0:	97 fb       	bst	r25, 7
     8f2:	3e f4       	brtc	.+14     	; 0x902 <__floatsisf+0x12>
     8f4:	90 95       	com	r25
     8f6:	80 95       	com	r24
     8f8:	70 95       	com	r23
     8fa:	61 95       	neg	r22
     8fc:	7f 4f       	sbci	r23, 0xFF	; 255
     8fe:	8f 4f       	sbci	r24, 0xFF	; 255
     900:	9f 4f       	sbci	r25, 0xFF	; 255
     902:	99 23       	and	r25, r25
     904:	a9 f0       	breq	.+42     	; 0x930 <__floatsisf+0x40>
     906:	f9 2f       	mov	r31, r25
     908:	96 e9       	ldi	r25, 0x96	; 150
     90a:	bb 27       	eor	r27, r27
     90c:	93 95       	inc	r25
     90e:	f6 95       	lsr	r31
     910:	87 95       	ror	r24
     912:	77 95       	ror	r23
     914:	67 95       	ror	r22
     916:	b7 95       	ror	r27
     918:	f1 11       	cpse	r31, r1
     91a:	f8 cf       	rjmp	.-16     	; 0x90c <__floatsisf+0x1c>
     91c:	fa f4       	brpl	.+62     	; 0x95c <__floatsisf+0x6c>
     91e:	bb 0f       	add	r27, r27
     920:	11 f4       	brne	.+4      	; 0x926 <__floatsisf+0x36>
     922:	60 ff       	sbrs	r22, 0
     924:	1b c0       	rjmp	.+54     	; 0x95c <__floatsisf+0x6c>
     926:	6f 5f       	subi	r22, 0xFF	; 255
     928:	7f 4f       	sbci	r23, 0xFF	; 255
     92a:	8f 4f       	sbci	r24, 0xFF	; 255
     92c:	9f 4f       	sbci	r25, 0xFF	; 255
     92e:	16 c0       	rjmp	.+44     	; 0x95c <__floatsisf+0x6c>
     930:	88 23       	and	r24, r24
     932:	11 f0       	breq	.+4      	; 0x938 <__floatsisf+0x48>
     934:	96 e9       	ldi	r25, 0x96	; 150
     936:	11 c0       	rjmp	.+34     	; 0x95a <__floatsisf+0x6a>
     938:	77 23       	and	r23, r23
     93a:	21 f0       	breq	.+8      	; 0x944 <__floatsisf+0x54>
     93c:	9e e8       	ldi	r25, 0x8E	; 142
     93e:	87 2f       	mov	r24, r23
     940:	76 2f       	mov	r23, r22
     942:	05 c0       	rjmp	.+10     	; 0x94e <__floatsisf+0x5e>
     944:	66 23       	and	r22, r22
     946:	71 f0       	breq	.+28     	; 0x964 <__floatsisf+0x74>
     948:	96 e8       	ldi	r25, 0x86	; 134
     94a:	86 2f       	mov	r24, r22
     94c:	70 e0       	ldi	r23, 0x00	; 0
     94e:	60 e0       	ldi	r22, 0x00	; 0
     950:	2a f0       	brmi	.+10     	; 0x95c <__floatsisf+0x6c>
     952:	9a 95       	dec	r25
     954:	66 0f       	add	r22, r22
     956:	77 1f       	adc	r23, r23
     958:	88 1f       	adc	r24, r24
     95a:	da f7       	brpl	.-10     	; 0x952 <__floatsisf+0x62>
     95c:	88 0f       	add	r24, r24
     95e:	96 95       	lsr	r25
     960:	87 95       	ror	r24
     962:	97 f9       	bld	r25, 7
     964:	08 95       	ret

00000966 <__fp_cmp>:
     966:	99 0f       	add	r25, r25
     968:	00 08       	sbc	r0, r0
     96a:	55 0f       	add	r21, r21
     96c:	aa 0b       	sbc	r26, r26
     96e:	e0 e8       	ldi	r30, 0x80	; 128
     970:	fe ef       	ldi	r31, 0xFE	; 254
     972:	16 16       	cp	r1, r22
     974:	17 06       	cpc	r1, r23
     976:	e8 07       	cpc	r30, r24
     978:	f9 07       	cpc	r31, r25
     97a:	c0 f0       	brcs	.+48     	; 0x9ac <__fp_cmp+0x46>
     97c:	12 16       	cp	r1, r18
     97e:	13 06       	cpc	r1, r19
     980:	e4 07       	cpc	r30, r20
     982:	f5 07       	cpc	r31, r21
     984:	98 f0       	brcs	.+38     	; 0x9ac <__fp_cmp+0x46>
     986:	62 1b       	sub	r22, r18
     988:	73 0b       	sbc	r23, r19
     98a:	84 0b       	sbc	r24, r20
     98c:	95 0b       	sbc	r25, r21
     98e:	39 f4       	brne	.+14     	; 0x99e <__fp_cmp+0x38>
     990:	0a 26       	eor	r0, r26
     992:	61 f0       	breq	.+24     	; 0x9ac <__fp_cmp+0x46>
     994:	23 2b       	or	r18, r19
     996:	24 2b       	or	r18, r20
     998:	25 2b       	or	r18, r21
     99a:	21 f4       	brne	.+8      	; 0x9a4 <__fp_cmp+0x3e>
     99c:	08 95       	ret
     99e:	0a 26       	eor	r0, r26
     9a0:	09 f4       	brne	.+2      	; 0x9a4 <__fp_cmp+0x3e>
     9a2:	a1 40       	sbci	r26, 0x01	; 1
     9a4:	a6 95       	lsr	r26
     9a6:	8f ef       	ldi	r24, 0xFF	; 255
     9a8:	81 1d       	adc	r24, r1
     9aa:	81 1d       	adc	r24, r1
     9ac:	08 95       	ret

000009ae <__fp_inf>:
     9ae:	97 f9       	bld	r25, 7
     9b0:	9f 67       	ori	r25, 0x7F	; 127
     9b2:	80 e8       	ldi	r24, 0x80	; 128
     9b4:	70 e0       	ldi	r23, 0x00	; 0
     9b6:	60 e0       	ldi	r22, 0x00	; 0
     9b8:	08 95       	ret

000009ba <__fp_nan>:
     9ba:	9f ef       	ldi	r25, 0xFF	; 255
     9bc:	80 ec       	ldi	r24, 0xC0	; 192
     9be:	08 95       	ret

000009c0 <__fp_pscA>:
     9c0:	00 24       	eor	r0, r0
     9c2:	0a 94       	dec	r0
     9c4:	16 16       	cp	r1, r22
     9c6:	17 06       	cpc	r1, r23
     9c8:	18 06       	cpc	r1, r24
     9ca:	09 06       	cpc	r0, r25
     9cc:	08 95       	ret

000009ce <__fp_pscB>:
     9ce:	00 24       	eor	r0, r0
     9d0:	0a 94       	dec	r0
     9d2:	12 16       	cp	r1, r18
     9d4:	13 06       	cpc	r1, r19
     9d6:	14 06       	cpc	r1, r20
     9d8:	05 06       	cpc	r0, r21
     9da:	08 95       	ret

000009dc <__fp_round>:
     9dc:	09 2e       	mov	r0, r25
     9de:	03 94       	inc	r0
     9e0:	00 0c       	add	r0, r0
     9e2:	11 f4       	brne	.+4      	; 0x9e8 <__fp_round+0xc>
     9e4:	88 23       	and	r24, r24
     9e6:	52 f0       	brmi	.+20     	; 0x9fc <__fp_round+0x20>
     9e8:	bb 0f       	add	r27, r27
     9ea:	40 f4       	brcc	.+16     	; 0x9fc <__fp_round+0x20>
     9ec:	bf 2b       	or	r27, r31
     9ee:	11 f4       	brne	.+4      	; 0x9f4 <__fp_round+0x18>
     9f0:	60 ff       	sbrs	r22, 0
     9f2:	04 c0       	rjmp	.+8      	; 0x9fc <__fp_round+0x20>
     9f4:	6f 5f       	subi	r22, 0xFF	; 255
     9f6:	7f 4f       	sbci	r23, 0xFF	; 255
     9f8:	8f 4f       	sbci	r24, 0xFF	; 255
     9fa:	9f 4f       	sbci	r25, 0xFF	; 255
     9fc:	08 95       	ret

000009fe <__fp_split3>:
     9fe:	57 fd       	sbrc	r21, 7
     a00:	90 58       	subi	r25, 0x80	; 128
     a02:	44 0f       	add	r20, r20
     a04:	55 1f       	adc	r21, r21
     a06:	59 f0       	breq	.+22     	; 0xa1e <__fp_splitA+0x10>
     a08:	5f 3f       	cpi	r21, 0xFF	; 255
     a0a:	71 f0       	breq	.+28     	; 0xa28 <__fp_splitA+0x1a>
     a0c:	47 95       	ror	r20

00000a0e <__fp_splitA>:
     a0e:	88 0f       	add	r24, r24
     a10:	97 fb       	bst	r25, 7
     a12:	99 1f       	adc	r25, r25
     a14:	61 f0       	breq	.+24     	; 0xa2e <__fp_splitA+0x20>
     a16:	9f 3f       	cpi	r25, 0xFF	; 255
     a18:	79 f0       	breq	.+30     	; 0xa38 <__fp_splitA+0x2a>
     a1a:	87 95       	ror	r24
     a1c:	08 95       	ret
     a1e:	12 16       	cp	r1, r18
     a20:	13 06       	cpc	r1, r19
     a22:	14 06       	cpc	r1, r20
     a24:	55 1f       	adc	r21, r21
     a26:	f2 cf       	rjmp	.-28     	; 0xa0c <__fp_split3+0xe>
     a28:	46 95       	lsr	r20
     a2a:	f1 df       	rcall	.-30     	; 0xa0e <__fp_splitA>
     a2c:	08 c0       	rjmp	.+16     	; 0xa3e <__fp_splitA+0x30>
     a2e:	16 16       	cp	r1, r22
     a30:	17 06       	cpc	r1, r23
     a32:	18 06       	cpc	r1, r24
     a34:	99 1f       	adc	r25, r25
     a36:	f1 cf       	rjmp	.-30     	; 0xa1a <__fp_splitA+0xc>
     a38:	86 95       	lsr	r24
     a3a:	71 05       	cpc	r23, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	08 94       	sec
     a40:	08 95       	ret

00000a42 <__fp_zero>:
     a42:	e8 94       	clt

00000a44 <__fp_szero>:
     a44:	bb 27       	eor	r27, r27
     a46:	66 27       	eor	r22, r22
     a48:	77 27       	eor	r23, r23
     a4a:	cb 01       	movw	r24, r22
     a4c:	97 f9       	bld	r25, 7
     a4e:	08 95       	ret

00000a50 <__gesf2>:
     a50:	8a df       	rcall	.-236    	; 0x966 <__fp_cmp>
     a52:	08 f4       	brcc	.+2      	; 0xa56 <__gesf2+0x6>
     a54:	8f ef       	ldi	r24, 0xFF	; 255
     a56:	08 95       	ret

00000a58 <clear>:
     a58:	e2 e9       	ldi	r30, 0x92	; 146
     a5a:	f1 e0       	ldi	r31, 0x01	; 1
     a5c:	11 92       	st	Z+, r1
     a5e:	83 e0       	ldi	r24, 0x03	; 3
     a60:	ea 38       	cpi	r30, 0x8A	; 138
     a62:	f8 07       	cpc	r31, r24
     a64:	d9 f7       	brne	.-10     	; 0xa5c <clear+0x4>
     a66:	08 95       	ret

00000a68 <set_pixel>:
     a68:	84 35       	cpi	r24, 0x54	; 84
     a6a:	80 f5       	brcc	.+96     	; 0xacc <set_pixel+0x64>
     a6c:	60 33       	cpi	r22, 0x30	; 48
     a6e:	70 f5       	brcc	.+92     	; 0xacc <set_pixel+0x64>
     a70:	26 2f       	mov	r18, r22
     a72:	26 95       	lsr	r18
     a74:	26 95       	lsr	r18
     a76:	26 95       	lsr	r18
     a78:	67 70       	andi	r22, 0x07	; 7
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	44 23       	and	r20, r20
     a7e:	99 f0       	breq	.+38     	; 0xaa6 <set_pixel+0x3e>
     a80:	e4 e5       	ldi	r30, 0x54	; 84
     a82:	2e 9f       	mul	r18, r30
     a84:	f0 01       	movw	r30, r0
     a86:	11 24       	eor	r1, r1
     a88:	e8 0f       	add	r30, r24
     a8a:	f9 1f       	adc	r31, r25
     a8c:	ee 56       	subi	r30, 0x6E	; 110
     a8e:	fe 4f       	sbci	r31, 0xFE	; 254
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	02 c0       	rjmp	.+4      	; 0xa9a <set_pixel+0x32>
     a96:	88 0f       	add	r24, r24
     a98:	99 1f       	adc	r25, r25
     a9a:	6a 95       	dec	r22
     a9c:	e2 f7       	brpl	.-8      	; 0xa96 <set_pixel+0x2e>
     a9e:	20 81       	ld	r18, Z
     aa0:	28 2b       	or	r18, r24
     aa2:	20 83       	st	Z, r18
     aa4:	08 95       	ret
     aa6:	e4 e5       	ldi	r30, 0x54	; 84
     aa8:	2e 9f       	mul	r18, r30
     aaa:	f0 01       	movw	r30, r0
     aac:	11 24       	eor	r1, r1
     aae:	e8 0f       	add	r30, r24
     ab0:	f9 1f       	adc	r31, r25
     ab2:	ee 56       	subi	r30, 0x6E	; 110
     ab4:	fe 4f       	sbci	r31, 0xFE	; 254
     ab6:	81 e0       	ldi	r24, 0x01	; 1
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	02 c0       	rjmp	.+4      	; 0xac0 <set_pixel+0x58>
     abc:	88 0f       	add	r24, r24
     abe:	99 1f       	adc	r25, r25
     ac0:	6a 95       	dec	r22
     ac2:	e2 f7       	brpl	.-8      	; 0xabc <set_pixel+0x54>
     ac4:	80 95       	com	r24
     ac6:	20 81       	ld	r18, Z
     ac8:	28 23       	and	r18, r24
     aca:	20 83       	st	Z, r18
     acc:	08 95       	ret

00000ace <draw_character>:
     ace:	8f 92       	push	r8
     ad0:	9f 92       	push	r9
     ad2:	af 92       	push	r10
     ad4:	bf 92       	push	r11
     ad6:	cf 92       	push	r12
     ad8:	df 92       	push	r13
     ada:	ef 92       	push	r14
     adc:	ff 92       	push	r15
     ade:	0f 93       	push	r16
     ae0:	1f 93       	push	r17
     ae2:	cf 93       	push	r28
     ae4:	df 93       	push	r29
     ae6:	d6 2e       	mov	r13, r22
     ae8:	c4 2e       	mov	r12, r20
     aea:	95 e0       	ldi	r25, 0x05	; 5
     aec:	89 9f       	mul	r24, r25
     aee:	c0 01       	movw	r24, r0
     af0:	11 24       	eor	r1, r1
     af2:	8c 01       	movw	r16, r24
     af4:	04 5f       	subi	r16, 0xF4	; 244
     af6:	1f 4f       	sbci	r17, 0xFF	; 255
     af8:	f1 e0       	ldi	r31, 0x01	; 1
     afa:	8f 2e       	mov	r8, r31
     afc:	91 2c       	mov	r9, r1
     afe:	e1 e1       	ldi	r30, 0x11	; 17
     b00:	ae 2e       	mov	r10, r30
     b02:	e0 e0       	ldi	r30, 0x00	; 0
     b04:	be 2e       	mov	r11, r30
     b06:	a8 0e       	add	r10, r24
     b08:	b9 1e       	adc	r11, r25
     b0a:	1d c0       	rjmp	.+58     	; 0xb46 <__stack+0x47>
     b0c:	6c 2d       	mov	r22, r12
     b0e:	6c 0f       	add	r22, r28
     b10:	a4 01       	movw	r20, r8
     b12:	0c 2e       	mov	r0, r28
     b14:	02 c0       	rjmp	.+4      	; 0xb1a <__stack+0x1b>
     b16:	44 0f       	add	r20, r20
     b18:	55 1f       	adc	r21, r21
     b1a:	0a 94       	dec	r0
     b1c:	e2 f7       	brpl	.-8      	; 0xb16 <__stack+0x17>
     b1e:	4e 21       	and	r20, r14
     b20:	5f 21       	and	r21, r15
     b22:	0c 2e       	mov	r0, r28
     b24:	02 c0       	rjmp	.+4      	; 0xb2a <__stack+0x2b>
     b26:	55 95       	asr	r21
     b28:	47 95       	ror	r20
     b2a:	0a 94       	dec	r0
     b2c:	e2 f7       	brpl	.-8      	; 0xb26 <__stack+0x27>
     b2e:	8d 2d       	mov	r24, r13
     b30:	9b df       	rcall	.-202    	; 0xa68 <set_pixel>
     b32:	21 96       	adiw	r28, 0x01	; 1
     b34:	c8 30       	cpi	r28, 0x08	; 8
     b36:	d1 05       	cpc	r29, r1
     b38:	49 f7       	brne	.-46     	; 0xb0c <__stack+0xd>
     b3a:	0f 5f       	subi	r16, 0xFF	; 255
     b3c:	1f 4f       	sbci	r17, 0xFF	; 255
     b3e:	d3 94       	inc	r13
     b40:	0a 15       	cp	r16, r10
     b42:	1b 05       	cpc	r17, r11
     b44:	39 f0       	breq	.+14     	; 0xb54 <__stack+0x55>
     b46:	c0 e0       	ldi	r28, 0x00	; 0
     b48:	d0 e0       	ldi	r29, 0x00	; 0
     b4a:	f8 01       	movw	r30, r16
     b4c:	84 91       	lpm	r24, Z+
     b4e:	e8 2e       	mov	r14, r24
     b50:	ff 24       	eor	r15, r15
     b52:	dc cf       	rjmp	.-72     	; 0xb0c <__stack+0xd>
     b54:	df 91       	pop	r29
     b56:	cf 91       	pop	r28
     b58:	1f 91       	pop	r17
     b5a:	0f 91       	pop	r16
     b5c:	ff 90       	pop	r15
     b5e:	ef 90       	pop	r14
     b60:	df 90       	pop	r13
     b62:	cf 90       	pop	r12
     b64:	bf 90       	pop	r11
     b66:	af 90       	pop	r10
     b68:	9f 90       	pop	r9
     b6a:	8f 90       	pop	r8
     b6c:	08 95       	ret

00000b6e <draw_string>:
     b6e:	0f 93       	push	r16
     b70:	1f 93       	push	r17
     b72:	cf 93       	push	r28
     b74:	df 93       	push	r29
     b76:	ec 01       	movw	r28, r24
     b78:	16 2f       	mov	r17, r22
     b7a:	04 2f       	mov	r16, r20
     b7c:	05 c0       	rjmp	.+10     	; 0xb88 <draw_string+0x1a>
     b7e:	61 2f       	mov	r22, r17
     b80:	40 2f       	mov	r20, r16
     b82:	a5 df       	rcall	.-182    	; 0xace <draw_character>
     b84:	21 96       	adiw	r28, 0x01	; 1
     b86:	1b 5f       	subi	r17, 0xFB	; 251
     b88:	88 81       	ld	r24, Y
     b8a:	88 23       	and	r24, r24
     b8c:	c1 f7       	brne	.-16     	; 0xb7e <draw_string+0x10>
     b8e:	df 91       	pop	r29
     b90:	cf 91       	pop	r28
     b92:	1f 91       	pop	r17
     b94:	0f 91       	pop	r16
     b96:	08 95       	ret

00000b98 <refresh>:
     b98:	cf 93       	push	r28
     b9a:	df 93       	push	r29
     b9c:	80 e0       	ldi	r24, 0x00	; 0
     b9e:	60 e0       	ldi	r22, 0x00	; 0
     ba0:	55 d0       	rcall	.+170    	; 0xc4c <LCDPosition>
     ba2:	c2 e9       	ldi	r28, 0x92	; 146
     ba4:	d1 e0       	ldi	r29, 0x01	; 1
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	69 91       	ld	r22, Y+
     baa:	07 d0       	rcall	.+14     	; 0xbba <LCDWrite>
     bac:	83 e0       	ldi	r24, 0x03	; 3
     bae:	ca 38       	cpi	r28, 0x8A	; 138
     bb0:	d8 07       	cpc	r29, r24
     bb2:	c9 f7       	brne	.-14     	; 0xba6 <refresh+0xe>
     bb4:	df 91       	pop	r29
     bb6:	cf 91       	pop	r28
     bb8:	08 95       	ret

00000bba <LCDWrite>:
     bba:	95 b1       	in	r25, 0x05	; 5
     bbc:	82 95       	swap	r24
     bbe:	88 0f       	add	r24, r24
     bc0:	80 7e       	andi	r24, 0xE0	; 224
     bc2:	9f 7d       	andi	r25, 0xDF	; 223
     bc4:	98 2b       	or	r25, r24
     bc6:	95 b9       	out	0x05, r25	; 5
     bc8:	5f 98       	cbi	0x0b, 7	; 11
     bca:	27 e0       	ldi	r18, 0x07	; 7
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	70 e0       	ldi	r23, 0x00	; 0
     bd0:	8f 98       	cbi	0x11, 7	; 17
     bd2:	cb 01       	movw	r24, r22
     bd4:	02 2e       	mov	r0, r18
     bd6:	02 c0       	rjmp	.+4      	; 0xbdc <LCDWrite+0x22>
     bd8:	95 95       	asr	r25
     bda:	87 95       	ror	r24
     bdc:	0a 94       	dec	r0
     bde:	e2 f7       	brpl	.-8      	; 0xbd8 <LCDWrite+0x1e>
     be0:	80 ff       	sbrs	r24, 0
     be2:	02 c0       	rjmp	.+4      	; 0xbe8 <LCDWrite+0x2e>
     be4:	2e 9a       	sbi	0x05, 6	; 5
     be6:	01 c0       	rjmp	.+2      	; 0xbea <LCDWrite+0x30>
     be8:	2e 98       	cbi	0x05, 6	; 5
     bea:	8f 9a       	sbi	0x11, 7	; 17
     bec:	21 50       	subi	r18, 0x01	; 1
     bee:	30 40       	sbci	r19, 0x00	; 0
     bf0:	8f ef       	ldi	r24, 0xFF	; 255
     bf2:	2f 3f       	cpi	r18, 0xFF	; 255
     bf4:	38 07       	cpc	r19, r24
     bf6:	61 f7       	brne	.-40     	; 0xbd0 <LCDWrite+0x16>
     bf8:	5f 9a       	sbi	0x0b, 7	; 11
     bfa:	08 95       	ret

00000bfc <LCDInitialise>:
     bfc:	1f 93       	push	r17
     bfe:	18 2f       	mov	r17, r24
     c00:	57 9a       	sbi	0x0a, 7	; 10
     c02:	24 9a       	sbi	0x04, 4	; 4
     c04:	25 9a       	sbi	0x04, 5	; 4
     c06:	26 9a       	sbi	0x04, 6	; 4
     c08:	87 9a       	sbi	0x10, 7	; 16
     c0a:	2c 98       	cbi	0x05, 4	; 5
     c0c:	5f 9a       	sbi	0x0b, 7	; 11
     c0e:	2c 9a       	sbi	0x05, 4	; 5
     c10:	80 e0       	ldi	r24, 0x00	; 0
     c12:	61 e2       	ldi	r22, 0x21	; 33
     c14:	d2 df       	rcall	.-92     	; 0xbba <LCDWrite>
     c16:	10 68       	ori	r17, 0x80	; 128
     c18:	80 e0       	ldi	r24, 0x00	; 0
     c1a:	61 2f       	mov	r22, r17
     c1c:	ce df       	rcall	.-100    	; 0xbba <LCDWrite>
     c1e:	80 e0       	ldi	r24, 0x00	; 0
     c20:	64 e0       	ldi	r22, 0x04	; 4
     c22:	cb df       	rcall	.-106    	; 0xbba <LCDWrite>
     c24:	80 e0       	ldi	r24, 0x00	; 0
     c26:	63 e1       	ldi	r22, 0x13	; 19
     c28:	c8 df       	rcall	.-112    	; 0xbba <LCDWrite>
     c2a:	80 e0       	ldi	r24, 0x00	; 0
     c2c:	6c e0       	ldi	r22, 0x0C	; 12
     c2e:	c5 df       	rcall	.-118    	; 0xbba <LCDWrite>
     c30:	80 e0       	ldi	r24, 0x00	; 0
     c32:	60 e2       	ldi	r22, 0x20	; 32
     c34:	c2 df       	rcall	.-124    	; 0xbba <LCDWrite>
     c36:	80 e0       	ldi	r24, 0x00	; 0
     c38:	6c e0       	ldi	r22, 0x0C	; 12
     c3a:	bf df       	rcall	.-130    	; 0xbba <LCDWrite>
     c3c:	80 e0       	ldi	r24, 0x00	; 0
     c3e:	60 e4       	ldi	r22, 0x40	; 64
     c40:	bc df       	rcall	.-136    	; 0xbba <LCDWrite>
     c42:	80 e0       	ldi	r24, 0x00	; 0
     c44:	60 e8       	ldi	r22, 0x80	; 128
     c46:	b9 df       	rcall	.-142    	; 0xbba <LCDWrite>
     c48:	1f 91       	pop	r17
     c4a:	08 95       	ret

00000c4c <LCDPosition>:
     c4c:	1f 93       	push	r17
     c4e:	18 2f       	mov	r17, r24
     c50:	60 64       	ori	r22, 0x40	; 64
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	b2 df       	rcall	.-156    	; 0xbba <LCDWrite>
     c56:	10 68       	ori	r17, 0x80	; 128
     c58:	80 e0       	ldi	r24, 0x00	; 0
     c5a:	61 2f       	mov	r22, r17
     c5c:	ae df       	rcall	.-164    	; 0xbba <LCDWrite>
     c5e:	1f 91       	pop	r17
     c60:	08 95       	ret

00000c62 <init_sprite>:
     c62:	8f 92       	push	r8
     c64:	9f 92       	push	r9
     c66:	af 92       	push	r10
     c68:	bf 92       	push	r11
     c6a:	cf 92       	push	r12
     c6c:	df 92       	push	r13
     c6e:	ef 92       	push	r14
     c70:	ff 92       	push	r15
     c72:	0f 93       	push	r16
     c74:	1f 93       	push	r17
     c76:	4c 01       	movw	r8, r24
     c78:	a4 2e       	mov	r10, r20
     c7a:	12 2f       	mov	r17, r18
     c7c:	70 e0       	ldi	r23, 0x00	; 0
     c7e:	80 e0       	ldi	r24, 0x00	; 0
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	34 de       	rcall	.-920    	; 0x8ec <__floatunsisf>
     c84:	f4 01       	movw	r30, r8
     c86:	60 83       	st	Z, r22
     c88:	71 83       	std	Z+1, r23	; 0x01
     c8a:	82 83       	std	Z+2, r24	; 0x02
     c8c:	93 83       	std	Z+3, r25	; 0x03
     c8e:	bb 24       	eor	r11, r11
     c90:	cc 24       	eor	r12, r12
     c92:	dd 24       	eor	r13, r13
     c94:	c6 01       	movw	r24, r12
     c96:	b5 01       	movw	r22, r10
     c98:	29 de       	rcall	.-942    	; 0x8ec <__floatunsisf>
     c9a:	f4 01       	movw	r30, r8
     c9c:	64 83       	std	Z+4, r22	; 0x04
     c9e:	75 83       	std	Z+5, r23	; 0x05
     ca0:	86 83       	std	Z+6, r24	; 0x06
     ca2:	97 83       	std	Z+7, r25	; 0x07
     ca4:	10 87       	std	Z+8, r17	; 0x08
     ca6:	01 87       	std	Z+9, r16	; 0x09
     ca8:	f4 86       	std	Z+12, r15	; 0x0c
     caa:	e3 86       	std	Z+11, r14	; 0x0b
     cac:	1f 91       	pop	r17
     cae:	0f 91       	pop	r16
     cb0:	ff 90       	pop	r15
     cb2:	ef 90       	pop	r14
     cb4:	df 90       	pop	r13
     cb6:	cf 90       	pop	r12
     cb8:	bf 90       	pop	r11
     cba:	af 90       	pop	r10
     cbc:	9f 90       	pop	r9
     cbe:	8f 90       	pop	r8
     cc0:	08 95       	ret

00000cc2 <draw_sprite>:
     cc2:	2f 92       	push	r2
     cc4:	3f 92       	push	r3
     cc6:	4f 92       	push	r4
     cc8:	5f 92       	push	r5
     cca:	7f 92       	push	r7
     ccc:	8f 92       	push	r8
     cce:	9f 92       	push	r9
     cd0:	af 92       	push	r10
     cd2:	bf 92       	push	r11
     cd4:	cf 92       	push	r12
     cd6:	df 92       	push	r13
     cd8:	ef 92       	push	r14
     cda:	ff 92       	push	r15
     cdc:	0f 93       	push	r16
     cde:	1f 93       	push	r17
     ce0:	df 93       	push	r29
     ce2:	cf 93       	push	r28
     ce4:	00 d0       	rcall	.+0      	; 0xce6 <draw_sprite+0x24>
     ce6:	00 d0       	rcall	.+0      	; 0xce8 <draw_sprite+0x26>
     ce8:	cd b7       	in	r28, 0x3d	; 61
     cea:	de b7       	in	r29, 0x3e	; 62
     cec:	2c 01       	movw	r4, r24
     cee:	dc 01       	movw	r26, r24
     cf0:	1a 96       	adiw	r26, 0x0a	; 10
     cf2:	8c 91       	ld	r24, X
     cf4:	88 23       	and	r24, r24
     cf6:	09 f4       	brne	.+2      	; 0xcfa <draw_sprite+0x38>
     cf8:	96 c0       	rjmp	.+300    	; 0xe26 <draw_sprite+0x164>
     cfa:	22 24       	eor	r2, r2
     cfc:	33 24       	eor	r3, r3
     cfe:	1a 82       	std	Y+2, r1	; 0x02
     d00:	19 82       	std	Y+1, r1	; 0x01
     d02:	87 c0       	rjmp	.+270    	; 0xe12 <draw_sprite+0x150>
     d04:	e9 81       	ldd	r30, Y+1	; 0x01
     d06:	fa 81       	ldd	r31, Y+2	; 0x02
     d08:	bf 01       	movw	r22, r30
     d0a:	88 27       	eor	r24, r24
     d0c:	77 fd       	sbrc	r23, 7
     d0e:	80 95       	com	r24
     d10:	98 2f       	mov	r25, r24
     d12:	ee dd       	rcall	.-1060   	; 0x8f0 <__floatsisf>
     d14:	d2 01       	movw	r26, r4
     d16:	14 96       	adiw	r26, 0x04	; 4
     d18:	2d 91       	ld	r18, X+
     d1a:	3d 91       	ld	r19, X+
     d1c:	4d 91       	ld	r20, X+
     d1e:	5c 91       	ld	r21, X
     d20:	17 97       	sbiw	r26, 0x07	; 7
     d22:	7c dd       	rcall	.-1288   	; 0x81c <__addsf3>
     d24:	5b 01       	movw	r10, r22
     d26:	6c 01       	movw	r12, r24
     d28:	20 e0       	ldi	r18, 0x00	; 0
     d2a:	30 e0       	ldi	r19, 0x00	; 0
     d2c:	40 e0       	ldi	r20, 0x00	; 0
     d2e:	50 e0       	ldi	r21, 0x00	; 0
     d30:	d9 dd       	rcall	.-1102   	; 0x8e4 <__cmpsf2>
     d32:	87 fd       	sbrc	r24, 7
     d34:	68 c0       	rjmp	.+208    	; 0xe06 <draw_sprite+0x144>
     d36:	c6 01       	movw	r24, r12
     d38:	b5 01       	movw	r22, r10
     d3a:	20 e0       	ldi	r18, 0x00	; 0
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	40 e4       	ldi	r20, 0x40	; 64
     d40:	52 e4       	ldi	r21, 0x42	; 66
     d42:	86 de       	rcall	.-756    	; 0xa50 <__gesf2>
     d44:	87 ff       	sbrs	r24, 7
     d46:	6f c0       	rjmp	.+222    	; 0xe26 <draw_sprite+0x164>
     d48:	1c 82       	std	Y+4, r1	; 0x04
     d4a:	1b 82       	std	Y+3, r1	; 0x03
     d4c:	45 c0       	rjmp	.+138    	; 0xdd8 <draw_sprite+0x116>
     d4e:	d2 01       	movw	r26, r4
     d50:	1b 96       	adiw	r26, 0x0b	; 11
     d52:	ed 91       	ld	r30, X+
     d54:	fc 91       	ld	r31, X
     d56:	1c 97       	sbiw	r26, 0x0c	; 12
     d58:	e2 0d       	add	r30, r2
     d5a:	f3 1d       	adc	r31, r3
     d5c:	70 80       	ld	r7, Z
     d5e:	eb 81       	ldd	r30, Y+3	; 0x03
     d60:	fc 81       	ldd	r31, Y+4	; 0x04
     d62:	bf 01       	movw	r22, r30
     d64:	88 27       	eor	r24, r24
     d66:	77 fd       	sbrc	r23, 7
     d68:	80 95       	com	r24
     d6a:	98 2f       	mov	r25, r24
     d6c:	c1 dd       	rcall	.-1150   	; 0x8f0 <__floatsisf>
     d6e:	d2 01       	movw	r26, r4
     d70:	2d 91       	ld	r18, X+
     d72:	3d 91       	ld	r19, X+
     d74:	4d 91       	ld	r20, X+
     d76:	5c 91       	ld	r21, X
     d78:	51 dd       	rcall	.-1374   	; 0x81c <__addsf3>
     d7a:	7b 01       	movw	r14, r22
     d7c:	8c 01       	movw	r16, r24
     d7e:	20 e0       	ldi	r18, 0x00	; 0
     d80:	30 e0       	ldi	r19, 0x00	; 0
     d82:	40 e0       	ldi	r20, 0x00	; 0
     d84:	50 e0       	ldi	r21, 0x00	; 0
     d86:	64 de       	rcall	.-824    	; 0xa50 <__gesf2>
     d88:	88 23       	and	r24, r24
     d8a:	cc f0       	brlt	.+50     	; 0xdbe <draw_sprite+0xfc>
     d8c:	c8 01       	movw	r24, r16
     d8e:	b7 01       	movw	r22, r14
     d90:	20 e0       	ldi	r18, 0x00	; 0
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	48 ea       	ldi	r20, 0xA8	; 168
     d96:	52 e4       	ldi	r21, 0x42	; 66
     d98:	a5 dd       	rcall	.-1206   	; 0x8e4 <__cmpsf2>
     d9a:	88 23       	and	r24, r24
     d9c:	84 f4       	brge	.+32     	; 0xdbe <draw_sprite+0xfc>
     d9e:	78 20       	and	r7, r8
     da0:	71 f0       	breq	.+28     	; 0xdbe <draw_sprite+0xfc>
     da2:	c8 01       	movw	r24, r16
     da4:	b7 01       	movw	r22, r14
     da6:	8e da       	rcall	.-2788   	; 0x2c4 <__fixunssfsi>
     da8:	7b 01       	movw	r14, r22
     daa:	8c 01       	movw	r16, r24
     dac:	c6 01       	movw	r24, r12
     dae:	b5 01       	movw	r22, r10
     db0:	89 da       	rcall	.-2798   	; 0x2c4 <__fixunssfsi>
     db2:	9b 01       	movw	r18, r22
     db4:	ac 01       	movw	r20, r24
     db6:	8e 2d       	mov	r24, r14
     db8:	62 2f       	mov	r22, r18
     dba:	41 e0       	ldi	r20, 0x01	; 1
     dbc:	55 de       	rcall	.-854    	; 0xa68 <set_pixel>
     dbe:	eb 81       	ldd	r30, Y+3	; 0x03
     dc0:	fc 81       	ldd	r31, Y+4	; 0x04
     dc2:	31 96       	adiw	r30, 0x01	; 1
     dc4:	fc 83       	std	Y+4, r31	; 0x04
     dc6:	eb 83       	std	Y+3, r30	; 0x03
     dc8:	cf 01       	movw	r24, r30
     dca:	87 70       	andi	r24, 0x07	; 7
     dcc:	90 70       	andi	r25, 0x00	; 0
     dce:	89 2b       	or	r24, r25
     dd0:	39 f4       	brne	.+14     	; 0xde0 <draw_sprite+0x11e>
     dd2:	08 94       	sec
     dd4:	21 1c       	adc	r2, r1
     dd6:	31 1c       	adc	r3, r1
     dd8:	90 e8       	ldi	r25, 0x80	; 128
     dda:	89 2e       	mov	r8, r25
     ddc:	91 2c       	mov	r9, r1
     dde:	02 c0       	rjmp	.+4      	; 0xde4 <draw_sprite+0x122>
     de0:	95 94       	asr	r9
     de2:	87 94       	ror	r8
     de4:	d2 01       	movw	r26, r4
     de6:	18 96       	adiw	r26, 0x08	; 8
     de8:	8c 91       	ld	r24, X
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	eb 81       	ldd	r30, Y+3	; 0x03
     dee:	fc 81       	ldd	r31, Y+4	; 0x04
     df0:	e8 17       	cp	r30, r24
     df2:	f9 07       	cpc	r31, r25
     df4:	0c f4       	brge	.+2      	; 0xdf8 <draw_sprite+0x136>
     df6:	ab cf       	rjmp	.-170    	; 0xd4e <draw_sprite+0x8c>
     df8:	87 70       	andi	r24, 0x07	; 7
     dfa:	90 70       	andi	r25, 0x00	; 0
     dfc:	89 2b       	or	r24, r25
     dfe:	19 f0       	breq	.+6      	; 0xe06 <draw_sprite+0x144>
     e00:	08 94       	sec
     e02:	21 1c       	adc	r2, r1
     e04:	31 1c       	adc	r3, r1
     e06:	29 81       	ldd	r18, Y+1	; 0x01
     e08:	3a 81       	ldd	r19, Y+2	; 0x02
     e0a:	2f 5f       	subi	r18, 0xFF	; 255
     e0c:	3f 4f       	sbci	r19, 0xFF	; 255
     e0e:	3a 83       	std	Y+2, r19	; 0x02
     e10:	29 83       	std	Y+1, r18	; 0x01
     e12:	d2 01       	movw	r26, r4
     e14:	19 96       	adiw	r26, 0x09	; 9
     e16:	8c 91       	ld	r24, X
     e18:	90 e0       	ldi	r25, 0x00	; 0
     e1a:	e9 81       	ldd	r30, Y+1	; 0x01
     e1c:	fa 81       	ldd	r31, Y+2	; 0x02
     e1e:	e8 17       	cp	r30, r24
     e20:	f9 07       	cpc	r31, r25
     e22:	0c f4       	brge	.+2      	; 0xe26 <draw_sprite+0x164>
     e24:	6f cf       	rjmp	.-290    	; 0xd04 <draw_sprite+0x42>
     e26:	0f 90       	pop	r0
     e28:	0f 90       	pop	r0
     e2a:	0f 90       	pop	r0
     e2c:	0f 90       	pop	r0
     e2e:	cf 91       	pop	r28
     e30:	df 91       	pop	r29
     e32:	1f 91       	pop	r17
     e34:	0f 91       	pop	r16
     e36:	ff 90       	pop	r15
     e38:	ef 90       	pop	r14
     e3a:	df 90       	pop	r13
     e3c:	cf 90       	pop	r12
     e3e:	bf 90       	pop	r11
     e40:	af 90       	pop	r10
     e42:	9f 90       	pop	r9
     e44:	8f 90       	pop	r8
     e46:	7f 90       	pop	r7
     e48:	5f 90       	pop	r5
     e4a:	4f 90       	pop	r4
     e4c:	3f 90       	pop	r3
     e4e:	2f 90       	pop	r2
     e50:	08 95       	ret

00000e52 <__divmodhi4>:
     e52:	97 fb       	bst	r25, 7
     e54:	09 2e       	mov	r0, r25
     e56:	07 26       	eor	r0, r23
     e58:	0a d0       	rcall	.+20     	; 0xe6e <__divmodhi4_neg1>
     e5a:	77 fd       	sbrc	r23, 7
     e5c:	04 d0       	rcall	.+8      	; 0xe66 <__divmodhi4_neg2>
     e5e:	0c d0       	rcall	.+24     	; 0xe78 <__udivmodhi4>
     e60:	06 d0       	rcall	.+12     	; 0xe6e <__divmodhi4_neg1>
     e62:	00 20       	and	r0, r0
     e64:	1a f4       	brpl	.+6      	; 0xe6c <__divmodhi4_exit>

00000e66 <__divmodhi4_neg2>:
     e66:	70 95       	com	r23
     e68:	61 95       	neg	r22
     e6a:	7f 4f       	sbci	r23, 0xFF	; 255

00000e6c <__divmodhi4_exit>:
     e6c:	08 95       	ret

00000e6e <__divmodhi4_neg1>:
     e6e:	f6 f7       	brtc	.-4      	; 0xe6c <__divmodhi4_exit>
     e70:	90 95       	com	r25
     e72:	81 95       	neg	r24
     e74:	9f 4f       	sbci	r25, 0xFF	; 255
     e76:	08 95       	ret

00000e78 <__udivmodhi4>:
     e78:	aa 1b       	sub	r26, r26
     e7a:	bb 1b       	sub	r27, r27
     e7c:	51 e1       	ldi	r21, 0x11	; 17
     e7e:	07 c0       	rjmp	.+14     	; 0xe8e <__udivmodhi4_ep>

00000e80 <__udivmodhi4_loop>:
     e80:	aa 1f       	adc	r26, r26
     e82:	bb 1f       	adc	r27, r27
     e84:	a6 17       	cp	r26, r22
     e86:	b7 07       	cpc	r27, r23
     e88:	10 f0       	brcs	.+4      	; 0xe8e <__udivmodhi4_ep>
     e8a:	a6 1b       	sub	r26, r22
     e8c:	b7 0b       	sbc	r27, r23

00000e8e <__udivmodhi4_ep>:
     e8e:	88 1f       	adc	r24, r24
     e90:	99 1f       	adc	r25, r25
     e92:	5a 95       	dec	r21
     e94:	a9 f7       	brne	.-22     	; 0xe80 <__udivmodhi4_loop>
     e96:	80 95       	com	r24
     e98:	90 95       	com	r25
     e9a:	bc 01       	movw	r22, r24
     e9c:	cd 01       	movw	r24, r26
     e9e:	08 95       	ret

00000ea0 <__prologue_saves__>:
     ea0:	2f 92       	push	r2
     ea2:	3f 92       	push	r3
     ea4:	4f 92       	push	r4
     ea6:	5f 92       	push	r5
     ea8:	6f 92       	push	r6
     eaa:	7f 92       	push	r7
     eac:	8f 92       	push	r8
     eae:	9f 92       	push	r9
     eb0:	af 92       	push	r10
     eb2:	bf 92       	push	r11
     eb4:	cf 92       	push	r12
     eb6:	df 92       	push	r13
     eb8:	ef 92       	push	r14
     eba:	ff 92       	push	r15
     ebc:	0f 93       	push	r16
     ebe:	1f 93       	push	r17
     ec0:	cf 93       	push	r28
     ec2:	df 93       	push	r29
     ec4:	cd b7       	in	r28, 0x3d	; 61
     ec6:	de b7       	in	r29, 0x3e	; 62
     ec8:	ca 1b       	sub	r28, r26
     eca:	db 0b       	sbc	r29, r27
     ecc:	0f b6       	in	r0, 0x3f	; 63
     ece:	f8 94       	cli
     ed0:	de bf       	out	0x3e, r29	; 62
     ed2:	0f be       	out	0x3f, r0	; 63
     ed4:	cd bf       	out	0x3d, r28	; 61
     ed6:	09 94       	ijmp

00000ed8 <__epilogue_restores__>:
     ed8:	2a 88       	ldd	r2, Y+18	; 0x12
     eda:	39 88       	ldd	r3, Y+17	; 0x11
     edc:	48 88       	ldd	r4, Y+16	; 0x10
     ede:	5f 84       	ldd	r5, Y+15	; 0x0f
     ee0:	6e 84       	ldd	r6, Y+14	; 0x0e
     ee2:	7d 84       	ldd	r7, Y+13	; 0x0d
     ee4:	8c 84       	ldd	r8, Y+12	; 0x0c
     ee6:	9b 84       	ldd	r9, Y+11	; 0x0b
     ee8:	aa 84       	ldd	r10, Y+10	; 0x0a
     eea:	b9 84       	ldd	r11, Y+9	; 0x09
     eec:	c8 84       	ldd	r12, Y+8	; 0x08
     eee:	df 80       	ldd	r13, Y+7	; 0x07
     ef0:	ee 80       	ldd	r14, Y+6	; 0x06
     ef2:	fd 80       	ldd	r15, Y+5	; 0x05
     ef4:	0c 81       	ldd	r16, Y+4	; 0x04
     ef6:	1b 81       	ldd	r17, Y+3	; 0x03
     ef8:	aa 81       	ldd	r26, Y+2	; 0x02
     efa:	b9 81       	ldd	r27, Y+1	; 0x01
     efc:	ce 0f       	add	r28, r30
     efe:	d1 1d       	adc	r29, r1
     f00:	0f b6       	in	r0, 0x3f	; 63
     f02:	f8 94       	cli
     f04:	de bf       	out	0x3e, r29	; 62
     f06:	0f be       	out	0x3f, r0	; 63
     f08:	cd bf       	out	0x3d, r28	; 61
     f0a:	ed 01       	movw	r28, r26
     f0c:	08 95       	ret

00000f0e <do_rand>:
     f0e:	a0 e0       	ldi	r26, 0x00	; 0
     f10:	b0 e0       	ldi	r27, 0x00	; 0
     f12:	ec e8       	ldi	r30, 0x8C	; 140
     f14:	f7 e0       	ldi	r31, 0x07	; 7
     f16:	cc cf       	rjmp	.-104    	; 0xeb0 <__prologue_saves__+0x10>
     f18:	ec 01       	movw	r28, r24
     f1a:	a8 80       	ld	r10, Y
     f1c:	b9 80       	ldd	r11, Y+1	; 0x01
     f1e:	ca 80       	ldd	r12, Y+2	; 0x02
     f20:	db 80       	ldd	r13, Y+3	; 0x03
     f22:	a1 14       	cp	r10, r1
     f24:	b1 04       	cpc	r11, r1
     f26:	c1 04       	cpc	r12, r1
     f28:	d1 04       	cpc	r13, r1
     f2a:	41 f4       	brne	.+16     	; 0xf3c <do_rand+0x2e>
     f2c:	84 e2       	ldi	r24, 0x24	; 36
     f2e:	a8 2e       	mov	r10, r24
     f30:	89 ed       	ldi	r24, 0xD9	; 217
     f32:	b8 2e       	mov	r11, r24
     f34:	8b e5       	ldi	r24, 0x5B	; 91
     f36:	c8 2e       	mov	r12, r24
     f38:	87 e0       	ldi	r24, 0x07	; 7
     f3a:	d8 2e       	mov	r13, r24
     f3c:	c6 01       	movw	r24, r12
     f3e:	b5 01       	movw	r22, r10
     f40:	2d e1       	ldi	r18, 0x1D	; 29
     f42:	33 ef       	ldi	r19, 0xF3	; 243
     f44:	41 e0       	ldi	r20, 0x01	; 1
     f46:	50 e0       	ldi	r21, 0x00	; 0
     f48:	58 d0       	rcall	.+176    	; 0xffa <__divmodsi4>
     f4a:	27 ea       	ldi	r18, 0xA7	; 167
     f4c:	31 e4       	ldi	r19, 0x41	; 65
     f4e:	40 e0       	ldi	r20, 0x00	; 0
     f50:	50 e0       	ldi	r21, 0x00	; 0
     f52:	34 d0       	rcall	.+104    	; 0xfbc <__mulsi3>
     f54:	7b 01       	movw	r14, r22
     f56:	8c 01       	movw	r16, r24
     f58:	c6 01       	movw	r24, r12
     f5a:	b5 01       	movw	r22, r10
     f5c:	2d e1       	ldi	r18, 0x1D	; 29
     f5e:	33 ef       	ldi	r19, 0xF3	; 243
     f60:	41 e0       	ldi	r20, 0x01	; 1
     f62:	50 e0       	ldi	r21, 0x00	; 0
     f64:	4a d0       	rcall	.+148    	; 0xffa <__divmodsi4>
     f66:	ca 01       	movw	r24, r20
     f68:	b9 01       	movw	r22, r18
     f6a:	2c ee       	ldi	r18, 0xEC	; 236
     f6c:	34 ef       	ldi	r19, 0xF4	; 244
     f6e:	4f ef       	ldi	r20, 0xFF	; 255
     f70:	5f ef       	ldi	r21, 0xFF	; 255
     f72:	24 d0       	rcall	.+72     	; 0xfbc <__mulsi3>
     f74:	6e 0d       	add	r22, r14
     f76:	7f 1d       	adc	r23, r15
     f78:	80 1f       	adc	r24, r16
     f7a:	91 1f       	adc	r25, r17
     f7c:	97 ff       	sbrs	r25, 7
     f7e:	04 c0       	rjmp	.+8      	; 0xf88 <do_rand+0x7a>
     f80:	61 50       	subi	r22, 0x01	; 1
     f82:	70 40       	sbci	r23, 0x00	; 0
     f84:	80 40       	sbci	r24, 0x00	; 0
     f86:	90 48       	sbci	r25, 0x80	; 128
     f88:	68 83       	st	Y, r22
     f8a:	79 83       	std	Y+1, r23	; 0x01
     f8c:	8a 83       	std	Y+2, r24	; 0x02
     f8e:	9b 83       	std	Y+3, r25	; 0x03
     f90:	9b 01       	movw	r18, r22
     f92:	3f 77       	andi	r19, 0x7F	; 127
     f94:	c9 01       	movw	r24, r18
     f96:	cd b7       	in	r28, 0x3d	; 61
     f98:	de b7       	in	r29, 0x3e	; 62
     f9a:	ea e0       	ldi	r30, 0x0A	; 10
     f9c:	a5 cf       	rjmp	.-182    	; 0xee8 <__epilogue_restores__+0x10>

00000f9e <rand_r>:
     f9e:	b7 cf       	rjmp	.-146    	; 0xf0e <do_rand>

00000fa0 <rand>:
     fa0:	82 e8       	ldi	r24, 0x82	; 130
     fa2:	91 e0       	ldi	r25, 0x01	; 1
     fa4:	b4 cf       	rjmp	.-152    	; 0xf0e <do_rand>

00000fa6 <srand>:
     fa6:	a0 e0       	ldi	r26, 0x00	; 0
     fa8:	b0 e0       	ldi	r27, 0x00	; 0
     faa:	80 93 82 01 	sts	0x0182, r24
     fae:	90 93 83 01 	sts	0x0183, r25
     fb2:	a0 93 84 01 	sts	0x0184, r26
     fb6:	b0 93 85 01 	sts	0x0185, r27
     fba:	08 95       	ret

00000fbc <__mulsi3>:
     fbc:	62 9f       	mul	r22, r18
     fbe:	d0 01       	movw	r26, r0
     fc0:	73 9f       	mul	r23, r19
     fc2:	f0 01       	movw	r30, r0
     fc4:	82 9f       	mul	r24, r18
     fc6:	e0 0d       	add	r30, r0
     fc8:	f1 1d       	adc	r31, r1
     fca:	64 9f       	mul	r22, r20
     fcc:	e0 0d       	add	r30, r0
     fce:	f1 1d       	adc	r31, r1
     fd0:	92 9f       	mul	r25, r18
     fd2:	f0 0d       	add	r31, r0
     fd4:	83 9f       	mul	r24, r19
     fd6:	f0 0d       	add	r31, r0
     fd8:	74 9f       	mul	r23, r20
     fda:	f0 0d       	add	r31, r0
     fdc:	65 9f       	mul	r22, r21
     fde:	f0 0d       	add	r31, r0
     fe0:	99 27       	eor	r25, r25
     fe2:	72 9f       	mul	r23, r18
     fe4:	b0 0d       	add	r27, r0
     fe6:	e1 1d       	adc	r30, r1
     fe8:	f9 1f       	adc	r31, r25
     fea:	63 9f       	mul	r22, r19
     fec:	b0 0d       	add	r27, r0
     fee:	e1 1d       	adc	r30, r1
     ff0:	f9 1f       	adc	r31, r25
     ff2:	bd 01       	movw	r22, r26
     ff4:	cf 01       	movw	r24, r30
     ff6:	11 24       	eor	r1, r1
     ff8:	08 95       	ret

00000ffa <__divmodsi4>:
     ffa:	97 fb       	bst	r25, 7
     ffc:	09 2e       	mov	r0, r25
     ffe:	05 26       	eor	r0, r21
    1000:	0e d0       	rcall	.+28     	; 0x101e <__divmodsi4_neg1>
    1002:	57 fd       	sbrc	r21, 7
    1004:	04 d0       	rcall	.+8      	; 0x100e <__divmodsi4_neg2>
    1006:	14 d0       	rcall	.+40     	; 0x1030 <__udivmodsi4>
    1008:	0a d0       	rcall	.+20     	; 0x101e <__divmodsi4_neg1>
    100a:	00 1c       	adc	r0, r0
    100c:	38 f4       	brcc	.+14     	; 0x101c <__divmodsi4_exit>

0000100e <__divmodsi4_neg2>:
    100e:	50 95       	com	r21
    1010:	40 95       	com	r20
    1012:	30 95       	com	r19
    1014:	21 95       	neg	r18
    1016:	3f 4f       	sbci	r19, 0xFF	; 255
    1018:	4f 4f       	sbci	r20, 0xFF	; 255
    101a:	5f 4f       	sbci	r21, 0xFF	; 255

0000101c <__divmodsi4_exit>:
    101c:	08 95       	ret

0000101e <__divmodsi4_neg1>:
    101e:	f6 f7       	brtc	.-4      	; 0x101c <__divmodsi4_exit>
    1020:	90 95       	com	r25
    1022:	80 95       	com	r24
    1024:	70 95       	com	r23
    1026:	61 95       	neg	r22
    1028:	7f 4f       	sbci	r23, 0xFF	; 255
    102a:	8f 4f       	sbci	r24, 0xFF	; 255
    102c:	9f 4f       	sbci	r25, 0xFF	; 255
    102e:	08 95       	ret

00001030 <__udivmodsi4>:
    1030:	a1 e2       	ldi	r26, 0x21	; 33
    1032:	1a 2e       	mov	r1, r26
    1034:	aa 1b       	sub	r26, r26
    1036:	bb 1b       	sub	r27, r27
    1038:	fd 01       	movw	r30, r26
    103a:	0d c0       	rjmp	.+26     	; 0x1056 <__udivmodsi4_ep>

0000103c <__udivmodsi4_loop>:
    103c:	aa 1f       	adc	r26, r26
    103e:	bb 1f       	adc	r27, r27
    1040:	ee 1f       	adc	r30, r30
    1042:	ff 1f       	adc	r31, r31
    1044:	a2 17       	cp	r26, r18
    1046:	b3 07       	cpc	r27, r19
    1048:	e4 07       	cpc	r30, r20
    104a:	f5 07       	cpc	r31, r21
    104c:	20 f0       	brcs	.+8      	; 0x1056 <__udivmodsi4_ep>
    104e:	a2 1b       	sub	r26, r18
    1050:	b3 0b       	sbc	r27, r19
    1052:	e4 0b       	sbc	r30, r20
    1054:	f5 0b       	sbc	r31, r21

00001056 <__udivmodsi4_ep>:
    1056:	66 1f       	adc	r22, r22
    1058:	77 1f       	adc	r23, r23
    105a:	88 1f       	adc	r24, r24
    105c:	99 1f       	adc	r25, r25
    105e:	1a 94       	dec	r1
    1060:	69 f7       	brne	.-38     	; 0x103c <__udivmodsi4_loop>
    1062:	60 95       	com	r22
    1064:	70 95       	com	r23
    1066:	80 95       	com	r24
    1068:	90 95       	com	r25
    106a:	9b 01       	movw	r18, r22
    106c:	ac 01       	movw	r20, r24
    106e:	bd 01       	movw	r22, r26
    1070:	cf 01       	movw	r24, r30
    1072:	08 95       	ret

00001074 <_exit>:
    1074:	f8 94       	cli

00001076 <__stop_program>:
    1076:	ff cf       	rjmp	.-2      	; 0x1076 <__stop_program>
