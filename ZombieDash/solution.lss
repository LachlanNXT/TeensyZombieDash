
solution.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000068  00800100  00001e48  00001edc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001e48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000220  00800168  00800168  00001f44  2**0
                  ALLOC
  3 .debug_aranges 000001f0  00000000  00000000  00001f44  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000040e  00000000  00000000  00002134  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002109  00000000  00000000  00002542  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000efd  00000000  00000000  0000464b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001772  00000000  00000000  00005548  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002a0  00000000  00000000  00006cbc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000650  00000000  00000000  00006f5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000fd2  00000000  00000000  000075ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001d8  00000000  00000000  0000857e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c1       	rjmp	.+650    	; 0x28c <__ctors_end>
       2:	00 00       	nop
       4:	5f c1       	rjmp	.+702    	; 0x2c4 <__bad_interrupt>
       6:	00 00       	nop
       8:	5d c1       	rjmp	.+698    	; 0x2c4 <__bad_interrupt>
       a:	00 00       	nop
       c:	5b c1       	rjmp	.+694    	; 0x2c4 <__bad_interrupt>
       e:	00 00       	nop
      10:	59 c1       	rjmp	.+690    	; 0x2c4 <__bad_interrupt>
      12:	00 00       	nop
      14:	57 c1       	rjmp	.+686    	; 0x2c4 <__bad_interrupt>
      16:	00 00       	nop
      18:	55 c1       	rjmp	.+682    	; 0x2c4 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	53 c1       	rjmp	.+678    	; 0x2c4 <__bad_interrupt>
      1e:	00 00       	nop
      20:	51 c1       	rjmp	.+674    	; 0x2c4 <__bad_interrupt>
      22:	00 00       	nop
      24:	fc c4       	rjmp	.+2552   	; 0xa1e <__vector_9>
      26:	00 00       	nop
      28:	4d c1       	rjmp	.+666    	; 0x2c4 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4b c1       	rjmp	.+662    	; 0x2c4 <__bad_interrupt>
      2e:	00 00       	nop
      30:	49 c1       	rjmp	.+658    	; 0x2c4 <__bad_interrupt>
      32:	00 00       	nop
      34:	47 c1       	rjmp	.+654    	; 0x2c4 <__bad_interrupt>
      36:	00 00       	nop
      38:	45 c1       	rjmp	.+650    	; 0x2c4 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	43 c1       	rjmp	.+646    	; 0x2c4 <__bad_interrupt>
      3e:	00 00       	nop
      40:	41 c1       	rjmp	.+642    	; 0x2c4 <__bad_interrupt>
      42:	00 00       	nop
      44:	3f c1       	rjmp	.+638    	; 0x2c4 <__bad_interrupt>
      46:	00 00       	nop
      48:	3d c1       	rjmp	.+634    	; 0x2c4 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3b c1       	rjmp	.+630    	; 0x2c4 <__bad_interrupt>
      4e:	00 00       	nop
      50:	39 c1       	rjmp	.+626    	; 0x2c4 <__bad_interrupt>
      52:	00 00       	nop
      54:	37 c1       	rjmp	.+622    	; 0x2c4 <__bad_interrupt>
      56:	00 00       	nop
      58:	35 c1       	rjmp	.+618    	; 0x2c4 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	ed c5       	rjmp	.+3034   	; 0xc38 <__vector_23>
      5e:	00 00       	nop
      60:	31 c1       	rjmp	.+610    	; 0x2c4 <__bad_interrupt>
      62:	00 00       	nop
      64:	2f c1       	rjmp	.+606    	; 0x2c4 <__bad_interrupt>
      66:	00 00       	nop
      68:	2d c1       	rjmp	.+602    	; 0x2c4 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2b c1       	rjmp	.+598    	; 0x2c4 <__bad_interrupt>
      6e:	00 00       	nop
      70:	29 c1       	rjmp	.+594    	; 0x2c4 <__bad_interrupt>
      72:	00 00       	nop
      74:	27 c1       	rjmp	.+590    	; 0x2c4 <__bad_interrupt>
      76:	00 00       	nop
      78:	25 c1       	rjmp	.+586    	; 0x2c4 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	23 c1       	rjmp	.+582    	; 0x2c4 <__bad_interrupt>
      7e:	00 00       	nop
      80:	21 c1       	rjmp	.+578    	; 0x2c4 <__bad_interrupt>
      82:	00 00       	nop
      84:	1f c1       	rjmp	.+574    	; 0x2c4 <__bad_interrupt>
      86:	00 00       	nop
      88:	1d c1       	rjmp	.+570    	; 0x2c4 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	1b c1       	rjmp	.+566    	; 0x2c4 <__bad_interrupt>
      8e:	00 00       	nop
      90:	19 c1       	rjmp	.+562    	; 0x2c4 <__bad_interrupt>
      92:	00 00       	nop
      94:	17 c1       	rjmp	.+558    	; 0x2c4 <__bad_interrupt>
      96:	00 00       	nop
      98:	15 c1       	rjmp	.+554    	; 0x2c4 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	13 c1       	rjmp	.+550    	; 0x2c4 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	11 c1       	rjmp	.+546    	; 0x2c4 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	0f c1       	rjmp	.+542    	; 0x2c4 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0d c1       	rjmp	.+538    	; 0x2c4 <__bad_interrupt>
      aa:	00 00       	nop

000000ac <ASCII>:
      ac:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      bc:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      cc:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      dc:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      ec:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      fc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     10c:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     11c:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     12c:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     13c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     14c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     15c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     16c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     17c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     18c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     19c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     1ac:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1bc:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1cc:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1dc:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1ec:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1fc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     20c:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     21c:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     22c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     23c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     24c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     25c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     26c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     27c:	00 00 41 36 08 00 10 08 08 10 08 78 46 41 46 78     ..A6.......xFAFx

0000028c <__ctors_end>:
     28c:	11 24       	eor	r1, r1
     28e:	1f be       	out	0x3f, r1	; 63
     290:	cf ef       	ldi	r28, 0xFF	; 255
     292:	da e0       	ldi	r29, 0x0A	; 10
     294:	de bf       	out	0x3e, r29	; 62
     296:	cd bf       	out	0x3d, r28	; 61

00000298 <__do_copy_data>:
     298:	11 e0       	ldi	r17, 0x01	; 1
     29a:	a0 e0       	ldi	r26, 0x00	; 0
     29c:	b1 e0       	ldi	r27, 0x01	; 1
     29e:	e8 e4       	ldi	r30, 0x48	; 72
     2a0:	fe e1       	ldi	r31, 0x1E	; 30
     2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <.do_copy_data_start>

000002a4 <.do_copy_data_loop>:
     2a4:	05 90       	lpm	r0, Z+
     2a6:	0d 92       	st	X+, r0

000002a8 <.do_copy_data_start>:
     2a8:	a8 36       	cpi	r26, 0x68	; 104
     2aa:	b1 07       	cpc	r27, r17
     2ac:	d9 f7       	brne	.-10     	; 0x2a4 <.do_copy_data_loop>

000002ae <__do_clear_bss>:
     2ae:	13 e0       	ldi	r17, 0x03	; 3
     2b0:	a8 e6       	ldi	r26, 0x68	; 104
     2b2:	b1 e0       	ldi	r27, 0x01	; 1
     2b4:	01 c0       	rjmp	.+2      	; 0x2b8 <.do_clear_bss_start>

000002b6 <.do_clear_bss_loop>:
     2b6:	1d 92       	st	X+, r1

000002b8 <.do_clear_bss_start>:
     2b8:	a8 38       	cpi	r26, 0x88	; 136
     2ba:	b1 07       	cpc	r27, r17
     2bc:	e1 f7       	brne	.-8      	; 0x2b6 <.do_clear_bss_loop>
     2be:	a7 d5       	rcall	.+2894   	; 0xe0e <main>
     2c0:	0c 94 22 0f 	jmp	0x1e44	; 0x1e44 <_exit>

000002c4 <__bad_interrupt>:
     2c4:	9d ce       	rjmp	.-710    	; 0x0 <__vectors>

000002c6 <__fixunssfsi>:
     2c6:	ef 92       	push	r14
     2c8:	ff 92       	push	r15
     2ca:	0f 93       	push	r16
     2cc:	1f 93       	push	r17
     2ce:	7b 01       	movw	r14, r22
     2d0:	8c 01       	movw	r16, r24
     2d2:	20 e0       	ldi	r18, 0x00	; 0
     2d4:	30 e0       	ldi	r19, 0x00	; 0
     2d6:	40 e0       	ldi	r20, 0x00	; 0
     2d8:	5f e4       	ldi	r21, 0x4F	; 79
     2da:	0e 94 27 0a 	call	0x144e	; 0x144e <__gesf2>
     2de:	88 23       	and	r24, r24
     2e0:	7c f0       	brlt	.+30     	; 0x300 <__fixunssfsi+0x3a>
     2e2:	c8 01       	movw	r24, r16
     2e4:	b7 01       	movw	r22, r14
     2e6:	20 e0       	ldi	r18, 0x00	; 0
     2e8:	30 e0       	ldi	r19, 0x00	; 0
     2ea:	40 e0       	ldi	r20, 0x00	; 0
     2ec:	5f e4       	ldi	r21, 0x4F	; 79
     2ee:	94 d7       	rcall	.+3880   	; 0x1218 <__subsf3>
     2f0:	b3 d1       	rcall	.+870    	; 0x658 <__fixsfsi>
     2f2:	9b 01       	movw	r18, r22
     2f4:	ac 01       	movw	r20, r24
     2f6:	20 50       	subi	r18, 0x00	; 0
     2f8:	30 40       	sbci	r19, 0x00	; 0
     2fa:	40 40       	sbci	r20, 0x00	; 0
     2fc:	50 48       	sbci	r21, 0x80	; 128
     2fe:	05 c0       	rjmp	.+10     	; 0x30a <__fixunssfsi+0x44>
     300:	c8 01       	movw	r24, r16
     302:	b7 01       	movw	r22, r14
     304:	a9 d1       	rcall	.+850    	; 0x658 <__fixsfsi>
     306:	9b 01       	movw	r18, r22
     308:	ac 01       	movw	r20, r24
     30a:	b9 01       	movw	r22, r18
     30c:	ca 01       	movw	r24, r20
     30e:	1f 91       	pop	r17
     310:	0f 91       	pop	r16
     312:	ff 90       	pop	r15
     314:	ef 90       	pop	r14
     316:	08 95       	ret

00000318 <__mulsf3>:
     318:	a0 e2       	ldi	r26, 0x20	; 32
     31a:	b0 e0       	ldi	r27, 0x00	; 0
     31c:	e2 e9       	ldi	r30, 0x92	; 146
     31e:	f1 e0       	ldi	r31, 0x01	; 1
     320:	0c 94 38 0e 	jmp	0x1c70	; 0x1c70 <__prologue_saves__>
     324:	69 83       	std	Y+1, r22	; 0x01
     326:	7a 83       	std	Y+2, r23	; 0x02
     328:	8b 83       	std	Y+3, r24	; 0x03
     32a:	9c 83       	std	Y+4, r25	; 0x04
     32c:	2d 83       	std	Y+5, r18	; 0x05
     32e:	3e 83       	std	Y+6, r19	; 0x06
     330:	4f 83       	std	Y+7, r20	; 0x07
     332:	58 87       	std	Y+8, r21	; 0x08
     334:	ce 01       	movw	r24, r28
     336:	01 96       	adiw	r24, 0x01	; 1
     338:	be 01       	movw	r22, r28
     33a:	67 5f       	subi	r22, 0xF7	; 247
     33c:	7f 4f       	sbci	r23, 0xFF	; 255
     33e:	b4 d2       	rcall	.+1384   	; 0x8a8 <__unpack_f>
     340:	ce 01       	movw	r24, r28
     342:	05 96       	adiw	r24, 0x05	; 5
     344:	be 01       	movw	r22, r28
     346:	6f 5e       	subi	r22, 0xEF	; 239
     348:	7f 4f       	sbci	r23, 0xFF	; 255
     34a:	ae d2       	rcall	.+1372   	; 0x8a8 <__unpack_f>
     34c:	99 85       	ldd	r25, Y+9	; 0x09
     34e:	92 30       	cpi	r25, 0x02	; 2
     350:	88 f0       	brcs	.+34     	; 0x374 <__mulsf3+0x5c>
     352:	89 89       	ldd	r24, Y+17	; 0x11
     354:	82 30       	cpi	r24, 0x02	; 2
     356:	c8 f0       	brcs	.+50     	; 0x38a <__mulsf3+0x72>
     358:	94 30       	cpi	r25, 0x04	; 4
     35a:	19 f4       	brne	.+6      	; 0x362 <__mulsf3+0x4a>
     35c:	82 30       	cpi	r24, 0x02	; 2
     35e:	51 f4       	brne	.+20     	; 0x374 <__mulsf3+0x5c>
     360:	04 c0       	rjmp	.+8      	; 0x36a <__mulsf3+0x52>
     362:	84 30       	cpi	r24, 0x04	; 4
     364:	29 f4       	brne	.+10     	; 0x370 <__mulsf3+0x58>
     366:	92 30       	cpi	r25, 0x02	; 2
     368:	81 f4       	brne	.+32     	; 0x38a <__mulsf3+0x72>
     36a:	8c e5       	ldi	r24, 0x5C	; 92
     36c:	91 e0       	ldi	r25, 0x01	; 1
     36e:	c6 c0       	rjmp	.+396    	; 0x4fc <__mulsf3+0x1e4>
     370:	92 30       	cpi	r25, 0x02	; 2
     372:	49 f4       	brne	.+18     	; 0x386 <__mulsf3+0x6e>
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	9a 85       	ldd	r25, Y+10	; 0x0a
     378:	8a 89       	ldd	r24, Y+18	; 0x12
     37a:	98 13       	cpse	r25, r24
     37c:	21 e0       	ldi	r18, 0x01	; 1
     37e:	2a 87       	std	Y+10, r18	; 0x0a
     380:	ce 01       	movw	r24, r28
     382:	09 96       	adiw	r24, 0x09	; 9
     384:	bb c0       	rjmp	.+374    	; 0x4fc <__mulsf3+0x1e4>
     386:	82 30       	cpi	r24, 0x02	; 2
     388:	49 f4       	brne	.+18     	; 0x39c <__mulsf3+0x84>
     38a:	20 e0       	ldi	r18, 0x00	; 0
     38c:	9a 85       	ldd	r25, Y+10	; 0x0a
     38e:	8a 89       	ldd	r24, Y+18	; 0x12
     390:	98 13       	cpse	r25, r24
     392:	21 e0       	ldi	r18, 0x01	; 1
     394:	2a 8b       	std	Y+18, r18	; 0x12
     396:	ce 01       	movw	r24, r28
     398:	41 96       	adiw	r24, 0x11	; 17
     39a:	b0 c0       	rjmp	.+352    	; 0x4fc <__mulsf3+0x1e4>
     39c:	2d 84       	ldd	r2, Y+13	; 0x0d
     39e:	3e 84       	ldd	r3, Y+14	; 0x0e
     3a0:	4f 84       	ldd	r4, Y+15	; 0x0f
     3a2:	58 88       	ldd	r5, Y+16	; 0x10
     3a4:	6d 88       	ldd	r6, Y+21	; 0x15
     3a6:	7e 88       	ldd	r7, Y+22	; 0x16
     3a8:	8f 88       	ldd	r8, Y+23	; 0x17
     3aa:	98 8c       	ldd	r9, Y+24	; 0x18
     3ac:	ee 24       	eor	r14, r14
     3ae:	ff 24       	eor	r15, r15
     3b0:	87 01       	movw	r16, r14
     3b2:	aa 24       	eor	r10, r10
     3b4:	bb 24       	eor	r11, r11
     3b6:	65 01       	movw	r12, r10
     3b8:	40 e0       	ldi	r20, 0x00	; 0
     3ba:	50 e0       	ldi	r21, 0x00	; 0
     3bc:	60 e0       	ldi	r22, 0x00	; 0
     3be:	70 e0       	ldi	r23, 0x00	; 0
     3c0:	e0 e0       	ldi	r30, 0x00	; 0
     3c2:	f0 e0       	ldi	r31, 0x00	; 0
     3c4:	c1 01       	movw	r24, r2
     3c6:	81 70       	andi	r24, 0x01	; 1
     3c8:	90 70       	andi	r25, 0x00	; 0
     3ca:	89 2b       	or	r24, r25
     3cc:	e9 f0       	breq	.+58     	; 0x408 <__mulsf3+0xf0>
     3ce:	e6 0c       	add	r14, r6
     3d0:	f7 1c       	adc	r15, r7
     3d2:	08 1d       	adc	r16, r8
     3d4:	19 1d       	adc	r17, r9
     3d6:	9a 01       	movw	r18, r20
     3d8:	ab 01       	movw	r20, r22
     3da:	2a 0d       	add	r18, r10
     3dc:	3b 1d       	adc	r19, r11
     3de:	4c 1d       	adc	r20, r12
     3e0:	5d 1d       	adc	r21, r13
     3e2:	80 e0       	ldi	r24, 0x00	; 0
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	a0 e0       	ldi	r26, 0x00	; 0
     3e8:	b0 e0       	ldi	r27, 0x00	; 0
     3ea:	e6 14       	cp	r14, r6
     3ec:	f7 04       	cpc	r15, r7
     3ee:	08 05       	cpc	r16, r8
     3f0:	19 05       	cpc	r17, r9
     3f2:	20 f4       	brcc	.+8      	; 0x3fc <__mulsf3+0xe4>
     3f4:	81 e0       	ldi	r24, 0x01	; 1
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	a0 e0       	ldi	r26, 0x00	; 0
     3fa:	b0 e0       	ldi	r27, 0x00	; 0
     3fc:	ba 01       	movw	r22, r20
     3fe:	a9 01       	movw	r20, r18
     400:	48 0f       	add	r20, r24
     402:	59 1f       	adc	r21, r25
     404:	6a 1f       	adc	r22, r26
     406:	7b 1f       	adc	r23, r27
     408:	aa 0c       	add	r10, r10
     40a:	bb 1c       	adc	r11, r11
     40c:	cc 1c       	adc	r12, r12
     40e:	dd 1c       	adc	r13, r13
     410:	97 fe       	sbrs	r9, 7
     412:	08 c0       	rjmp	.+16     	; 0x424 <__mulsf3+0x10c>
     414:	81 e0       	ldi	r24, 0x01	; 1
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	a0 e0       	ldi	r26, 0x00	; 0
     41a:	b0 e0       	ldi	r27, 0x00	; 0
     41c:	a8 2a       	or	r10, r24
     41e:	b9 2a       	or	r11, r25
     420:	ca 2a       	or	r12, r26
     422:	db 2a       	or	r13, r27
     424:	31 96       	adiw	r30, 0x01	; 1
     426:	e0 32       	cpi	r30, 0x20	; 32
     428:	f1 05       	cpc	r31, r1
     42a:	49 f0       	breq	.+18     	; 0x43e <__mulsf3+0x126>
     42c:	66 0c       	add	r6, r6
     42e:	77 1c       	adc	r7, r7
     430:	88 1c       	adc	r8, r8
     432:	99 1c       	adc	r9, r9
     434:	56 94       	lsr	r5
     436:	47 94       	ror	r4
     438:	37 94       	ror	r3
     43a:	27 94       	ror	r2
     43c:	c3 cf       	rjmp	.-122    	; 0x3c4 <__mulsf3+0xac>
     43e:	fa 85       	ldd	r31, Y+10	; 0x0a
     440:	ea 89       	ldd	r30, Y+18	; 0x12
     442:	2b 89       	ldd	r18, Y+19	; 0x13
     444:	3c 89       	ldd	r19, Y+20	; 0x14
     446:	8b 85       	ldd	r24, Y+11	; 0x0b
     448:	9c 85       	ldd	r25, Y+12	; 0x0c
     44a:	28 0f       	add	r18, r24
     44c:	39 1f       	adc	r19, r25
     44e:	2e 5f       	subi	r18, 0xFE	; 254
     450:	3f 4f       	sbci	r19, 0xFF	; 255
     452:	17 c0       	rjmp	.+46     	; 0x482 <__mulsf3+0x16a>
     454:	ca 01       	movw	r24, r20
     456:	81 70       	andi	r24, 0x01	; 1
     458:	90 70       	andi	r25, 0x00	; 0
     45a:	89 2b       	or	r24, r25
     45c:	61 f0       	breq	.+24     	; 0x476 <__mulsf3+0x15e>
     45e:	16 95       	lsr	r17
     460:	07 95       	ror	r16
     462:	f7 94       	ror	r15
     464:	e7 94       	ror	r14
     466:	80 e0       	ldi	r24, 0x00	; 0
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	a0 e0       	ldi	r26, 0x00	; 0
     46c:	b0 e8       	ldi	r27, 0x80	; 128
     46e:	e8 2a       	or	r14, r24
     470:	f9 2a       	or	r15, r25
     472:	0a 2b       	or	r16, r26
     474:	1b 2b       	or	r17, r27
     476:	76 95       	lsr	r23
     478:	67 95       	ror	r22
     47a:	57 95       	ror	r21
     47c:	47 95       	ror	r20
     47e:	2f 5f       	subi	r18, 0xFF	; 255
     480:	3f 4f       	sbci	r19, 0xFF	; 255
     482:	77 fd       	sbrc	r23, 7
     484:	e7 cf       	rjmp	.-50     	; 0x454 <__mulsf3+0x13c>
     486:	0c c0       	rjmp	.+24     	; 0x4a0 <__mulsf3+0x188>
     488:	44 0f       	add	r20, r20
     48a:	55 1f       	adc	r21, r21
     48c:	66 1f       	adc	r22, r22
     48e:	77 1f       	adc	r23, r23
     490:	17 fd       	sbrc	r17, 7
     492:	41 60       	ori	r20, 0x01	; 1
     494:	ee 0c       	add	r14, r14
     496:	ff 1c       	adc	r15, r15
     498:	00 1f       	adc	r16, r16
     49a:	11 1f       	adc	r17, r17
     49c:	21 50       	subi	r18, 0x01	; 1
     49e:	30 40       	sbci	r19, 0x00	; 0
     4a0:	40 30       	cpi	r20, 0x00	; 0
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	59 07       	cpc	r21, r25
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	69 07       	cpc	r22, r25
     4aa:	90 e4       	ldi	r25, 0x40	; 64
     4ac:	79 07       	cpc	r23, r25
     4ae:	60 f3       	brcs	.-40     	; 0x488 <__mulsf3+0x170>
     4b0:	2b 8f       	std	Y+27, r18	; 0x1b
     4b2:	3c 8f       	std	Y+28, r19	; 0x1c
     4b4:	db 01       	movw	r26, r22
     4b6:	ca 01       	movw	r24, r20
     4b8:	8f 77       	andi	r24, 0x7F	; 127
     4ba:	90 70       	andi	r25, 0x00	; 0
     4bc:	a0 70       	andi	r26, 0x00	; 0
     4be:	b0 70       	andi	r27, 0x00	; 0
     4c0:	80 34       	cpi	r24, 0x40	; 64
     4c2:	91 05       	cpc	r25, r1
     4c4:	a1 05       	cpc	r26, r1
     4c6:	b1 05       	cpc	r27, r1
     4c8:	61 f4       	brne	.+24     	; 0x4e2 <__mulsf3+0x1ca>
     4ca:	47 fd       	sbrc	r20, 7
     4cc:	0a c0       	rjmp	.+20     	; 0x4e2 <__mulsf3+0x1ca>
     4ce:	e1 14       	cp	r14, r1
     4d0:	f1 04       	cpc	r15, r1
     4d2:	01 05       	cpc	r16, r1
     4d4:	11 05       	cpc	r17, r1
     4d6:	29 f0       	breq	.+10     	; 0x4e2 <__mulsf3+0x1ca>
     4d8:	40 5c       	subi	r20, 0xC0	; 192
     4da:	5f 4f       	sbci	r21, 0xFF	; 255
     4dc:	6f 4f       	sbci	r22, 0xFF	; 255
     4de:	7f 4f       	sbci	r23, 0xFF	; 255
     4e0:	40 78       	andi	r20, 0x80	; 128
     4e2:	1a 8e       	std	Y+26, r1	; 0x1a
     4e4:	fe 17       	cp	r31, r30
     4e6:	11 f0       	breq	.+4      	; 0x4ec <__mulsf3+0x1d4>
     4e8:	81 e0       	ldi	r24, 0x01	; 1
     4ea:	8a 8f       	std	Y+26, r24	; 0x1a
     4ec:	4d 8f       	std	Y+29, r20	; 0x1d
     4ee:	5e 8f       	std	Y+30, r21	; 0x1e
     4f0:	6f 8f       	std	Y+31, r22	; 0x1f
     4f2:	78 a3       	std	Y+32, r23	; 0x20
     4f4:	83 e0       	ldi	r24, 0x03	; 3
     4f6:	89 8f       	std	Y+25, r24	; 0x19
     4f8:	ce 01       	movw	r24, r28
     4fa:	49 96       	adiw	r24, 0x19	; 25
     4fc:	00 d1       	rcall	.+512    	; 0x6fe <__pack_f>
     4fe:	a0 96       	adiw	r28, 0x20	; 32
     500:	e2 e1       	ldi	r30, 0x12	; 18
     502:	0c 94 54 0e 	jmp	0x1ca8	; 0x1ca8 <__epilogue_restores__>

00000506 <__divsf3>:
     506:	a8 e1       	ldi	r26, 0x18	; 24
     508:	b0 e0       	ldi	r27, 0x00	; 0
     50a:	e9 e8       	ldi	r30, 0x89	; 137
     50c:	f2 e0       	ldi	r31, 0x02	; 2
     50e:	0c 94 40 0e 	jmp	0x1c80	; 0x1c80 <__prologue_saves__+0x10>
     512:	69 83       	std	Y+1, r22	; 0x01
     514:	7a 83       	std	Y+2, r23	; 0x02
     516:	8b 83       	std	Y+3, r24	; 0x03
     518:	9c 83       	std	Y+4, r25	; 0x04
     51a:	2d 83       	std	Y+5, r18	; 0x05
     51c:	3e 83       	std	Y+6, r19	; 0x06
     51e:	4f 83       	std	Y+7, r20	; 0x07
     520:	58 87       	std	Y+8, r21	; 0x08
     522:	b9 e0       	ldi	r27, 0x09	; 9
     524:	eb 2e       	mov	r14, r27
     526:	f1 2c       	mov	r15, r1
     528:	ec 0e       	add	r14, r28
     52a:	fd 1e       	adc	r15, r29
     52c:	ce 01       	movw	r24, r28
     52e:	01 96       	adiw	r24, 0x01	; 1
     530:	b7 01       	movw	r22, r14
     532:	ba d1       	rcall	.+884    	; 0x8a8 <__unpack_f>
     534:	8e 01       	movw	r16, r28
     536:	0f 5e       	subi	r16, 0xEF	; 239
     538:	1f 4f       	sbci	r17, 0xFF	; 255
     53a:	ce 01       	movw	r24, r28
     53c:	05 96       	adiw	r24, 0x05	; 5
     53e:	b8 01       	movw	r22, r16
     540:	b3 d1       	rcall	.+870    	; 0x8a8 <__unpack_f>
     542:	29 85       	ldd	r18, Y+9	; 0x09
     544:	22 30       	cpi	r18, 0x02	; 2
     546:	08 f4       	brcc	.+2      	; 0x54a <__divsf3+0x44>
     548:	7e c0       	rjmp	.+252    	; 0x646 <__divsf3+0x140>
     54a:	39 89       	ldd	r19, Y+17	; 0x11
     54c:	32 30       	cpi	r19, 0x02	; 2
     54e:	10 f4       	brcc	.+4      	; 0x554 <__divsf3+0x4e>
     550:	b8 01       	movw	r22, r16
     552:	7c c0       	rjmp	.+248    	; 0x64c <__divsf3+0x146>
     554:	8a 85       	ldd	r24, Y+10	; 0x0a
     556:	9a 89       	ldd	r25, Y+18	; 0x12
     558:	89 27       	eor	r24, r25
     55a:	8a 87       	std	Y+10, r24	; 0x0a
     55c:	24 30       	cpi	r18, 0x04	; 4
     55e:	11 f0       	breq	.+4      	; 0x564 <__divsf3+0x5e>
     560:	22 30       	cpi	r18, 0x02	; 2
     562:	31 f4       	brne	.+12     	; 0x570 <__divsf3+0x6a>
     564:	23 17       	cp	r18, r19
     566:	09 f0       	breq	.+2      	; 0x56a <__divsf3+0x64>
     568:	6e c0       	rjmp	.+220    	; 0x646 <__divsf3+0x140>
     56a:	6c e5       	ldi	r22, 0x5C	; 92
     56c:	71 e0       	ldi	r23, 0x01	; 1
     56e:	6e c0       	rjmp	.+220    	; 0x64c <__divsf3+0x146>
     570:	34 30       	cpi	r19, 0x04	; 4
     572:	39 f4       	brne	.+14     	; 0x582 <__divsf3+0x7c>
     574:	1d 86       	std	Y+13, r1	; 0x0d
     576:	1e 86       	std	Y+14, r1	; 0x0e
     578:	1f 86       	std	Y+15, r1	; 0x0f
     57a:	18 8a       	std	Y+16, r1	; 0x10
     57c:	1c 86       	std	Y+12, r1	; 0x0c
     57e:	1b 86       	std	Y+11, r1	; 0x0b
     580:	04 c0       	rjmp	.+8      	; 0x58a <__divsf3+0x84>
     582:	32 30       	cpi	r19, 0x02	; 2
     584:	21 f4       	brne	.+8      	; 0x58e <__divsf3+0x88>
     586:	84 e0       	ldi	r24, 0x04	; 4
     588:	89 87       	std	Y+9, r24	; 0x09
     58a:	b7 01       	movw	r22, r14
     58c:	5f c0       	rjmp	.+190    	; 0x64c <__divsf3+0x146>
     58e:	2b 85       	ldd	r18, Y+11	; 0x0b
     590:	3c 85       	ldd	r19, Y+12	; 0x0c
     592:	8b 89       	ldd	r24, Y+19	; 0x13
     594:	9c 89       	ldd	r25, Y+20	; 0x14
     596:	28 1b       	sub	r18, r24
     598:	39 0b       	sbc	r19, r25
     59a:	3c 87       	std	Y+12, r19	; 0x0c
     59c:	2b 87       	std	Y+11, r18	; 0x0b
     59e:	ed 84       	ldd	r14, Y+13	; 0x0d
     5a0:	fe 84       	ldd	r15, Y+14	; 0x0e
     5a2:	0f 85       	ldd	r16, Y+15	; 0x0f
     5a4:	18 89       	ldd	r17, Y+16	; 0x10
     5a6:	ad 88       	ldd	r10, Y+21	; 0x15
     5a8:	be 88       	ldd	r11, Y+22	; 0x16
     5aa:	cf 88       	ldd	r12, Y+23	; 0x17
     5ac:	d8 8c       	ldd	r13, Y+24	; 0x18
     5ae:	ea 14       	cp	r14, r10
     5b0:	fb 04       	cpc	r15, r11
     5b2:	0c 05       	cpc	r16, r12
     5b4:	1d 05       	cpc	r17, r13
     5b6:	40 f4       	brcc	.+16     	; 0x5c8 <__divsf3+0xc2>
     5b8:	ee 0c       	add	r14, r14
     5ba:	ff 1c       	adc	r15, r15
     5bc:	00 1f       	adc	r16, r16
     5be:	11 1f       	adc	r17, r17
     5c0:	21 50       	subi	r18, 0x01	; 1
     5c2:	30 40       	sbci	r19, 0x00	; 0
     5c4:	3c 87       	std	Y+12, r19	; 0x0c
     5c6:	2b 87       	std	Y+11, r18	; 0x0b
     5c8:	20 e0       	ldi	r18, 0x00	; 0
     5ca:	30 e0       	ldi	r19, 0x00	; 0
     5cc:	40 e0       	ldi	r20, 0x00	; 0
     5ce:	50 e0       	ldi	r21, 0x00	; 0
     5d0:	80 e0       	ldi	r24, 0x00	; 0
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	a0 e0       	ldi	r26, 0x00	; 0
     5d6:	b0 e4       	ldi	r27, 0x40	; 64
     5d8:	60 e0       	ldi	r22, 0x00	; 0
     5da:	70 e0       	ldi	r23, 0x00	; 0
     5dc:	ea 14       	cp	r14, r10
     5de:	fb 04       	cpc	r15, r11
     5e0:	0c 05       	cpc	r16, r12
     5e2:	1d 05       	cpc	r17, r13
     5e4:	40 f0       	brcs	.+16     	; 0x5f6 <__divsf3+0xf0>
     5e6:	28 2b       	or	r18, r24
     5e8:	39 2b       	or	r19, r25
     5ea:	4a 2b       	or	r20, r26
     5ec:	5b 2b       	or	r21, r27
     5ee:	ea 18       	sub	r14, r10
     5f0:	fb 08       	sbc	r15, r11
     5f2:	0c 09       	sbc	r16, r12
     5f4:	1d 09       	sbc	r17, r13
     5f6:	b6 95       	lsr	r27
     5f8:	a7 95       	ror	r26
     5fa:	97 95       	ror	r25
     5fc:	87 95       	ror	r24
     5fe:	ee 0c       	add	r14, r14
     600:	ff 1c       	adc	r15, r15
     602:	00 1f       	adc	r16, r16
     604:	11 1f       	adc	r17, r17
     606:	6f 5f       	subi	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	6f 31       	cpi	r22, 0x1F	; 31
     60c:	71 05       	cpc	r23, r1
     60e:	31 f7       	brne	.-52     	; 0x5dc <__divsf3+0xd6>
     610:	da 01       	movw	r26, r20
     612:	c9 01       	movw	r24, r18
     614:	8f 77       	andi	r24, 0x7F	; 127
     616:	90 70       	andi	r25, 0x00	; 0
     618:	a0 70       	andi	r26, 0x00	; 0
     61a:	b0 70       	andi	r27, 0x00	; 0
     61c:	80 34       	cpi	r24, 0x40	; 64
     61e:	91 05       	cpc	r25, r1
     620:	a1 05       	cpc	r26, r1
     622:	b1 05       	cpc	r27, r1
     624:	61 f4       	brne	.+24     	; 0x63e <__divsf3+0x138>
     626:	27 fd       	sbrc	r18, 7
     628:	0a c0       	rjmp	.+20     	; 0x63e <__divsf3+0x138>
     62a:	e1 14       	cp	r14, r1
     62c:	f1 04       	cpc	r15, r1
     62e:	01 05       	cpc	r16, r1
     630:	11 05       	cpc	r17, r1
     632:	29 f0       	breq	.+10     	; 0x63e <__divsf3+0x138>
     634:	20 5c       	subi	r18, 0xC0	; 192
     636:	3f 4f       	sbci	r19, 0xFF	; 255
     638:	4f 4f       	sbci	r20, 0xFF	; 255
     63a:	5f 4f       	sbci	r21, 0xFF	; 255
     63c:	20 78       	andi	r18, 0x80	; 128
     63e:	2d 87       	std	Y+13, r18	; 0x0d
     640:	3e 87       	std	Y+14, r19	; 0x0e
     642:	4f 87       	std	Y+15, r20	; 0x0f
     644:	58 8b       	std	Y+16, r21	; 0x10
     646:	be 01       	movw	r22, r28
     648:	67 5f       	subi	r22, 0xF7	; 247
     64a:	7f 4f       	sbci	r23, 0xFF	; 255
     64c:	cb 01       	movw	r24, r22
     64e:	57 d0       	rcall	.+174    	; 0x6fe <__pack_f>
     650:	68 96       	adiw	r28, 0x18	; 24
     652:	ea e0       	ldi	r30, 0x0A	; 10
     654:	0c 94 5c 0e 	jmp	0x1cb8	; 0x1cb8 <__epilogue_restores__+0x10>

00000658 <__fixsfsi>:
     658:	ac e0       	ldi	r26, 0x0C	; 12
     65a:	b0 e0       	ldi	r27, 0x00	; 0
     65c:	e2 e3       	ldi	r30, 0x32	; 50
     65e:	f3 e0       	ldi	r31, 0x03	; 3
     660:	0c 94 48 0e 	jmp	0x1c90	; 0x1c90 <__prologue_saves__+0x20>
     664:	69 83       	std	Y+1, r22	; 0x01
     666:	7a 83       	std	Y+2, r23	; 0x02
     668:	8b 83       	std	Y+3, r24	; 0x03
     66a:	9c 83       	std	Y+4, r25	; 0x04
     66c:	ce 01       	movw	r24, r28
     66e:	01 96       	adiw	r24, 0x01	; 1
     670:	be 01       	movw	r22, r28
     672:	6b 5f       	subi	r22, 0xFB	; 251
     674:	7f 4f       	sbci	r23, 0xFF	; 255
     676:	18 d1       	rcall	.+560    	; 0x8a8 <__unpack_f>
     678:	8d 81       	ldd	r24, Y+5	; 0x05
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	61 f1       	breq	.+88     	; 0x6d6 <__fixsfsi+0x7e>
     67e:	82 30       	cpi	r24, 0x02	; 2
     680:	50 f1       	brcs	.+84     	; 0x6d6 <__fixsfsi+0x7e>
     682:	84 30       	cpi	r24, 0x04	; 4
     684:	21 f4       	brne	.+8      	; 0x68e <__fixsfsi+0x36>
     686:	8e 81       	ldd	r24, Y+6	; 0x06
     688:	88 23       	and	r24, r24
     68a:	51 f1       	breq	.+84     	; 0x6e0 <__fixsfsi+0x88>
     68c:	2e c0       	rjmp	.+92     	; 0x6ea <__fixsfsi+0x92>
     68e:	2f 81       	ldd	r18, Y+7	; 0x07
     690:	38 85       	ldd	r19, Y+8	; 0x08
     692:	37 fd       	sbrc	r19, 7
     694:	20 c0       	rjmp	.+64     	; 0x6d6 <__fixsfsi+0x7e>
     696:	6e 81       	ldd	r22, Y+6	; 0x06
     698:	2f 31       	cpi	r18, 0x1F	; 31
     69a:	31 05       	cpc	r19, r1
     69c:	1c f0       	brlt	.+6      	; 0x6a4 <__fixsfsi+0x4c>
     69e:	66 23       	and	r22, r22
     6a0:	f9 f0       	breq	.+62     	; 0x6e0 <__fixsfsi+0x88>
     6a2:	23 c0       	rjmp	.+70     	; 0x6ea <__fixsfsi+0x92>
     6a4:	8e e1       	ldi	r24, 0x1E	; 30
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	82 1b       	sub	r24, r18
     6aa:	93 0b       	sbc	r25, r19
     6ac:	29 85       	ldd	r18, Y+9	; 0x09
     6ae:	3a 85       	ldd	r19, Y+10	; 0x0a
     6b0:	4b 85       	ldd	r20, Y+11	; 0x0b
     6b2:	5c 85       	ldd	r21, Y+12	; 0x0c
     6b4:	04 c0       	rjmp	.+8      	; 0x6be <__fixsfsi+0x66>
     6b6:	56 95       	lsr	r21
     6b8:	47 95       	ror	r20
     6ba:	37 95       	ror	r19
     6bc:	27 95       	ror	r18
     6be:	8a 95       	dec	r24
     6c0:	d2 f7       	brpl	.-12     	; 0x6b6 <__fixsfsi+0x5e>
     6c2:	66 23       	and	r22, r22
     6c4:	b1 f0       	breq	.+44     	; 0x6f2 <__fixsfsi+0x9a>
     6c6:	50 95       	com	r21
     6c8:	40 95       	com	r20
     6ca:	30 95       	com	r19
     6cc:	21 95       	neg	r18
     6ce:	3f 4f       	sbci	r19, 0xFF	; 255
     6d0:	4f 4f       	sbci	r20, 0xFF	; 255
     6d2:	5f 4f       	sbci	r21, 0xFF	; 255
     6d4:	0e c0       	rjmp	.+28     	; 0x6f2 <__fixsfsi+0x9a>
     6d6:	20 e0       	ldi	r18, 0x00	; 0
     6d8:	30 e0       	ldi	r19, 0x00	; 0
     6da:	40 e0       	ldi	r20, 0x00	; 0
     6dc:	50 e0       	ldi	r21, 0x00	; 0
     6de:	09 c0       	rjmp	.+18     	; 0x6f2 <__fixsfsi+0x9a>
     6e0:	2f ef       	ldi	r18, 0xFF	; 255
     6e2:	3f ef       	ldi	r19, 0xFF	; 255
     6e4:	4f ef       	ldi	r20, 0xFF	; 255
     6e6:	5f e7       	ldi	r21, 0x7F	; 127
     6e8:	04 c0       	rjmp	.+8      	; 0x6f2 <__fixsfsi+0x9a>
     6ea:	20 e0       	ldi	r18, 0x00	; 0
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	40 e0       	ldi	r20, 0x00	; 0
     6f0:	50 e8       	ldi	r21, 0x80	; 128
     6f2:	b9 01       	movw	r22, r18
     6f4:	ca 01       	movw	r24, r20
     6f6:	2c 96       	adiw	r28, 0x0c	; 12
     6f8:	e2 e0       	ldi	r30, 0x02	; 2
     6fa:	0c 94 64 0e 	jmp	0x1cc8	; 0x1cc8 <__epilogue_restores__+0x20>

000006fe <__pack_f>:
     6fe:	df 92       	push	r13
     700:	ef 92       	push	r14
     702:	ff 92       	push	r15
     704:	0f 93       	push	r16
     706:	1f 93       	push	r17
     708:	fc 01       	movw	r30, r24
     70a:	e4 80       	ldd	r14, Z+4	; 0x04
     70c:	f5 80       	ldd	r15, Z+5	; 0x05
     70e:	06 81       	ldd	r16, Z+6	; 0x06
     710:	17 81       	ldd	r17, Z+7	; 0x07
     712:	d1 80       	ldd	r13, Z+1	; 0x01
     714:	80 81       	ld	r24, Z
     716:	82 30       	cpi	r24, 0x02	; 2
     718:	48 f4       	brcc	.+18     	; 0x72c <__pack_f+0x2e>
     71a:	80 e0       	ldi	r24, 0x00	; 0
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	a0 e1       	ldi	r26, 0x10	; 16
     720:	b0 e0       	ldi	r27, 0x00	; 0
     722:	e8 2a       	or	r14, r24
     724:	f9 2a       	or	r15, r25
     726:	0a 2b       	or	r16, r26
     728:	1b 2b       	or	r17, r27
     72a:	a5 c0       	rjmp	.+330    	; 0x876 <__pack_f+0x178>
     72c:	84 30       	cpi	r24, 0x04	; 4
     72e:	09 f4       	brne	.+2      	; 0x732 <__pack_f+0x34>
     730:	9f c0       	rjmp	.+318    	; 0x870 <__pack_f+0x172>
     732:	82 30       	cpi	r24, 0x02	; 2
     734:	21 f4       	brne	.+8      	; 0x73e <__pack_f+0x40>
     736:	ee 24       	eor	r14, r14
     738:	ff 24       	eor	r15, r15
     73a:	87 01       	movw	r16, r14
     73c:	05 c0       	rjmp	.+10     	; 0x748 <__pack_f+0x4a>
     73e:	e1 14       	cp	r14, r1
     740:	f1 04       	cpc	r15, r1
     742:	01 05       	cpc	r16, r1
     744:	11 05       	cpc	r17, r1
     746:	19 f4       	brne	.+6      	; 0x74e <__pack_f+0x50>
     748:	e0 e0       	ldi	r30, 0x00	; 0
     74a:	f0 e0       	ldi	r31, 0x00	; 0
     74c:	96 c0       	rjmp	.+300    	; 0x87a <__pack_f+0x17c>
     74e:	62 81       	ldd	r22, Z+2	; 0x02
     750:	73 81       	ldd	r23, Z+3	; 0x03
     752:	9f ef       	ldi	r25, 0xFF	; 255
     754:	62 38       	cpi	r22, 0x82	; 130
     756:	79 07       	cpc	r23, r25
     758:	0c f0       	brlt	.+2      	; 0x75c <__pack_f+0x5e>
     75a:	5b c0       	rjmp	.+182    	; 0x812 <__pack_f+0x114>
     75c:	22 e8       	ldi	r18, 0x82	; 130
     75e:	3f ef       	ldi	r19, 0xFF	; 255
     760:	26 1b       	sub	r18, r22
     762:	37 0b       	sbc	r19, r23
     764:	2a 31       	cpi	r18, 0x1A	; 26
     766:	31 05       	cpc	r19, r1
     768:	2c f0       	brlt	.+10     	; 0x774 <__pack_f+0x76>
     76a:	20 e0       	ldi	r18, 0x00	; 0
     76c:	30 e0       	ldi	r19, 0x00	; 0
     76e:	40 e0       	ldi	r20, 0x00	; 0
     770:	50 e0       	ldi	r21, 0x00	; 0
     772:	2a c0       	rjmp	.+84     	; 0x7c8 <__pack_f+0xca>
     774:	b8 01       	movw	r22, r16
     776:	a7 01       	movw	r20, r14
     778:	02 2e       	mov	r0, r18
     77a:	04 c0       	rjmp	.+8      	; 0x784 <__pack_f+0x86>
     77c:	76 95       	lsr	r23
     77e:	67 95       	ror	r22
     780:	57 95       	ror	r21
     782:	47 95       	ror	r20
     784:	0a 94       	dec	r0
     786:	d2 f7       	brpl	.-12     	; 0x77c <__pack_f+0x7e>
     788:	81 e0       	ldi	r24, 0x01	; 1
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	a0 e0       	ldi	r26, 0x00	; 0
     78e:	b0 e0       	ldi	r27, 0x00	; 0
     790:	04 c0       	rjmp	.+8      	; 0x79a <__pack_f+0x9c>
     792:	88 0f       	add	r24, r24
     794:	99 1f       	adc	r25, r25
     796:	aa 1f       	adc	r26, r26
     798:	bb 1f       	adc	r27, r27
     79a:	2a 95       	dec	r18
     79c:	d2 f7       	brpl	.-12     	; 0x792 <__pack_f+0x94>
     79e:	01 97       	sbiw	r24, 0x01	; 1
     7a0:	a1 09       	sbc	r26, r1
     7a2:	b1 09       	sbc	r27, r1
     7a4:	8e 21       	and	r24, r14
     7a6:	9f 21       	and	r25, r15
     7a8:	a0 23       	and	r26, r16
     7aa:	b1 23       	and	r27, r17
     7ac:	00 97       	sbiw	r24, 0x00	; 0
     7ae:	a1 05       	cpc	r26, r1
     7b0:	b1 05       	cpc	r27, r1
     7b2:	21 f0       	breq	.+8      	; 0x7bc <__pack_f+0xbe>
     7b4:	81 e0       	ldi	r24, 0x01	; 1
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	a0 e0       	ldi	r26, 0x00	; 0
     7ba:	b0 e0       	ldi	r27, 0x00	; 0
     7bc:	9a 01       	movw	r18, r20
     7be:	ab 01       	movw	r20, r22
     7c0:	28 2b       	or	r18, r24
     7c2:	39 2b       	or	r19, r25
     7c4:	4a 2b       	or	r20, r26
     7c6:	5b 2b       	or	r21, r27
     7c8:	da 01       	movw	r26, r20
     7ca:	c9 01       	movw	r24, r18
     7cc:	8f 77       	andi	r24, 0x7F	; 127
     7ce:	90 70       	andi	r25, 0x00	; 0
     7d0:	a0 70       	andi	r26, 0x00	; 0
     7d2:	b0 70       	andi	r27, 0x00	; 0
     7d4:	80 34       	cpi	r24, 0x40	; 64
     7d6:	91 05       	cpc	r25, r1
     7d8:	a1 05       	cpc	r26, r1
     7da:	b1 05       	cpc	r27, r1
     7dc:	39 f4       	brne	.+14     	; 0x7ec <__pack_f+0xee>
     7de:	27 ff       	sbrs	r18, 7
     7e0:	09 c0       	rjmp	.+18     	; 0x7f4 <__pack_f+0xf6>
     7e2:	20 5c       	subi	r18, 0xC0	; 192
     7e4:	3f 4f       	sbci	r19, 0xFF	; 255
     7e6:	4f 4f       	sbci	r20, 0xFF	; 255
     7e8:	5f 4f       	sbci	r21, 0xFF	; 255
     7ea:	04 c0       	rjmp	.+8      	; 0x7f4 <__pack_f+0xf6>
     7ec:	21 5c       	subi	r18, 0xC1	; 193
     7ee:	3f 4f       	sbci	r19, 0xFF	; 255
     7f0:	4f 4f       	sbci	r20, 0xFF	; 255
     7f2:	5f 4f       	sbci	r21, 0xFF	; 255
     7f4:	e0 e0       	ldi	r30, 0x00	; 0
     7f6:	f0 e0       	ldi	r31, 0x00	; 0
     7f8:	20 30       	cpi	r18, 0x00	; 0
     7fa:	a0 e0       	ldi	r26, 0x00	; 0
     7fc:	3a 07       	cpc	r19, r26
     7fe:	a0 e0       	ldi	r26, 0x00	; 0
     800:	4a 07       	cpc	r20, r26
     802:	a0 e4       	ldi	r26, 0x40	; 64
     804:	5a 07       	cpc	r21, r26
     806:	10 f0       	brcs	.+4      	; 0x80c <__pack_f+0x10e>
     808:	e1 e0       	ldi	r30, 0x01	; 1
     80a:	f0 e0       	ldi	r31, 0x00	; 0
     80c:	79 01       	movw	r14, r18
     80e:	8a 01       	movw	r16, r20
     810:	27 c0       	rjmp	.+78     	; 0x860 <__pack_f+0x162>
     812:	60 38       	cpi	r22, 0x80	; 128
     814:	71 05       	cpc	r23, r1
     816:	64 f5       	brge	.+88     	; 0x870 <__pack_f+0x172>
     818:	fb 01       	movw	r30, r22
     81a:	e1 58       	subi	r30, 0x81	; 129
     81c:	ff 4f       	sbci	r31, 0xFF	; 255
     81e:	d8 01       	movw	r26, r16
     820:	c7 01       	movw	r24, r14
     822:	8f 77       	andi	r24, 0x7F	; 127
     824:	90 70       	andi	r25, 0x00	; 0
     826:	a0 70       	andi	r26, 0x00	; 0
     828:	b0 70       	andi	r27, 0x00	; 0
     82a:	80 34       	cpi	r24, 0x40	; 64
     82c:	91 05       	cpc	r25, r1
     82e:	a1 05       	cpc	r26, r1
     830:	b1 05       	cpc	r27, r1
     832:	39 f4       	brne	.+14     	; 0x842 <__pack_f+0x144>
     834:	e7 fe       	sbrs	r14, 7
     836:	0d c0       	rjmp	.+26     	; 0x852 <__pack_f+0x154>
     838:	80 e4       	ldi	r24, 0x40	; 64
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	a0 e0       	ldi	r26, 0x00	; 0
     83e:	b0 e0       	ldi	r27, 0x00	; 0
     840:	04 c0       	rjmp	.+8      	; 0x84a <__pack_f+0x14c>
     842:	8f e3       	ldi	r24, 0x3F	; 63
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	a0 e0       	ldi	r26, 0x00	; 0
     848:	b0 e0       	ldi	r27, 0x00	; 0
     84a:	e8 0e       	add	r14, r24
     84c:	f9 1e       	adc	r15, r25
     84e:	0a 1f       	adc	r16, r26
     850:	1b 1f       	adc	r17, r27
     852:	17 ff       	sbrs	r17, 7
     854:	05 c0       	rjmp	.+10     	; 0x860 <__pack_f+0x162>
     856:	16 95       	lsr	r17
     858:	07 95       	ror	r16
     85a:	f7 94       	ror	r15
     85c:	e7 94       	ror	r14
     85e:	31 96       	adiw	r30, 0x01	; 1
     860:	87 e0       	ldi	r24, 0x07	; 7
     862:	16 95       	lsr	r17
     864:	07 95       	ror	r16
     866:	f7 94       	ror	r15
     868:	e7 94       	ror	r14
     86a:	8a 95       	dec	r24
     86c:	d1 f7       	brne	.-12     	; 0x862 <__pack_f+0x164>
     86e:	05 c0       	rjmp	.+10     	; 0x87a <__pack_f+0x17c>
     870:	ee 24       	eor	r14, r14
     872:	ff 24       	eor	r15, r15
     874:	87 01       	movw	r16, r14
     876:	ef ef       	ldi	r30, 0xFF	; 255
     878:	f0 e0       	ldi	r31, 0x00	; 0
     87a:	6e 2f       	mov	r22, r30
     87c:	67 95       	ror	r22
     87e:	66 27       	eor	r22, r22
     880:	67 95       	ror	r22
     882:	90 2f       	mov	r25, r16
     884:	9f 77       	andi	r25, 0x7F	; 127
     886:	d7 94       	ror	r13
     888:	dd 24       	eor	r13, r13
     88a:	d7 94       	ror	r13
     88c:	8e 2f       	mov	r24, r30
     88e:	86 95       	lsr	r24
     890:	49 2f       	mov	r20, r25
     892:	46 2b       	or	r20, r22
     894:	58 2f       	mov	r21, r24
     896:	5d 29       	or	r21, r13
     898:	b7 01       	movw	r22, r14
     89a:	ca 01       	movw	r24, r20
     89c:	1f 91       	pop	r17
     89e:	0f 91       	pop	r16
     8a0:	ff 90       	pop	r15
     8a2:	ef 90       	pop	r14
     8a4:	df 90       	pop	r13
     8a6:	08 95       	ret

000008a8 <__unpack_f>:
     8a8:	fc 01       	movw	r30, r24
     8aa:	db 01       	movw	r26, r22
     8ac:	40 81       	ld	r20, Z
     8ae:	51 81       	ldd	r21, Z+1	; 0x01
     8b0:	22 81       	ldd	r18, Z+2	; 0x02
     8b2:	62 2f       	mov	r22, r18
     8b4:	6f 77       	andi	r22, 0x7F	; 127
     8b6:	70 e0       	ldi	r23, 0x00	; 0
     8b8:	22 1f       	adc	r18, r18
     8ba:	22 27       	eor	r18, r18
     8bc:	22 1f       	adc	r18, r18
     8be:	93 81       	ldd	r25, Z+3	; 0x03
     8c0:	89 2f       	mov	r24, r25
     8c2:	88 0f       	add	r24, r24
     8c4:	82 2b       	or	r24, r18
     8c6:	28 2f       	mov	r18, r24
     8c8:	30 e0       	ldi	r19, 0x00	; 0
     8ca:	99 1f       	adc	r25, r25
     8cc:	99 27       	eor	r25, r25
     8ce:	99 1f       	adc	r25, r25
     8d0:	11 96       	adiw	r26, 0x01	; 1
     8d2:	9c 93       	st	X, r25
     8d4:	11 97       	sbiw	r26, 0x01	; 1
     8d6:	21 15       	cp	r18, r1
     8d8:	31 05       	cpc	r19, r1
     8da:	a9 f5       	brne	.+106    	; 0x946 <__unpack_f+0x9e>
     8dc:	41 15       	cp	r20, r1
     8de:	51 05       	cpc	r21, r1
     8e0:	61 05       	cpc	r22, r1
     8e2:	71 05       	cpc	r23, r1
     8e4:	11 f4       	brne	.+4      	; 0x8ea <__unpack_f+0x42>
     8e6:	82 e0       	ldi	r24, 0x02	; 2
     8e8:	37 c0       	rjmp	.+110    	; 0x958 <__unpack_f+0xb0>
     8ea:	82 e8       	ldi	r24, 0x82	; 130
     8ec:	9f ef       	ldi	r25, 0xFF	; 255
     8ee:	13 96       	adiw	r26, 0x03	; 3
     8f0:	9c 93       	st	X, r25
     8f2:	8e 93       	st	-X, r24
     8f4:	12 97       	sbiw	r26, 0x02	; 2
     8f6:	9a 01       	movw	r18, r20
     8f8:	ab 01       	movw	r20, r22
     8fa:	67 e0       	ldi	r22, 0x07	; 7
     8fc:	22 0f       	add	r18, r18
     8fe:	33 1f       	adc	r19, r19
     900:	44 1f       	adc	r20, r20
     902:	55 1f       	adc	r21, r21
     904:	6a 95       	dec	r22
     906:	d1 f7       	brne	.-12     	; 0x8fc <__unpack_f+0x54>
     908:	83 e0       	ldi	r24, 0x03	; 3
     90a:	8c 93       	st	X, r24
     90c:	0d c0       	rjmp	.+26     	; 0x928 <__unpack_f+0x80>
     90e:	22 0f       	add	r18, r18
     910:	33 1f       	adc	r19, r19
     912:	44 1f       	adc	r20, r20
     914:	55 1f       	adc	r21, r21
     916:	12 96       	adiw	r26, 0x02	; 2
     918:	8d 91       	ld	r24, X+
     91a:	9c 91       	ld	r25, X
     91c:	13 97       	sbiw	r26, 0x03	; 3
     91e:	01 97       	sbiw	r24, 0x01	; 1
     920:	13 96       	adiw	r26, 0x03	; 3
     922:	9c 93       	st	X, r25
     924:	8e 93       	st	-X, r24
     926:	12 97       	sbiw	r26, 0x02	; 2
     928:	20 30       	cpi	r18, 0x00	; 0
     92a:	80 e0       	ldi	r24, 0x00	; 0
     92c:	38 07       	cpc	r19, r24
     92e:	80 e0       	ldi	r24, 0x00	; 0
     930:	48 07       	cpc	r20, r24
     932:	80 e4       	ldi	r24, 0x40	; 64
     934:	58 07       	cpc	r21, r24
     936:	58 f3       	brcs	.-42     	; 0x90e <__unpack_f+0x66>
     938:	14 96       	adiw	r26, 0x04	; 4
     93a:	2d 93       	st	X+, r18
     93c:	3d 93       	st	X+, r19
     93e:	4d 93       	st	X+, r20
     940:	5c 93       	st	X, r21
     942:	17 97       	sbiw	r26, 0x07	; 7
     944:	08 95       	ret
     946:	2f 3f       	cpi	r18, 0xFF	; 255
     948:	31 05       	cpc	r19, r1
     94a:	79 f4       	brne	.+30     	; 0x96a <__unpack_f+0xc2>
     94c:	41 15       	cp	r20, r1
     94e:	51 05       	cpc	r21, r1
     950:	61 05       	cpc	r22, r1
     952:	71 05       	cpc	r23, r1
     954:	19 f4       	brne	.+6      	; 0x95c <__unpack_f+0xb4>
     956:	84 e0       	ldi	r24, 0x04	; 4
     958:	8c 93       	st	X, r24
     95a:	08 95       	ret
     95c:	64 ff       	sbrs	r22, 4
     95e:	03 c0       	rjmp	.+6      	; 0x966 <__unpack_f+0xbe>
     960:	81 e0       	ldi	r24, 0x01	; 1
     962:	8c 93       	st	X, r24
     964:	12 c0       	rjmp	.+36     	; 0x98a <__unpack_f+0xe2>
     966:	1c 92       	st	X, r1
     968:	10 c0       	rjmp	.+32     	; 0x98a <__unpack_f+0xe2>
     96a:	2f 57       	subi	r18, 0x7F	; 127
     96c:	30 40       	sbci	r19, 0x00	; 0
     96e:	13 96       	adiw	r26, 0x03	; 3
     970:	3c 93       	st	X, r19
     972:	2e 93       	st	-X, r18
     974:	12 97       	sbiw	r26, 0x02	; 2
     976:	83 e0       	ldi	r24, 0x03	; 3
     978:	8c 93       	st	X, r24
     97a:	87 e0       	ldi	r24, 0x07	; 7
     97c:	44 0f       	add	r20, r20
     97e:	55 1f       	adc	r21, r21
     980:	66 1f       	adc	r22, r22
     982:	77 1f       	adc	r23, r23
     984:	8a 95       	dec	r24
     986:	d1 f7       	brne	.-12     	; 0x97c <__unpack_f+0xd4>
     988:	70 64       	ori	r23, 0x40	; 64
     98a:	14 96       	adiw	r26, 0x04	; 4
     98c:	4d 93       	st	X+, r20
     98e:	5d 93       	st	X+, r21
     990:	6d 93       	st	X+, r22
     992:	7c 93       	st	X, r23
     994:	17 97       	sbiw	r26, 0x07	; 7
     996:	08 95       	ret

00000998 <buttonCheck>:
	}
}

void buttonCheck() {

	RIGHT = 0; LEFT = 0;
     998:	10 92 6b 01 	sts	0x016B, r1
     99c:	10 92 6a 01 	sts	0x016A, r1
     9a0:	10 92 69 01 	sts	0x0169, r1
     9a4:	10 92 68 01 	sts	0x0168, r1
	
	if(PINB & 0b00000010) {
     9a8:	19 9b       	sbis	0x03, 1	; 3
     9aa:	11 c0       	rjmp	.+34     	; 0x9ce <buttonCheck+0x36>
     9ac:	84 ef       	ldi	r24, 0xF4	; 244
     9ae:	91 e0       	ldi	r25, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     9b0:	20 e9       	ldi	r18, 0x90	; 144
     9b2:	31 e0       	ldi	r19, 0x01	; 1
     9b4:	f9 01       	movw	r30, r18
     9b6:	31 97       	sbiw	r30, 0x01	; 1
     9b8:	f1 f7       	brne	.-4      	; 0x9b6 <buttonCheck+0x1e>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9ba:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9bc:	d9 f7       	brne	.-10     	; 0x9b4 <buttonCheck+0x1c>
	_delay_ms(50);
	if(PINB & 0b00000010) {
     9be:	19 9b       	sbis	0x03, 1	; 3
     9c0:	06 c0       	rjmp	.+12     	; 0x9ce <buttonCheck+0x36>
		// Send output to PORTD.
		//PORTB |= (1<<3); //PORTB = 0b11111111;
		RIGHT = 1;
     9c2:	81 e0       	ldi	r24, 0x01	; 1
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	90 93 6b 01 	sts	0x016B, r25
     9ca:	80 93 6a 01 	sts	0x016A, r24
	}
	}
	
	if (PINB & 0b00000001 ) {
     9ce:	18 9b       	sbis	0x03, 0	; 3
     9d0:	11 c0       	rjmp	.+34     	; 0x9f4 <buttonCheck+0x5c>
     9d2:	84 ef       	ldi	r24, 0xF4	; 244
     9d4:	91 e0       	ldi	r25, 0x01	; 1
     9d6:	20 e9       	ldi	r18, 0x90	; 144
     9d8:	31 e0       	ldi	r19, 0x01	; 1
     9da:	f9 01       	movw	r30, r18
     9dc:	31 97       	sbiw	r30, 0x01	; 1
     9de:	f1 f7       	brne	.-4      	; 0x9dc <buttonCheck+0x44>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9e0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9e2:	d9 f7       	brne	.-10     	; 0x9da <buttonCheck+0x42>
	_delay_ms(50);
	if (PINB & 0b00000001 ) {
     9e4:	18 9b       	sbis	0x03, 0	; 3
     9e6:	06 c0       	rjmp	.+12     	; 0x9f4 <buttonCheck+0x5c>
		//PORTB |= (1<<2);
		LEFT = 1;
     9e8:	81 e0       	ldi	r24, 0x01	; 1
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	90 93 69 01 	sts	0x0169, r25
     9f0:	80 93 68 01 	sts	0x0168, r24
     9f4:	08 95       	ret

000009f6 <PinChangeInit>:
}

void PinChangeInit(void)
{
	//Enable PCINT0 and PCINT1 (both buttons) in the PCMSK0 register
	PCMSK0 |= (1<<PCINT0);
     9f6:	eb e6       	ldi	r30, 0x6B	; 107
     9f8:	f0 e0       	ldi	r31, 0x00	; 0
     9fa:	80 81       	ld	r24, Z
     9fc:	81 60       	ori	r24, 0x01	; 1
     9fe:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT1);
     a00:	80 81       	ld	r24, Z
     a02:	82 60       	ori	r24, 0x02	; 2
     a04:	80 83       	st	Z, r24

	//Enable Pin change interrupts in the Pin Change Interrupt Control Register
	PCICR |= (1<<PCIE0);
     a06:	e8 e6       	ldi	r30, 0x68	; 104
     a08:	f0 e0       	ldi	r31, 0x00	; 0
     a0a:	80 81       	ld	r24, Z
     a0c:	81 60       	ori	r24, 0x01	; 1
     a0e:	80 83       	st	Z, r24
	
	//Set the PCINT0 and PCINT1 interrupts to trigger on rising edge
	EICRA |= ((1<<ISC00)&&(1<<ISC01)&&(1<<ISC10)&&(1<<ISC11));
     a10:	e9 e6       	ldi	r30, 0x69	; 105
     a12:	f0 e0       	ldi	r31, 0x00	; 0
     a14:	80 81       	ld	r24, Z
     a16:	81 60       	ori	r24, 0x01	; 1
     a18:	80 83       	st	Z, r24
		
	//Ensure to enable global interrupts as well.
	sei();
     a1a:	78 94       	sei
}
     a1c:	08 95       	ret

00000a1e <__vector_9>:

ISR(PCINT0_vect) {	
     a1e:	1f 92       	push	r1
     a20:	0f 92       	push	r0
     a22:	0f b6       	in	r0, 0x3f	; 63
     a24:	0f 92       	push	r0
     a26:	11 24       	eor	r1, r1
     a28:	8f 93       	push	r24
     a2a:	9f 93       	push	r25
	RIGHT = 0; LEFT = 0;
     a2c:	10 92 6b 01 	sts	0x016B, r1
     a30:	10 92 6a 01 	sts	0x016A, r1
     a34:	10 92 69 01 	sts	0x0169, r1
     a38:	10 92 68 01 	sts	0x0168, r1
	
	if(PINB & 0b00000010) {
     a3c:	19 9b       	sbis	0x03, 1	; 3
     a3e:	06 c0       	rjmp	.+12     	; 0xa4c <__vector_9+0x2e>
	//_delay_ms(50);
	//if(PINB & 0b00000010) {
		// Send output to PORTD.
		//PORTB |= (1<<3); //PORTB = 0b11111111;
		RIGHT = 1;
     a40:	81 e0       	ldi	r24, 0x01	; 1
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	90 93 6b 01 	sts	0x016B, r25
     a48:	80 93 6a 01 	sts	0x016A, r24
	//}
	}
	
	if (PINB & 0b00000001 ) {
     a4c:	18 9b       	sbis	0x03, 0	; 3
     a4e:	06 c0       	rjmp	.+12     	; 0xa5c <__vector_9+0x3e>
	//_delay_ms(50);
	//if (PINB & 0b00000001 ) {
		//PORTB |= (1<<2);
		LEFT = 1;
     a50:	81 e0       	ldi	r24, 0x01	; 1
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	90 93 69 01 	sts	0x0169, r25
     a58:	80 93 68 01 	sts	0x0168, r24
	}
	clear();
	draw_character('*',heroX,heroY);
	refresh();
	*/
}
     a5c:	9f 91       	pop	r25
     a5e:	8f 91       	pop	r24
     a60:	0f 90       	pop	r0
     a62:	0f be       	out	0x3f, r0	; 63
     a64:	0f 90       	pop	r0
     a66:	1f 90       	pop	r1
     a68:	18 95       	reti

00000a6a <TimerInit>:

void TimerInit(void)
{
	//Set to Normal Timer Mode using TCCR0A and TCCR0B
	TCCR0A &= ~((1<<WGM01)|(WGM00));
     a6a:	84 b5       	in	r24, 0x24	; 36
     a6c:	8d 7f       	andi	r24, 0xFD	; 253
     a6e:	84 bd       	out	0x24, r24	; 36
	TCCR0B &= ~((1<<WGM02));
     a70:	85 b5       	in	r24, 0x25	; 37
     a72:	87 7f       	andi	r24, 0xF7	; 247
     a74:	85 bd       	out	0x25, r24	; 37
	
	//Set Prescaler using TCCR0B, using Clock Speed find timer speed = 1/(Clock Speed/Prescaler)
	//Prescaler = 1024
	//Timer Speed = 128 nano seconds NOT 16MHZ
	//Timer Overflow Speed = 32640 nano seconds (Timer Speed * 255) - (255 since 8-bit timer) NOT 16MHZ
	TCCR0B |= (1<<CS02)|(1<<CS00);
     a76:	85 b5       	in	r24, 0x25	; 37
     a78:	85 60       	ori	r24, 0x05	; 5
     a7a:	85 bd       	out	0x25, r24	; 37
	TCCR0B &= ~((1<<CS01));
     a7c:	85 b5       	in	r24, 0x25	; 37
     a7e:	8d 7f       	andi	r24, 0xFD	; 253
     a80:	85 bd       	out	0x25, r24	; 37
	
	//Enable TOIE0 interrupt in the TIMSK0 register
	TIMSK0 |= (1<<TOIE0);
     a82:	ee e6       	ldi	r30, 0x6E	; 110
     a84:	f0 e0       	ldi	r31, 0x00	; 0
     a86:	80 81       	ld	r24, Z
     a88:	81 60       	ori	r24, 0x01	; 1
     a8a:	80 83       	st	Z, r24
	
	//Ensure to enable global interrupts as well.
	sei();
     a8c:	78 94       	sei
}
     a8e:	08 95       	ret

00000a90 <heroForward>:
		clockCounter = 0;
		heroForward();	
	}
}

void heroForward(void) {
     a90:	0f 93       	push	r16
     a92:	1f 93       	push	r17

if (Direction == 0) {
     a94:	80 91 4e 01 	lds	r24, 0x014E
     a98:	90 91 4f 01 	lds	r25, 0x014F
     a9c:	89 2b       	or	r24, r25
     a9e:	39 f5       	brne	.+78     	; 0xaee <heroForward+0x5e>
	HeroY = 1;
     aa0:	81 e0       	ldi	r24, 0x01	; 1
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	90 93 79 01 	sts	0x0179, r25
     aa8:	80 93 78 01 	sts	0x0178, r24
	HeroX = 0;
     aac:	10 92 51 01 	sts	0x0151, r1
     ab0:	10 92 50 01 	sts	0x0150, r1
	if (my_pointer -> y > screen_y-1) {
     ab4:	00 91 7c 01 	lds	r16, 0x017C
     ab8:	10 91 7d 01 	lds	r17, 0x017D
     abc:	60 91 46 01 	lds	r22, 0x0146
     ac0:	70 91 47 01 	lds	r23, 0x0147
     ac4:	61 50       	subi	r22, 0x01	; 1
     ac6:	70 40       	sbci	r23, 0x00	; 0
     ac8:	88 27       	eor	r24, r24
     aca:	77 fd       	sbrc	r23, 7
     acc:	80 95       	com	r24
     ace:	98 2f       	mov	r25, r24
     ad0:	0e d4       	rcall	.+2076   	; 0x12ee <__floatsisf>
     ad2:	9b 01       	movw	r18, r22
     ad4:	ac 01       	movw	r20, r24
     ad6:	f8 01       	movw	r30, r16
     ad8:	64 81       	ldd	r22, Z+4	; 0x04
     ada:	75 81       	ldd	r23, Z+5	; 0x05
     adc:	86 81       	ldd	r24, Z+6	; 0x06
     ade:	97 81       	ldd	r25, Z+7	; 0x07
     ae0:	b6 d4       	rcall	.+2412   	; 0x144e <__gesf2>
     ae2:	18 16       	cp	r1, r24
     ae4:	24 f4       	brge	.+8      	; 0xaee <heroForward+0x5e>
	HeroY = 0;
     ae6:	10 92 79 01 	sts	0x0179, r1
     aea:	10 92 78 01 	sts	0x0178, r1
	}
}
if (Direction == 1) {
     aee:	80 91 4e 01 	lds	r24, 0x014E
     af2:	90 91 4f 01 	lds	r25, 0x014F
     af6:	81 30       	cpi	r24, 0x01	; 1
     af8:	91 05       	cpc	r25, r1
     afa:	29 f5       	brne	.+74     	; 0xb46 <__stack+0x47>
	HeroX = 1;
     afc:	90 93 51 01 	sts	0x0151, r25
     b00:	80 93 50 01 	sts	0x0150, r24
	HeroY = 0;
     b04:	10 92 79 01 	sts	0x0179, r1
     b08:	10 92 78 01 	sts	0x0178, r1
	if (my_pointer -> x > screen_x-1) {
     b0c:	00 91 7c 01 	lds	r16, 0x017C
     b10:	10 91 7d 01 	lds	r17, 0x017D
     b14:	60 91 42 01 	lds	r22, 0x0142
     b18:	70 91 43 01 	lds	r23, 0x0143
     b1c:	61 50       	subi	r22, 0x01	; 1
     b1e:	70 40       	sbci	r23, 0x00	; 0
     b20:	88 27       	eor	r24, r24
     b22:	77 fd       	sbrc	r23, 7
     b24:	80 95       	com	r24
     b26:	98 2f       	mov	r25, r24
     b28:	e2 d3       	rcall	.+1988   	; 0x12ee <__floatsisf>
     b2a:	9b 01       	movw	r18, r22
     b2c:	ac 01       	movw	r20, r24
     b2e:	f8 01       	movw	r30, r16
     b30:	60 81       	ld	r22, Z
     b32:	71 81       	ldd	r23, Z+1	; 0x01
     b34:	82 81       	ldd	r24, Z+2	; 0x02
     b36:	93 81       	ldd	r25, Z+3	; 0x03
     b38:	8a d4       	rcall	.+2324   	; 0x144e <__gesf2>
     b3a:	18 16       	cp	r1, r24
     b3c:	24 f4       	brge	.+8      	; 0xb46 <__stack+0x47>
	HeroX = 0;
     b3e:	10 92 51 01 	sts	0x0151, r1
     b42:	10 92 50 01 	sts	0x0150, r1
	}
}
if (Direction == 2) {
     b46:	80 91 4e 01 	lds	r24, 0x014E
     b4a:	90 91 4f 01 	lds	r25, 0x014F
     b4e:	02 97       	sbiw	r24, 0x02	; 2
     b50:	e9 f4       	brne	.+58     	; 0xb8c <__stack+0x8d>
	HeroY = -1;
     b52:	8f ef       	ldi	r24, 0xFF	; 255
     b54:	9f ef       	ldi	r25, 0xFF	; 255
     b56:	90 93 79 01 	sts	0x0179, r25
     b5a:	80 93 78 01 	sts	0x0178, r24
	HeroX = 0;
     b5e:	10 92 51 01 	sts	0x0151, r1
     b62:	10 92 50 01 	sts	0x0150, r1
	if (my_pointer -> y < 10) {
     b66:	e0 91 7c 01 	lds	r30, 0x017C
     b6a:	f0 91 7d 01 	lds	r31, 0x017D
     b6e:	64 81       	ldd	r22, Z+4	; 0x04
     b70:	75 81       	ldd	r23, Z+5	; 0x05
     b72:	86 81       	ldd	r24, Z+6	; 0x06
     b74:	97 81       	ldd	r25, Z+7	; 0x07
     b76:	20 e0       	ldi	r18, 0x00	; 0
     b78:	30 e0       	ldi	r19, 0x00	; 0
     b7a:	40 e2       	ldi	r20, 0x20	; 32
     b7c:	51 e4       	ldi	r21, 0x41	; 65
     b7e:	b1 d3       	rcall	.+1890   	; 0x12e2 <__cmpsf2>
     b80:	88 23       	and	r24, r24
     b82:	24 f4       	brge	.+8      	; 0xb8c <__stack+0x8d>
	HeroY = 0;
     b84:	10 92 79 01 	sts	0x0179, r1
     b88:	10 92 78 01 	sts	0x0178, r1
	}
}
if (Direction == 3) {
     b8c:	80 91 4e 01 	lds	r24, 0x014E
     b90:	90 91 4f 01 	lds	r25, 0x014F
     b94:	03 97       	sbiw	r24, 0x03	; 3
     b96:	e9 f4       	brne	.+58     	; 0xbd2 <__stack+0xd3>
	HeroX = -1;
     b98:	8f ef       	ldi	r24, 0xFF	; 255
     b9a:	9f ef       	ldi	r25, 0xFF	; 255
     b9c:	90 93 51 01 	sts	0x0151, r25
     ba0:	80 93 50 01 	sts	0x0150, r24
	HeroY = 0;
     ba4:	10 92 79 01 	sts	0x0179, r1
     ba8:	10 92 78 01 	sts	0x0178, r1
	if (my_pointer -> x < 2) {
     bac:	e0 91 7c 01 	lds	r30, 0x017C
     bb0:	f0 91 7d 01 	lds	r31, 0x017D
     bb4:	60 81       	ld	r22, Z
     bb6:	71 81       	ldd	r23, Z+1	; 0x01
     bb8:	82 81       	ldd	r24, Z+2	; 0x02
     bba:	93 81       	ldd	r25, Z+3	; 0x03
     bbc:	20 e0       	ldi	r18, 0x00	; 0
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	40 e0       	ldi	r20, 0x00	; 0
     bc2:	50 e4       	ldi	r21, 0x40	; 64
     bc4:	8e d3       	rcall	.+1820   	; 0x12e2 <__cmpsf2>
     bc6:	88 23       	and	r24, r24
     bc8:	24 f4       	brge	.+8      	; 0xbd2 <__stack+0xd3>
	HeroX = 0;
     bca:	10 92 51 01 	sts	0x0151, r1
     bce:	10 92 50 01 	sts	0x0150, r1
	}
}

my_pointer -> x += HeroX;
     bd2:	00 91 7c 01 	lds	r16, 0x017C
     bd6:	10 91 7d 01 	lds	r17, 0x017D
     bda:	60 91 50 01 	lds	r22, 0x0150
     bde:	70 91 51 01 	lds	r23, 0x0151
     be2:	88 27       	eor	r24, r24
     be4:	77 fd       	sbrc	r23, 7
     be6:	80 95       	com	r24
     be8:	98 2f       	mov	r25, r24
     bea:	81 d3       	rcall	.+1794   	; 0x12ee <__floatsisf>
     bec:	9b 01       	movw	r18, r22
     bee:	ac 01       	movw	r20, r24
     bf0:	f8 01       	movw	r30, r16
     bf2:	60 81       	ld	r22, Z
     bf4:	71 81       	ldd	r23, Z+1	; 0x01
     bf6:	82 81       	ldd	r24, Z+2	; 0x02
     bf8:	93 81       	ldd	r25, Z+3	; 0x03
     bfa:	0f d3       	rcall	.+1566   	; 0x121a <__addsf3>
     bfc:	f8 01       	movw	r30, r16
     bfe:	60 83       	st	Z, r22
     c00:	71 83       	std	Z+1, r23	; 0x01
     c02:	82 83       	std	Z+2, r24	; 0x02
     c04:	93 83       	std	Z+3, r25	; 0x03
my_pointer -> y += HeroY;
     c06:	60 91 78 01 	lds	r22, 0x0178
     c0a:	70 91 79 01 	lds	r23, 0x0179
     c0e:	88 27       	eor	r24, r24
     c10:	77 fd       	sbrc	r23, 7
     c12:	80 95       	com	r24
     c14:	98 2f       	mov	r25, r24
     c16:	6b d3       	rcall	.+1750   	; 0x12ee <__floatsisf>
     c18:	9b 01       	movw	r18, r22
     c1a:	ac 01       	movw	r20, r24
     c1c:	f8 01       	movw	r30, r16
     c1e:	64 81       	ldd	r22, Z+4	; 0x04
     c20:	75 81       	ldd	r23, Z+5	; 0x05
     c22:	86 81       	ldd	r24, Z+6	; 0x06
     c24:	97 81       	ldd	r25, Z+7	; 0x07
     c26:	f9 d2       	rcall	.+1522   	; 0x121a <__addsf3>
     c28:	f8 01       	movw	r30, r16
     c2a:	64 83       	std	Z+4, r22	; 0x04
     c2c:	75 83       	std	Z+5, r23	; 0x05
     c2e:	86 83       	std	Z+6, r24	; 0x06
     c30:	97 83       	std	Z+7, r25	; 0x07

}
     c32:	1f 91       	pop	r17
     c34:	0f 91       	pop	r16
     c36:	08 95       	ret

00000c38 <__vector_23>:
	sei();
}


ISR(TIMER0_OVF_vect)
{
     c38:	1f 92       	push	r1
     c3a:	0f 92       	push	r0
     c3c:	0f b6       	in	r0, 0x3f	; 63
     c3e:	0f 92       	push	r0
     c40:	11 24       	eor	r1, r1
     c42:	2f 93       	push	r18
     c44:	3f 93       	push	r19
     c46:	4f 93       	push	r20
     c48:	5f 93       	push	r21
     c4a:	6f 93       	push	r22
     c4c:	7f 93       	push	r23
     c4e:	8f 93       	push	r24
     c50:	9f 93       	push	r25
     c52:	af 93       	push	r26
     c54:	bf 93       	push	r27
     c56:	ef 93       	push	r30
     c58:	ff 93       	push	r31
	//Clear the flag by writing a one
	TIFR0 |= (1<<TOV0);
     c5a:	a8 9a       	sbi	0x15, 0	; 21
	//Add one to our clockCounter
	clockCounter++;
     c5c:	80 91 74 01 	lds	r24, 0x0174
     c60:	90 91 75 01 	lds	r25, 0x0175
     c64:	01 96       	adiw	r24, 0x01	; 1
     c66:	90 93 75 01 	sts	0x0175, r25
     c6a:	80 93 74 01 	sts	0x0174, r24
	//DEBUG LED
	//PORTB ^= (1<<PINB2);
	//Check to see if our clockCounter is greater/equal to than our MAX_CLOCK_COUNTER_FOR_100MSECOND
	if(clockCounter >= MAX_CLOCK_COUNTER_FOR_100MSECOND && GAMEON)
     c6e:	80 91 74 01 	lds	r24, 0x0174
     c72:	90 91 75 01 	lds	r25, 0x0175
     c76:	05 97       	sbiw	r24, 0x05	; 5
     c78:	5c f0       	brlt	.+22     	; 0xc90 <__vector_23+0x58>
     c7a:	80 91 76 01 	lds	r24, 0x0176
     c7e:	90 91 77 01 	lds	r25, 0x0177
     c82:	89 2b       	or	r24, r25
     c84:	29 f0       	breq	.+10     	; 0xc90 <__vector_23+0x58>
	{
		//PORTB ^= (1<<PINB3);
		//Reset clockCounter
		clockCounter = 0;
     c86:	10 92 75 01 	sts	0x0175, r1
     c8a:	10 92 74 01 	sts	0x0174, r1
		heroForward();	
     c8e:	00 df       	rcall	.-512    	; 0xa90 <heroForward>
	}
}
     c90:	ff 91       	pop	r31
     c92:	ef 91       	pop	r30
     c94:	bf 91       	pop	r27
     c96:	af 91       	pop	r26
     c98:	9f 91       	pop	r25
     c9a:	8f 91       	pop	r24
     c9c:	7f 91       	pop	r23
     c9e:	6f 91       	pop	r22
     ca0:	5f 91       	pop	r21
     ca2:	4f 91       	pop	r20
     ca4:	3f 91       	pop	r19
     ca6:	2f 91       	pop	r18
     ca8:	0f 90       	pop	r0
     caa:	0f be       	out	0x3f, r0	; 63
     cac:	0f 90       	pop	r0
     cae:	1f 90       	pop	r1
     cb0:	18 95       	reti

00000cb2 <drawScreen>:
my_pointer -> y += HeroY;

}

void drawScreen(void) {
	draw_line(0,8,screen_x_Full,8);
     cb2:	80 e0       	ldi	r24, 0x00	; 0
     cb4:	68 e0       	ldi	r22, 0x08	; 8
     cb6:	40 91 44 01 	lds	r20, 0x0144
     cba:	28 e0       	ldi	r18, 0x08	; 8
     cbc:	07 d4       	rcall	.+2062   	; 0x14cc <draw_line>
	draw_line(0,8,0,screen_y_Full);
     cbe:	80 e0       	ldi	r24, 0x00	; 0
     cc0:	68 e0       	ldi	r22, 0x08	; 8
     cc2:	40 e0       	ldi	r20, 0x00	; 0
     cc4:	20 91 48 01 	lds	r18, 0x0148
     cc8:	01 d4       	rcall	.+2050   	; 0x14cc <draw_line>
	draw_line(screen_x_Full,8,screen_x_Full,screen_y_Full);
     cca:	40 91 44 01 	lds	r20, 0x0144
     cce:	84 2f       	mov	r24, r20
     cd0:	68 e0       	ldi	r22, 0x08	; 8
     cd2:	20 91 48 01 	lds	r18, 0x0148
     cd6:	fa d3       	rcall	.+2036   	; 0x14cc <draw_line>
	draw_line(0,screen_y_Full,screen_x_Full,screen_y_Full);
     cd8:	20 91 48 01 	lds	r18, 0x0148
     cdc:	80 e0       	ldi	r24, 0x00	; 0
     cde:	62 2f       	mov	r22, r18
     ce0:	40 91 44 01 	lds	r20, 0x0144
     ce4:	f3 d3       	rcall	.+2022   	; 0x14cc <draw_line>
	draw_string("L: ",0,0);
     ce6:	80 e0       	ldi	r24, 0x00	; 0
     ce8:	91 e0       	ldi	r25, 0x01	; 1
     cea:	60 e0       	ldi	r22, 0x00	; 0
     cec:	40 e0       	ldi	r20, 0x00	; 0
     cee:	25 d6       	rcall	.+3146   	; 0x193a <draw_string>
	draw_character((0x30 + Lives),11,0);
     cf0:	80 91 54 01 	lds	r24, 0x0154
     cf4:	80 5d       	subi	r24, 0xD0	; 208
     cf6:	6b e0       	ldi	r22, 0x0B	; 11
     cf8:	40 e0       	ldi	r20, 0x00	; 0
     cfa:	cf d5       	rcall	.+2974   	; 0x189a <draw_character>
	draw_string("S: ", 21,0);
     cfc:	84 e0       	ldi	r24, 0x04	; 4
     cfe:	91 e0       	ldi	r25, 0x01	; 1
     d00:	65 e1       	ldi	r22, 0x15	; 21
     d02:	40 e0       	ldi	r20, 0x00	; 0
     d04:	1a d6       	rcall	.+3124   	; 0x193a <draw_string>
	draw_character((0x30 + Score),31,0);
     d06:	80 91 7a 01 	lds	r24, 0x017A
     d0a:	80 5d       	subi	r24, 0xD0	; 208
     d0c:	6f e1       	ldi	r22, 0x1F	; 31
     d0e:	40 e0       	ldi	r20, 0x00	; 0
     d10:	c4 d5       	rcall	.+2952   	; 0x189a <draw_character>
	draw_character((0x30 + Direction),70,0);
     d12:	80 91 4e 01 	lds	r24, 0x014E
     d16:	90 91 4f 01 	lds	r25, 0x014F
     d1a:	80 5d       	subi	r24, 0xD0	; 208
     d1c:	66 e4       	ldi	r22, 0x46	; 70
     d1e:	40 e0       	ldi	r20, 0x00	; 0

}
     d20:	bc c5       	rjmp	.+2936   	; 0x189a <draw_character>

00000d22 <seedWithButtonPress>:
	return out;
}

void seedWithButtonPress() {
// turn on teensy LED
PORTD |= 0b01000000;
     d22:	5e 9a       	sbi	0x0b, 6	; 11
// Configure port B for the buttons....
DDRB |= 0b00001100;
     d24:	84 b1       	in	r24, 0x04	; 4
     d26:	8c 60       	ori	r24, 0x0C	; 12
     d28:	84 b9       	out	0x04, r24	; 4
     d2a:	20 e0       	ldi	r18, 0x00	; 0
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	02 c0       	rjmp	.+4      	; 0xd34 <seedWithButtonPress+0x12>
// Wait for the button press on SW0 while iterating the seed
unsigned int seed = 0;
while (!RIGHT && !LEFT) {
seed++;
     d30:	2f 5f       	subi	r18, 0xFF	; 255
     d32:	3f 4f       	sbci	r19, 0xFF	; 255
PORTD |= 0b01000000;
// Configure port B for the buttons....
DDRB |= 0b00001100;
// Wait for the button press on SW0 while iterating the seed
unsigned int seed = 0;
while (!RIGHT && !LEFT) {
     d34:	80 91 6a 01 	lds	r24, 0x016A
     d38:	90 91 6b 01 	lds	r25, 0x016B
     d3c:	89 2b       	or	r24, r25
     d3e:	31 f4       	brne	.+12     	; 0xd4c <seedWithButtonPress+0x2a>
     d40:	80 91 68 01 	lds	r24, 0x0168
     d44:	90 91 69 01 	lds	r25, 0x0169
     d48:	89 2b       	or	r24, r25
     d4a:	91 f3       	breq	.-28     	; 0xd30 <seedWithButtonPress+0xe>
seed++;
}
// Seed the random number generator
srand(seed);
     d4c:	c9 01       	movw	r24, r18
     d4e:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <srand>
// What does dgbI do? where is it from?
// dbgI((int) seed, 10);
// turn off teensy LED
PORTD = 0b00000000;
     d52:	1b b8       	out	0x0b, r1	; 11
}
     d54:	08 95       	ret

00000d56 <randInRange>:
		LEFT = 0;
	}
	*/
}

int randInRange(int min, int max) {
     d56:	ef 92       	push	r14
     d58:	ff 92       	push	r15
     d5a:	0f 93       	push	r16
     d5c:	1f 93       	push	r17
     d5e:	8c 01       	movw	r16, r24
     d60:	7b 01       	movw	r14, r22
	int out = min + rand()%(max+1 - min);
     d62:	0e 94 b8 0e 	call	0x1d70	; 0x1d70 <rand>
     d66:	e0 1a       	sub	r14, r16
     d68:	f1 0a       	sbc	r15, r17
     d6a:	08 94       	sec
     d6c:	e1 1c       	adc	r14, r1
     d6e:	f1 1c       	adc	r15, r1
     d70:	b7 01       	movw	r22, r14
     d72:	57 d7       	rcall	.+3758   	; 0x1c22 <__divmodhi4>
     d74:	9c 01       	movw	r18, r24
     d76:	20 0f       	add	r18, r16
     d78:	31 1f       	adc	r19, r17
	return out;
}
     d7a:	c9 01       	movw	r24, r18
     d7c:	1f 91       	pop	r17
     d7e:	0f 91       	pop	r16
     d80:	ff 90       	pop	r15
     d82:	ef 90       	pop	r14
     d84:	08 95       	ret

00000d86 <CountDown>:
	buttonCheck();
	CountDown();
	
}

void CountDown() {
     d86:	1f 93       	push	r17
     d88:	cf 93       	push	r28
     d8a:	df 93       	push	r29
     d8c:	13 e3       	ldi	r17, 0x33	; 51
     d8e:	c0 e9       	ldi	r28, 0x90	; 144
     d90:	d1 e0       	ldi	r29, 0x01	; 1
	for (char i= 0x3; i>0x0; i--) {
		clear();
     d92:	61 d3       	rcall	.+1730   	; 0x1456 <clear>
		draw_string("Game Start In: ", 2,22); // 15*5 = 75 (84 - 75)/2 = 4
     d94:	88 e0       	ldi	r24, 0x08	; 8
     d96:	91 e0       	ldi	r25, 0x01	; 1
     d98:	62 e0       	ldi	r22, 0x02	; 2
     d9a:	46 e1       	ldi	r20, 0x16	; 22
     d9c:	ce d5       	rcall	.+2972   	; 0x193a <draw_string>
		draw_character((0x30 + i), 75,22);
     d9e:	81 2f       	mov	r24, r17
     da0:	6b e4       	ldi	r22, 0x4B	; 75
     da2:	46 e1       	ldi	r20, 0x16	; 22
     da4:	7a d5       	rcall	.+2804   	; 0x189a <draw_character>
		refresh();
     da6:	de d5       	rcall	.+3004   	; 0x1964 <refresh>
     da8:	80 e1       	ldi	r24, 0x10	; 16
     daa:	97 e2       	ldi	r25, 0x27	; 39
     dac:	fe 01       	movw	r30, r28
     dae:	31 97       	sbiw	r30, 0x01	; 1
     db0:	f1 f7       	brne	.-4      	; 0xdae <CountDown+0x28>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     db2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     db4:	d9 f7       	brne	.-10     	; 0xdac <CountDown+0x26>
     db6:	11 50       	subi	r17, 0x01	; 1
	CountDown();
	
}

void CountDown() {
	for (char i= 0x3; i>0x0; i--) {
     db8:	10 33       	cpi	r17, 0x30	; 48
     dba:	59 f7       	brne	.-42     	; 0xd92 <CountDown+0xc>
		draw_string("Game Start In: ", 2,22); // 15*5 = 75 (84 - 75)/2 = 4
		draw_character((0x30 + i), 75,22);
		refresh();
		_delay_ms(1000);
	}
}
     dbc:	df 91       	pop	r29
     dbe:	cf 91       	pop	r28
     dc0:	1f 91       	pop	r17
     dc2:	08 95       	ret

00000dc4 <setupGame>:
void setupGame() {

	// SW0 and SW1 are connected to pins B0 and B1
	// LED1 and LED2 connected to pins B2 and B3
	// 0 for input 1 for output
	DDRB |= 0b00001100;
     dc4:	84 b1       	in	r24, 0x04	; 4
     dc6:	8c 60       	ori	r24, 0x0C	; 12
     dc8:	84 b9       	out	0x04, r24	; 4
    // Teensy LED is connected to D6
    DDRD |= 0b01000000;
     dca:	56 9a       	sbi	0x0a, 6	; 10
    // turn OFF LED initially
	PORTD |= 0b00000000;
     dcc:	8b b1       	in	r24, 0x0b	; 11
     dce:	8b b9       	out	0x0b, r24	; 11
	PORTB |= (1<<2)||(1<<3); //not sure why this is here
     dd0:	28 9a       	sbi	0x05, 0	; 5
	
	//initialise clock
	//CLKPR |= 1 << CLKPCE;
	//CLKPR |= 1 << CLKPS0;
	CPU_PRESCALE(CPU_16MHz);
     dd2:	e1 e6       	ldi	r30, 0x61	; 97
     dd4:	f0 e0       	ldi	r31, 0x00	; 0
     dd6:	80 e8       	ldi	r24, 0x80	; 128
     dd8:	80 83       	st	Z, r24
     dda:	10 82       	st	Z, r1
	
	
	LCDInitialise(LCD_DEFAULT_CONTRAST);
     ddc:	8f e3       	ldi	r24, 0x3F	; 63
     dde:	f4 d5       	rcall	.+3048   	; 0x19c8 <LCDInitialise>
	clear();
     de0:	3a d3       	rcall	.+1652   	; 0x1456 <clear>
	
	PinChangeInit();
     de2:	09 de       	rcall	.-1006   	; 0x9f6 <PinChangeInit>
	TimerInit();
     de4:	42 de       	rcall	.-892    	; 0xa6a <TimerInit>
	
	clear();
     de6:	37 d3       	rcall	.+1646   	; 0x1456 <clear>
	draw_string("ZombieDash v1.0", 4,0); // 15*5 = 75 (84 - 75)/2 = 4
     de8:	88 e1       	ldi	r24, 0x18	; 24
     dea:	91 e0       	ldi	r25, 0x01	; 1
     dec:	64 e0       	ldi	r22, 0x04	; 4
     dee:	40 e0       	ldi	r20, 0x00	; 0
     df0:	a4 d5       	rcall	.+2888   	; 0x193a <draw_string>
	draw_string("Lachlan Robinson", 2,9); // 16*5 = 80 (84 - 80)/2 = 2
     df2:	88 e2       	ldi	r24, 0x28	; 40
     df4:	91 e0       	ldi	r25, 0x01	; 1
     df6:	62 e0       	ldi	r22, 0x02	; 2
     df8:	49 e0       	ldi	r20, 0x09	; 9
     dfa:	9f d5       	rcall	.+2878   	; 0x193a <draw_string>
	draw_string("n8845409", 22, 28); // 8*5 = 40 (84 - 40)/2 = 22
     dfc:	89 e3       	ldi	r24, 0x39	; 57
     dfe:	91 e0       	ldi	r25, 0x01	; 1
     e00:	66 e1       	ldi	r22, 0x16	; 22
     e02:	4c e1       	ldi	r20, 0x1C	; 28
     e04:	9a d5       	rcall	.+2868   	; 0x193a <draw_string>
	refresh();
     e06:	ae d5       	rcall	.+2908   	; 0x1964 <refresh>
	
	seedWithButtonPress();
     e08:	8c df       	rcall	.-232    	; 0xd22 <seedWithButtonPress>
	buttonCheck();
     e0a:	c6 dd       	rcall	.-1140   	; 0x998 <buttonCheck>
	CountDown();
	
}
     e0c:	bc cf       	rjmp	.-136    	; 0xd86 <CountDown>

00000e0e <main>:
#include "my_functions.h"

#define NUM_BLOCKS 10
#define MAX_CLOCK_COUNTER_FOR_100MSECOND 5

int main() {
     e0e:	2f 92       	push	r2
     e10:	3f 92       	push	r3
     e12:	4f 92       	push	r4
     e14:	5f 92       	push	r5
     e16:	6f 92       	push	r6
     e18:	7f 92       	push	r7
     e1a:	8f 92       	push	r8
     e1c:	9f 92       	push	r9
     e1e:	af 92       	push	r10
     e20:	bf 92       	push	r11
     e22:	cf 92       	push	r12
     e24:	df 92       	push	r13
     e26:	ef 92       	push	r14
     e28:	ff 92       	push	r15
     e2a:	0f 93       	push	r16
     e2c:	1f 93       	push	r17
     e2e:	df 93       	push	r29
     e30:	cf 93       	push	r28
     e32:	cd b7       	in	r28, 0x3d	; 61
     e34:	de b7       	in	r29, 0x3e	; 62
     e36:	c3 5c       	subi	r28, 0xC3	; 195
     e38:	d0 40       	sbci	r29, 0x00	; 0
     e3a:	0f b6       	in	r0, 0x3f	; 63
     e3c:	f8 94       	cli
     e3e:	de bf       	out	0x3e, r29	; 62
     e40:	0f be       	out	0x3f, r0	; 63
     e42:	cd bf       	out	0x3d, r28	; 61
	
	// INSERT_CODE_HERE
	//draw_string("eWWZ begins!",0,0);

	// screen setup etc
	setupGame();
     e44:	bf df       	rcall	.-130    	; 0xdc4 <setupGame>
	clear();
     e46:	07 d3       	rcall	.+1550   	; 0x1456 <clear>
	refresh();
     e48:	8d d5       	rcall	.+2842   	; 0x1964 <refresh>
	// sprites
	byte bitHero [] = {
		BYTE( 10100000),
		BYTE( 11100000),
		BYTE( 10100000),
	};
     e4a:	de 01       	movw	r26, r28
     e4c:	11 96       	adiw	r26, 0x01	; 1
     e4e:	e9 e5       	ldi	r30, 0x59	; 89
     e50:	f1 e0       	ldi	r31, 0x01	; 1
     e52:	83 e0       	ldi	r24, 0x03	; 3
     e54:	01 90       	ld	r0, Z+
     e56:	0d 92       	st	X+, r0
     e58:	81 50       	subi	r24, 0x01	; 1
     e5a:	e1 f7       	brne	.-8      	; 0xe54 <main+0x46>
		
	byte bitZombie [] = {
		BYTE( 11100000),
		BYTE( 01000000),
		BYTE( 11100000),
	};
     e5c:	de 01       	movw	r26, r28
     e5e:	14 96       	adiw	r26, 0x04	; 4
     e60:	e6 e5       	ldi	r30, 0x56	; 86
     e62:	f1 e0       	ldi	r31, 0x01	; 1
     e64:	83 e0       	ldi	r24, 0x03	; 3
     e66:	01 90       	ld	r0, Z+
     e68:	0d 92       	st	X+, r0
     e6a:	81 50       	subi	r24, 0x01	; 1
     e6c:	e1 f7       	brne	.-8      	; 0xe66 <main+0x58>
	
	// screen parameters
	screen_x -= width;
     e6e:	e0 91 52 01 	lds	r30, 0x0152
     e72:	f0 e0       	ldi	r31, 0x00	; 0
     e74:	80 91 42 01 	lds	r24, 0x0142
     e78:	90 91 43 01 	lds	r25, 0x0143
     e7c:	8e 1b       	sub	r24, r30
     e7e:	9f 0b       	sbc	r25, r31
     e80:	90 93 43 01 	sts	0x0143, r25
     e84:	80 93 42 01 	sts	0x0142, r24
	screen_y -= height;
     e88:	40 91 53 01 	lds	r20, 0x0153
     e8c:	20 91 46 01 	lds	r18, 0x0146
     e90:	30 91 47 01 	lds	r19, 0x0147
     e94:	24 1b       	sub	r18, r20
     e96:	31 09       	sbc	r19, r1
     e98:	30 93 47 01 	sts	0x0147, r19
     e9c:	20 93 46 01 	sts	0x0146, r18

	int middle_x = screen_x/2 - width;
     ea0:	62 e0       	ldi	r22, 0x02	; 2
     ea2:	70 e0       	ldi	r23, 0x00	; 0
     ea4:	be d6       	rcall	.+3452   	; 0x1c22 <__divmodhi4>
     ea6:	6b 01       	movw	r12, r22
     ea8:	ce 1a       	sub	r12, r30
     eaa:	df 0a       	sbc	r13, r31
	int middle_y = screen_y/2 + 9/2;
     eac:	c9 01       	movw	r24, r18
     eae:	62 e0       	ldi	r22, 0x02	; 2
     eb0:	70 e0       	ldi	r23, 0x00	; 0
     eb2:	b7 d6       	rcall	.+3438   	; 0x1c22 <__divmodhi4>
     eb4:	1b 01       	movw	r2, r22
	byte x, y;
	
	Sprite zombies[8];
	for (int i = 0; i<2; i++) {
		zombie[i] = &zombies[i];
     eb6:	fc e1       	ldi	r31, 0x1C	; 28
     eb8:	4f 2e       	mov	r4, r31
     eba:	51 2c       	mov	r5, r1
     ebc:	4c 0e       	add	r4, r28
     ebe:	5d 1e       	adc	r5, r29
     ec0:	50 92 7f 01 	sts	0x017F, r5
     ec4:	40 92 7e 01 	sts	0x017E, r4
		x = randInRange(1,middle_x-10);
     ec8:	e6 ef       	ldi	r30, 0xF6	; 246
     eca:	8e 2e       	mov	r8, r30
     ecc:	ef ef       	ldi	r30, 0xFF	; 255
     ece:	9e 2e       	mov	r9, r30
     ed0:	8c 0c       	add	r8, r12
     ed2:	9d 1c       	adc	r9, r13
     ed4:	81 e0       	ldi	r24, 0x01	; 1
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	b4 01       	movw	r22, r8
     eda:	3d df       	rcall	.-390    	; 0xd56 <randInRange>
     edc:	18 2f       	mov	r17, r24
		y = randInRange(9, screen_y-1);
     ede:	60 91 46 01 	lds	r22, 0x0146
     ee2:	70 91 47 01 	lds	r23, 0x0147
     ee6:	61 50       	subi	r22, 0x01	; 1
     ee8:	70 40       	sbci	r23, 0x00	; 0
     eea:	89 e0       	ldi	r24, 0x09	; 9
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	33 df       	rcall	.-410    	; 0xd56 <randInRange>
     ef0:	48 2f       	mov	r20, r24
		init_sprite(zombie[i], x , y, width, height, bitZombie);
     ef2:	74 e0       	ldi	r23, 0x04	; 4
     ef4:	a7 2e       	mov	r10, r23
     ef6:	b1 2c       	mov	r11, r1
     ef8:	ac 0e       	add	r10, r28
     efa:	bd 1e       	adc	r11, r29
     efc:	80 91 7e 01 	lds	r24, 0x017E
     f00:	90 91 7f 01 	lds	r25, 0x017F
     f04:	61 2f       	mov	r22, r17
     f06:	20 91 52 01 	lds	r18, 0x0152
     f0a:	00 91 53 01 	lds	r16, 0x0153
     f0e:	75 01       	movw	r14, r10
     f10:	8e d5       	rcall	.+2844   	; 0x1a2e <init_sprite>
	int middle_y = screen_y/2 + 9/2;
	byte x, y;
	
	Sprite zombies[8];
	for (int i = 0; i<2; i++) {
		zombie[i] = &zombies[i];
     f12:	61 e3       	ldi	r22, 0x31	; 49
     f14:	66 2e       	mov	r6, r22
     f16:	71 2c       	mov	r7, r1
     f18:	6c 0e       	add	r6, r28
     f1a:	7d 1e       	adc	r7, r29
     f1c:	70 92 81 01 	sts	0x0181, r7
     f20:	60 92 80 01 	sts	0x0180, r6
		x = randInRange(1,middle_x-10);
     f24:	81 e0       	ldi	r24, 0x01	; 1
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	b4 01       	movw	r22, r8
     f2a:	15 df       	rcall	.-470    	; 0xd56 <randInRange>
     f2c:	18 2f       	mov	r17, r24
		y = randInRange(9, screen_y-1);
     f2e:	60 91 46 01 	lds	r22, 0x0146
     f32:	70 91 47 01 	lds	r23, 0x0147
     f36:	61 50       	subi	r22, 0x01	; 1
     f38:	70 40       	sbci	r23, 0x00	; 0
     f3a:	89 e0       	ldi	r24, 0x09	; 9
     f3c:	90 e0       	ldi	r25, 0x00	; 0
     f3e:	0b df       	rcall	.-490    	; 0xd56 <randInRange>
     f40:	48 2f       	mov	r20, r24
		init_sprite(zombie[i], x , y, width, height, bitZombie);
     f42:	80 91 80 01 	lds	r24, 0x0180
     f46:	90 91 81 01 	lds	r25, 0x0181
     f4a:	61 2f       	mov	r22, r17
     f4c:	20 91 52 01 	lds	r18, 0x0152
     f50:	00 91 53 01 	lds	r16, 0x0153
     f54:	6c d5       	rcall	.+2776   	; 0x1a2e <init_sprite>
	}
	for (int i = 0; i<2; i++) {
		zombie[i] = &zombies[i];
     f56:	50 92 7f 01 	sts	0x017F, r5
     f5a:	40 92 7e 01 	sts	0x017E, r4
		x = randInRange(middle_x+10,screen_x);
     f5e:	8a e0       	ldi	r24, 0x0A	; 10
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	c8 0e       	add	r12, r24
     f64:	d9 1e       	adc	r13, r25
     f66:	60 91 42 01 	lds	r22, 0x0142
     f6a:	70 91 43 01 	lds	r23, 0x0143
     f6e:	c6 01       	movw	r24, r12
     f70:	f2 de       	rcall	.-540    	; 0xd56 <randInRange>
     f72:	18 2f       	mov	r17, r24
		y = randInRange(9, screen_y-1);
     f74:	60 91 46 01 	lds	r22, 0x0146
     f78:	70 91 47 01 	lds	r23, 0x0147
     f7c:	61 50       	subi	r22, 0x01	; 1
     f7e:	70 40       	sbci	r23, 0x00	; 0
     f80:	89 e0       	ldi	r24, 0x09	; 9
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	e8 de       	rcall	.-560    	; 0xd56 <randInRange>
     f86:	48 2f       	mov	r20, r24
		init_sprite(zombie[i+2], x , y, width, height, bitZombie);
     f88:	80 91 82 01 	lds	r24, 0x0182
     f8c:	90 91 83 01 	lds	r25, 0x0183
     f90:	61 2f       	mov	r22, r17
     f92:	20 91 52 01 	lds	r18, 0x0152
     f96:	00 91 53 01 	lds	r16, 0x0153
     f9a:	49 d5       	rcall	.+2706   	; 0x1a2e <init_sprite>
		x = randInRange(1,middle_x-10);
		y = randInRange(9, screen_y-1);
		init_sprite(zombie[i], x , y, width, height, bitZombie);
	}
	for (int i = 0; i<2; i++) {
		zombie[i] = &zombies[i];
     f9c:	70 92 81 01 	sts	0x0181, r7
     fa0:	60 92 80 01 	sts	0x0180, r6
		x = randInRange(middle_x+10,screen_x);
     fa4:	60 91 42 01 	lds	r22, 0x0142
     fa8:	70 91 43 01 	lds	r23, 0x0143
     fac:	c6 01       	movw	r24, r12
     fae:	d3 de       	rcall	.-602    	; 0xd56 <randInRange>
     fb0:	18 2f       	mov	r17, r24
		y = randInRange(9, screen_y-1);
     fb2:	60 91 46 01 	lds	r22, 0x0146
     fb6:	70 91 47 01 	lds	r23, 0x0147
     fba:	61 50       	subi	r22, 0x01	; 1
     fbc:	70 40       	sbci	r23, 0x00	; 0
     fbe:	89 e0       	ldi	r24, 0x09	; 9
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	c9 de       	rcall	.-622    	; 0xd56 <randInRange>
     fc4:	48 2f       	mov	r20, r24
		init_sprite(zombie[i+2], x , y, width, height, bitZombie);
     fc6:	80 91 84 01 	lds	r24, 0x0184
     fca:	90 91 85 01 	lds	r25, 0x0185
     fce:	61 2f       	mov	r22, r17
     fd0:	20 91 52 01 	lds	r18, 0x0152
     fd4:	00 91 53 01 	lds	r16, 0x0153
     fd8:	2a d5       	rcall	.+2644   	; 0x1a2e <init_sprite>
	}
	for (int i = 0; i<2; i++) {
		zombie[i] = &zombies[i];
     fda:	50 92 7f 01 	sts	0x017F, r5
     fde:	40 92 7e 01 	sts	0x017E, r4
		x = randInRange(1,screen_x);
     fe2:	60 91 42 01 	lds	r22, 0x0142
     fe6:	70 91 43 01 	lds	r23, 0x0143
     fea:	81 e0       	ldi	r24, 0x01	; 1
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	b3 de       	rcall	.-666    	; 0xd56 <randInRange>
     ff0:	18 2f       	mov	r17, r24
		y = randInRange(9, middle_y-10);
     ff2:	5a ef       	ldi	r21, 0xFA	; 250
     ff4:	c5 2e       	mov	r12, r21
     ff6:	5f ef       	ldi	r21, 0xFF	; 255
     ff8:	d5 2e       	mov	r13, r21
     ffa:	c2 0c       	add	r12, r2
     ffc:	d3 1c       	adc	r13, r3
     ffe:	89 e0       	ldi	r24, 0x09	; 9
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	b6 01       	movw	r22, r12
    1004:	a8 de       	rcall	.-688    	; 0xd56 <randInRange>
    1006:	48 2f       	mov	r20, r24
		init_sprite(zombie[i+4], x , y, width, height, bitZombie);
    1008:	80 91 86 01 	lds	r24, 0x0186
    100c:	90 91 87 01 	lds	r25, 0x0187
    1010:	61 2f       	mov	r22, r17
    1012:	20 91 52 01 	lds	r18, 0x0152
    1016:	00 91 53 01 	lds	r16, 0x0153
    101a:	09 d5       	rcall	.+2578   	; 0x1a2e <init_sprite>
		x = randInRange(middle_x+10,screen_x);
		y = randInRange(9, screen_y-1);
		init_sprite(zombie[i+2], x , y, width, height, bitZombie);
	}
	for (int i = 0; i<2; i++) {
		zombie[i] = &zombies[i];
    101c:	70 92 81 01 	sts	0x0181, r7
    1020:	60 92 80 01 	sts	0x0180, r6
		x = randInRange(1,screen_x);
    1024:	60 91 42 01 	lds	r22, 0x0142
    1028:	70 91 43 01 	lds	r23, 0x0143
    102c:	81 e0       	ldi	r24, 0x01	; 1
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	92 de       	rcall	.-732    	; 0xd56 <randInRange>
    1032:	18 2f       	mov	r17, r24
		y = randInRange(9, middle_y-10);
    1034:	89 e0       	ldi	r24, 0x09	; 9
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	b6 01       	movw	r22, r12
    103a:	8d de       	rcall	.-742    	; 0xd56 <randInRange>
    103c:	48 2f       	mov	r20, r24
		init_sprite(zombie[i+4], x , y, width, height, bitZombie);
    103e:	80 91 88 01 	lds	r24, 0x0188
    1042:	90 91 89 01 	lds	r25, 0x0189
    1046:	61 2f       	mov	r22, r17
    1048:	20 91 52 01 	lds	r18, 0x0152
    104c:	00 91 53 01 	lds	r16, 0x0153
    1050:	ee d4       	rcall	.+2524   	; 0x1a2e <init_sprite>
	}
	for (int i = 0; i<2; i++) {
		zombie[i] = &zombies[i];
    1052:	50 92 7f 01 	sts	0x017F, r5
    1056:	40 92 7e 01 	sts	0x017E, r4
		x = randInRange(1,screen_x);
    105a:	60 91 42 01 	lds	r22, 0x0142
    105e:	70 91 43 01 	lds	r23, 0x0143
    1062:	81 e0       	ldi	r24, 0x01	; 1
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	77 de       	rcall	.-786    	; 0xd56 <randInRange>
    1068:	18 2f       	mov	r17, r24
		y = randInRange(middle_y+10,screen_y);
    106a:	ee e0       	ldi	r30, 0x0E	; 14
    106c:	f0 e0       	ldi	r31, 0x00	; 0
    106e:	2e 0e       	add	r2, r30
    1070:	3f 1e       	adc	r3, r31
    1072:	60 91 46 01 	lds	r22, 0x0146
    1076:	70 91 47 01 	lds	r23, 0x0147
    107a:	c1 01       	movw	r24, r2
    107c:	6c de       	rcall	.-808    	; 0xd56 <randInRange>
    107e:	48 2f       	mov	r20, r24
		init_sprite(zombie[i+6], x , y, width, height, bitZombie);
    1080:	80 91 8a 01 	lds	r24, 0x018A
    1084:	90 91 8b 01 	lds	r25, 0x018B
    1088:	61 2f       	mov	r22, r17
    108a:	20 91 52 01 	lds	r18, 0x0152
    108e:	00 91 53 01 	lds	r16, 0x0153
    1092:	cd d4       	rcall	.+2458   	; 0x1a2e <init_sprite>
		x = randInRange(1,screen_x);
		y = randInRange(9, middle_y-10);
		init_sprite(zombie[i+4], x , y, width, height, bitZombie);
	}
	for (int i = 0; i<2; i++) {
		zombie[i] = &zombies[i];
    1094:	70 92 81 01 	sts	0x0181, r7
    1098:	60 92 80 01 	sts	0x0180, r6
		x = randInRange(1,screen_x);
    109c:	60 91 42 01 	lds	r22, 0x0142
    10a0:	70 91 43 01 	lds	r23, 0x0143
    10a4:	81 e0       	ldi	r24, 0x01	; 1
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	56 de       	rcall	.-852    	; 0xd56 <randInRange>
    10aa:	18 2f       	mov	r17, r24
		y = randInRange(middle_y+10,screen_y);
    10ac:	60 91 46 01 	lds	r22, 0x0146
    10b0:	70 91 47 01 	lds	r23, 0x0147
    10b4:	c1 01       	movw	r24, r2
    10b6:	4f de       	rcall	.-866    	; 0xd56 <randInRange>
    10b8:	48 2f       	mov	r20, r24
		init_sprite(zombie[i+6], x , y, width, height, bitZombie);
    10ba:	80 91 8c 01 	lds	r24, 0x018C
    10be:	90 91 8d 01 	lds	r25, 0x018D
    10c2:	61 2f       	mov	r22, r17
    10c4:	20 91 52 01 	lds	r18, 0x0152
    10c8:	00 91 53 01 	lds	r16, 0x0153
    10cc:	b0 d4       	rcall	.+2400   	; 0x1a2e <init_sprite>
	init_sprite(zombie, x + 2*width, y, width, height, bitZombie);
	draw_sprite(zombie);
	*/
	
	// Hero sprite parameters
	x = screen_x/2 - width;
    10ce:	20 91 52 01 	lds	r18, 0x0152
    10d2:	80 91 42 01 	lds	r24, 0x0142
    10d6:	90 91 43 01 	lds	r25, 0x0143
    10da:	62 e0       	ldi	r22, 0x02	; 2
    10dc:	70 e0       	ldi	r23, 0x00	; 0
    10de:	a1 d5       	rcall	.+2882   	; 0x1c22 <__divmodhi4>
    10e0:	36 2f       	mov	r19, r22
    10e2:	32 1b       	sub	r19, r18
	y = screen_y/2 + 9/2;
    10e4:	80 91 46 01 	lds	r24, 0x0146
    10e8:	90 91 47 01 	lds	r25, 0x0147
    10ec:	62 e0       	ldi	r22, 0x02	; 2
    10ee:	70 e0       	ldi	r23, 0x00	; 0
    10f0:	98 d5       	rcall	.+2864   	; 0x1c22 <__divmodhi4>
    10f2:	46 2f       	mov	r20, r22
    10f4:	4c 5f       	subi	r20, 0xFC	; 252
	
	Sprite my_sprite;
	my_pointer = &my_sprite;
    10f6:	ce 01       	movw	r24, r28
    10f8:	07 96       	adiw	r24, 0x07	; 7
    10fa:	90 93 7d 01 	sts	0x017D, r25
    10fe:	80 93 7c 01 	sts	0x017C, r24

	init_sprite(my_pointer, x, y, width, height, bitHero);
    1102:	63 2f       	mov	r22, r19
    1104:	00 91 53 01 	lds	r16, 0x0153
    1108:	7e 01       	movw	r14, r28
    110a:	08 94       	sec
    110c:	e1 1c       	adc	r14, r1
    110e:	f1 1c       	adc	r15, r1
    1110:	8e d4       	rcall	.+2332   	; 0x1a2e <init_sprite>
	draw_sprite(my_pointer);
    1112:	80 91 7c 01 	lds	r24, 0x017C
    1116:	90 91 7d 01 	lds	r25, 0x017D
    111a:	b9 d4       	rcall	.+2418   	; 0x1a8e <draw_sprite>
    111c:	0e e7       	ldi	r16, 0x7E	; 126
    111e:	11 e0       	ldi	r17, 0x01	; 1
	for (int i = 0; i<8; i++) {
	draw_sprite(zombie[i]);
    1120:	f8 01       	movw	r30, r16
    1122:	81 91       	ld	r24, Z+
    1124:	91 91       	ld	r25, Z+
    1126:	8f 01       	movw	r16, r30
    1128:	b2 d4       	rcall	.+2404   	; 0x1a8e <draw_sprite>
	Sprite my_sprite;
	my_pointer = &my_sprite;

	init_sprite(my_pointer, x, y, width, height, bitHero);
	draw_sprite(my_pointer);
	for (int i = 0; i<8; i++) {
    112a:	f1 e0       	ldi	r31, 0x01	; 1
    112c:	0e 38       	cpi	r16, 0x8E	; 142
    112e:	1f 07       	cpc	r17, r31
    1130:	b9 f7       	brne	.-18     	; 0x1120 <main+0x312>
	draw_sprite(zombie[i]);
	}
	
	refresh();
    1132:	18 d4       	rcall	.+2096   	; 0x1964 <refresh>
    1134:	88 ee       	ldi	r24, 0xE8	; 232
    1136:	93 e0       	ldi	r25, 0x03	; 3
    1138:	20 e9       	ldi	r18, 0x90	; 144
    113a:	31 e0       	ldi	r19, 0x01	; 1
    113c:	f9 01       	movw	r30, r18
    113e:	31 97       	sbiw	r30, 0x01	; 1
    1140:	f1 f7       	brne	.-4      	; 0x113e <main+0x330>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1142:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1144:	d9 f7       	brne	.-10     	; 0x113c <main+0x32e>
	//int add = 1;
	
	// initialise vars
	int notRIGHT = 1;
	int notLEFT = 1;
	GAMEON = 1;
    1146:	81 e0       	ldi	r24, 0x01	; 1
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	90 93 77 01 	sts	0x0177, r25
    114e:	80 93 76 01 	sts	0x0176, r24
    1152:	41 e0       	ldi	r20, 0x01	; 1
    1154:	e4 2e       	mov	r14, r20
    1156:	f1 2c       	mov	r15, r1
    1158:	31 e0       	ldi	r19, 0x01	; 1
    115a:	c3 2e       	mov	r12, r19
    115c:	d1 2c       	mov	r13, r1
		
		if (RIGHT && notRIGHT) {
			notRIGHT = 0;
			Direction = (Direction-1);
			if (Direction < 0) {
			Direction = 3;
    115e:	23 e0       	ldi	r18, 0x03	; 3
    1160:	a2 2e       	mov	r10, r18
    1162:	b1 2c       	mov	r11, r1
		my_pointer -> y += add;
		my_pointer2 -> y -= add;
		if (my_pointer -> y < 1) add = -add;
		if (my_pointer -> y > screen_y) add = -add;
	*/
		clear();
    1164:	78 d1       	rcall	.+752    	; 0x1456 <clear>

		if (RIGHT == 0) {
    1166:	80 91 6a 01 	lds	r24, 0x016A
    116a:	90 91 6b 01 	lds	r25, 0x016B
    116e:	89 2b       	or	r24, r25
    1170:	19 f4       	brne	.+6      	; 0x1178 <main+0x36a>
    1172:	91 e0       	ldi	r25, 0x01	; 1
    1174:	e9 2e       	mov	r14, r25
    1176:	f1 2c       	mov	r15, r1
			notRIGHT = 1;
		}
		if (LEFT == 0) {
    1178:	80 91 68 01 	lds	r24, 0x0168
    117c:	90 91 69 01 	lds	r25, 0x0169
    1180:	89 2b       	or	r24, r25
    1182:	19 f4       	brne	.+6      	; 0x118a <main+0x37c>
    1184:	81 e0       	ldi	r24, 0x01	; 1
    1186:	c8 2e       	mov	r12, r24
    1188:	d1 2c       	mov	r13, r1
			notLEFT = 1;
		}
		
		if (RIGHT && notRIGHT) {
    118a:	80 91 6a 01 	lds	r24, 0x016A
    118e:	90 91 6b 01 	lds	r25, 0x016B
    1192:	89 2b       	or	r24, r25
    1194:	c1 f0       	breq	.+48     	; 0x11c6 <main+0x3b8>
    1196:	e1 14       	cp	r14, r1
    1198:	f1 04       	cpc	r15, r1
    119a:	a9 f0       	breq	.+42     	; 0x11c6 <main+0x3b8>
			notRIGHT = 0;
			Direction = (Direction-1);
    119c:	80 91 4e 01 	lds	r24, 0x014E
    11a0:	90 91 4f 01 	lds	r25, 0x014F
    11a4:	01 97       	sbiw	r24, 0x01	; 1
    11a6:	90 93 4f 01 	sts	0x014F, r25
    11aa:	80 93 4e 01 	sts	0x014E, r24
			if (Direction < 0) {
    11ae:	80 91 4e 01 	lds	r24, 0x014E
    11b2:	90 91 4f 01 	lds	r25, 0x014F
    11b6:	97 ff       	sbrs	r25, 7
    11b8:	04 c0       	rjmp	.+8      	; 0x11c2 <main+0x3b4>
			Direction = 3;
    11ba:	b0 92 4f 01 	sts	0x014F, r11
    11be:	a0 92 4e 01 	sts	0x014E, r10
    11c2:	ee 24       	eor	r14, r14
    11c4:	ff 24       	eor	r15, r15
			//bitmapb = bitmaptemp;
			//my_pointer -> bitmap = bitmapa;
			//my_pointer2 -> bitmap = bitmapb;
			
		}
		if (LEFT & notLEFT) {
    11c6:	80 91 68 01 	lds	r24, 0x0168
    11ca:	90 91 69 01 	lds	r25, 0x0169
    11ce:	8c 21       	and	r24, r12
    11d0:	9d 21       	and	r25, r13
    11d2:	89 2b       	or	r24, r25
    11d4:	71 f0       	breq	.+28     	; 0x11f2 <main+0x3e4>
			notLEFT = 0;
			Direction = (Direction+1)%4;
    11d6:	80 91 4e 01 	lds	r24, 0x014E
    11da:	90 91 4f 01 	lds	r25, 0x014F
    11de:	01 96       	adiw	r24, 0x01	; 1
    11e0:	64 e0       	ldi	r22, 0x04	; 4
    11e2:	70 e0       	ldi	r23, 0x00	; 0
    11e4:	1e d5       	rcall	.+2620   	; 0x1c22 <__divmodhi4>
    11e6:	90 93 4f 01 	sts	0x014F, r25
    11ea:	80 93 4e 01 	sts	0x014E, r24
    11ee:	cc 24       	eor	r12, r12
    11f0:	dd 24       	eor	r13, r13
			
		}
		
		draw_sprite(my_pointer);
    11f2:	80 91 7c 01 	lds	r24, 0x017C
    11f6:	90 91 7d 01 	lds	r25, 0x017D
    11fa:	49 d4       	rcall	.+2194   	; 0x1a8e <draw_sprite>
    11fc:	0e e7       	ldi	r16, 0x7E	; 126
    11fe:	11 e0       	ldi	r17, 0x01	; 1
		for (int i = 0; i<8; i++) {
		draw_sprite(zombie[i]);
    1200:	f8 01       	movw	r30, r16
    1202:	81 91       	ld	r24, Z+
    1204:	91 91       	ld	r25, Z+
    1206:	8f 01       	movw	r16, r30
    1208:	42 d4       	rcall	.+2180   	; 0x1a8e <draw_sprite>
			Direction = (Direction+1)%4;
			
		}
		
		draw_sprite(my_pointer);
		for (int i = 0; i<8; i++) {
    120a:	f1 e0       	ldi	r31, 0x01	; 1
    120c:	0e 38       	cpi	r16, 0x8E	; 142
    120e:	1f 07       	cpc	r17, r31
    1210:	b9 f7       	brne	.-18     	; 0x1200 <main+0x3f2>
		draw_sprite(zombie[i]);
		}
		drawScreen();	
    1212:	4f dd       	rcall	.-1378   	; 0xcb2 <drawScreen>
		refresh();
    1214:	a7 d3       	rcall	.+1870   	; 0x1964 <refresh>
    1216:	a6 cf       	rjmp	.-180    	; 0x1164 <main+0x356>

00001218 <__subsf3>:
    1218:	50 58       	subi	r21, 0x80	; 128

0000121a <__addsf3>:
    121a:	bb 27       	eor	r27, r27
    121c:	aa 27       	eor	r26, r26
    121e:	0e d0       	rcall	.+28     	; 0x123c <__addsf3x>
    1220:	dc c0       	rjmp	.+440    	; 0x13da <__fp_round>
    1222:	cd d0       	rcall	.+410    	; 0x13be <__fp_pscA>
    1224:	30 f0       	brcs	.+12     	; 0x1232 <__addsf3+0x18>
    1226:	d2 d0       	rcall	.+420    	; 0x13cc <__fp_pscB>
    1228:	20 f0       	brcs	.+8      	; 0x1232 <__addsf3+0x18>
    122a:	31 f4       	brne	.+12     	; 0x1238 <__addsf3+0x1e>
    122c:	9f 3f       	cpi	r25, 0xFF	; 255
    122e:	11 f4       	brne	.+4      	; 0x1234 <__addsf3+0x1a>
    1230:	1e f4       	brtc	.+6      	; 0x1238 <__addsf3+0x1e>
    1232:	c2 c0       	rjmp	.+388    	; 0x13b8 <__fp_nan>
    1234:	0e f4       	brtc	.+2      	; 0x1238 <__addsf3+0x1e>
    1236:	e0 95       	com	r30
    1238:	e7 fb       	bst	r30, 7
    123a:	b8 c0       	rjmp	.+368    	; 0x13ac <__fp_inf>

0000123c <__addsf3x>:
    123c:	e9 2f       	mov	r30, r25
    123e:	de d0       	rcall	.+444    	; 0x13fc <__fp_split3>
    1240:	80 f3       	brcs	.-32     	; 0x1222 <__addsf3+0x8>
    1242:	ba 17       	cp	r27, r26
    1244:	62 07       	cpc	r22, r18
    1246:	73 07       	cpc	r23, r19
    1248:	84 07       	cpc	r24, r20
    124a:	95 07       	cpc	r25, r21
    124c:	18 f0       	brcs	.+6      	; 0x1254 <__addsf3x+0x18>
    124e:	71 f4       	brne	.+28     	; 0x126c <__addsf3x+0x30>
    1250:	9e f5       	brtc	.+102    	; 0x12b8 <__addsf3x+0x7c>
    1252:	f6 c0       	rjmp	.+492    	; 0x1440 <__fp_zero>
    1254:	0e f4       	brtc	.+2      	; 0x1258 <__addsf3x+0x1c>
    1256:	e0 95       	com	r30
    1258:	0b 2e       	mov	r0, r27
    125a:	ba 2f       	mov	r27, r26
    125c:	a0 2d       	mov	r26, r0
    125e:	0b 01       	movw	r0, r22
    1260:	b9 01       	movw	r22, r18
    1262:	90 01       	movw	r18, r0
    1264:	0c 01       	movw	r0, r24
    1266:	ca 01       	movw	r24, r20
    1268:	a0 01       	movw	r20, r0
    126a:	11 24       	eor	r1, r1
    126c:	ff 27       	eor	r31, r31
    126e:	59 1b       	sub	r21, r25
    1270:	99 f0       	breq	.+38     	; 0x1298 <__addsf3x+0x5c>
    1272:	59 3f       	cpi	r21, 0xF9	; 249
    1274:	50 f4       	brcc	.+20     	; 0x128a <__addsf3x+0x4e>
    1276:	50 3e       	cpi	r21, 0xE0	; 224
    1278:	68 f1       	brcs	.+90     	; 0x12d4 <__addsf3x+0x98>
    127a:	1a 16       	cp	r1, r26
    127c:	f0 40       	sbci	r31, 0x00	; 0
    127e:	a2 2f       	mov	r26, r18
    1280:	23 2f       	mov	r18, r19
    1282:	34 2f       	mov	r19, r20
    1284:	44 27       	eor	r20, r20
    1286:	58 5f       	subi	r21, 0xF8	; 248
    1288:	f3 cf       	rjmp	.-26     	; 0x1270 <__addsf3x+0x34>
    128a:	46 95       	lsr	r20
    128c:	37 95       	ror	r19
    128e:	27 95       	ror	r18
    1290:	a7 95       	ror	r26
    1292:	f0 40       	sbci	r31, 0x00	; 0
    1294:	53 95       	inc	r21
    1296:	c9 f7       	brne	.-14     	; 0x128a <__addsf3x+0x4e>
    1298:	7e f4       	brtc	.+30     	; 0x12b8 <__addsf3x+0x7c>
    129a:	1f 16       	cp	r1, r31
    129c:	ba 0b       	sbc	r27, r26
    129e:	62 0b       	sbc	r22, r18
    12a0:	73 0b       	sbc	r23, r19
    12a2:	84 0b       	sbc	r24, r20
    12a4:	ba f0       	brmi	.+46     	; 0x12d4 <__addsf3x+0x98>
    12a6:	91 50       	subi	r25, 0x01	; 1
    12a8:	a1 f0       	breq	.+40     	; 0x12d2 <__addsf3x+0x96>
    12aa:	ff 0f       	add	r31, r31
    12ac:	bb 1f       	adc	r27, r27
    12ae:	66 1f       	adc	r22, r22
    12b0:	77 1f       	adc	r23, r23
    12b2:	88 1f       	adc	r24, r24
    12b4:	c2 f7       	brpl	.-16     	; 0x12a6 <__addsf3x+0x6a>
    12b6:	0e c0       	rjmp	.+28     	; 0x12d4 <__addsf3x+0x98>
    12b8:	ba 0f       	add	r27, r26
    12ba:	62 1f       	adc	r22, r18
    12bc:	73 1f       	adc	r23, r19
    12be:	84 1f       	adc	r24, r20
    12c0:	48 f4       	brcc	.+18     	; 0x12d4 <__addsf3x+0x98>
    12c2:	87 95       	ror	r24
    12c4:	77 95       	ror	r23
    12c6:	67 95       	ror	r22
    12c8:	b7 95       	ror	r27
    12ca:	f7 95       	ror	r31
    12cc:	9e 3f       	cpi	r25, 0xFE	; 254
    12ce:	08 f0       	brcs	.+2      	; 0x12d2 <__addsf3x+0x96>
    12d0:	b3 cf       	rjmp	.-154    	; 0x1238 <__addsf3+0x1e>
    12d2:	93 95       	inc	r25
    12d4:	88 0f       	add	r24, r24
    12d6:	08 f0       	brcs	.+2      	; 0x12da <__addsf3x+0x9e>
    12d8:	99 27       	eor	r25, r25
    12da:	ee 0f       	add	r30, r30
    12dc:	97 95       	ror	r25
    12de:	87 95       	ror	r24
    12e0:	08 95       	ret

000012e2 <__cmpsf2>:
    12e2:	40 d0       	rcall	.+128    	; 0x1364 <__fp_cmp>
    12e4:	08 f4       	brcc	.+2      	; 0x12e8 <__cmpsf2+0x6>
    12e6:	81 e0       	ldi	r24, 0x01	; 1
    12e8:	08 95       	ret

000012ea <__floatunsisf>:
    12ea:	e8 94       	clt
    12ec:	09 c0       	rjmp	.+18     	; 0x1300 <__floatsisf+0x12>

000012ee <__floatsisf>:
    12ee:	97 fb       	bst	r25, 7
    12f0:	3e f4       	brtc	.+14     	; 0x1300 <__floatsisf+0x12>
    12f2:	90 95       	com	r25
    12f4:	80 95       	com	r24
    12f6:	70 95       	com	r23
    12f8:	61 95       	neg	r22
    12fa:	7f 4f       	sbci	r23, 0xFF	; 255
    12fc:	8f 4f       	sbci	r24, 0xFF	; 255
    12fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1300:	99 23       	and	r25, r25
    1302:	a9 f0       	breq	.+42     	; 0x132e <__floatsisf+0x40>
    1304:	f9 2f       	mov	r31, r25
    1306:	96 e9       	ldi	r25, 0x96	; 150
    1308:	bb 27       	eor	r27, r27
    130a:	93 95       	inc	r25
    130c:	f6 95       	lsr	r31
    130e:	87 95       	ror	r24
    1310:	77 95       	ror	r23
    1312:	67 95       	ror	r22
    1314:	b7 95       	ror	r27
    1316:	f1 11       	cpse	r31, r1
    1318:	f8 cf       	rjmp	.-16     	; 0x130a <__floatsisf+0x1c>
    131a:	fa f4       	brpl	.+62     	; 0x135a <__floatsisf+0x6c>
    131c:	bb 0f       	add	r27, r27
    131e:	11 f4       	brne	.+4      	; 0x1324 <__floatsisf+0x36>
    1320:	60 ff       	sbrs	r22, 0
    1322:	1b c0       	rjmp	.+54     	; 0x135a <__floatsisf+0x6c>
    1324:	6f 5f       	subi	r22, 0xFF	; 255
    1326:	7f 4f       	sbci	r23, 0xFF	; 255
    1328:	8f 4f       	sbci	r24, 0xFF	; 255
    132a:	9f 4f       	sbci	r25, 0xFF	; 255
    132c:	16 c0       	rjmp	.+44     	; 0x135a <__floatsisf+0x6c>
    132e:	88 23       	and	r24, r24
    1330:	11 f0       	breq	.+4      	; 0x1336 <__floatsisf+0x48>
    1332:	96 e9       	ldi	r25, 0x96	; 150
    1334:	11 c0       	rjmp	.+34     	; 0x1358 <__floatsisf+0x6a>
    1336:	77 23       	and	r23, r23
    1338:	21 f0       	breq	.+8      	; 0x1342 <__floatsisf+0x54>
    133a:	9e e8       	ldi	r25, 0x8E	; 142
    133c:	87 2f       	mov	r24, r23
    133e:	76 2f       	mov	r23, r22
    1340:	05 c0       	rjmp	.+10     	; 0x134c <__floatsisf+0x5e>
    1342:	66 23       	and	r22, r22
    1344:	71 f0       	breq	.+28     	; 0x1362 <__floatsisf+0x74>
    1346:	96 e8       	ldi	r25, 0x86	; 134
    1348:	86 2f       	mov	r24, r22
    134a:	70 e0       	ldi	r23, 0x00	; 0
    134c:	60 e0       	ldi	r22, 0x00	; 0
    134e:	2a f0       	brmi	.+10     	; 0x135a <__floatsisf+0x6c>
    1350:	9a 95       	dec	r25
    1352:	66 0f       	add	r22, r22
    1354:	77 1f       	adc	r23, r23
    1356:	88 1f       	adc	r24, r24
    1358:	da f7       	brpl	.-10     	; 0x1350 <__floatsisf+0x62>
    135a:	88 0f       	add	r24, r24
    135c:	96 95       	lsr	r25
    135e:	87 95       	ror	r24
    1360:	97 f9       	bld	r25, 7
    1362:	08 95       	ret

00001364 <__fp_cmp>:
    1364:	99 0f       	add	r25, r25
    1366:	00 08       	sbc	r0, r0
    1368:	55 0f       	add	r21, r21
    136a:	aa 0b       	sbc	r26, r26
    136c:	e0 e8       	ldi	r30, 0x80	; 128
    136e:	fe ef       	ldi	r31, 0xFE	; 254
    1370:	16 16       	cp	r1, r22
    1372:	17 06       	cpc	r1, r23
    1374:	e8 07       	cpc	r30, r24
    1376:	f9 07       	cpc	r31, r25
    1378:	c0 f0       	brcs	.+48     	; 0x13aa <__fp_cmp+0x46>
    137a:	12 16       	cp	r1, r18
    137c:	13 06       	cpc	r1, r19
    137e:	e4 07       	cpc	r30, r20
    1380:	f5 07       	cpc	r31, r21
    1382:	98 f0       	brcs	.+38     	; 0x13aa <__fp_cmp+0x46>
    1384:	62 1b       	sub	r22, r18
    1386:	73 0b       	sbc	r23, r19
    1388:	84 0b       	sbc	r24, r20
    138a:	95 0b       	sbc	r25, r21
    138c:	39 f4       	brne	.+14     	; 0x139c <__fp_cmp+0x38>
    138e:	0a 26       	eor	r0, r26
    1390:	61 f0       	breq	.+24     	; 0x13aa <__fp_cmp+0x46>
    1392:	23 2b       	or	r18, r19
    1394:	24 2b       	or	r18, r20
    1396:	25 2b       	or	r18, r21
    1398:	21 f4       	brne	.+8      	; 0x13a2 <__fp_cmp+0x3e>
    139a:	08 95       	ret
    139c:	0a 26       	eor	r0, r26
    139e:	09 f4       	brne	.+2      	; 0x13a2 <__fp_cmp+0x3e>
    13a0:	a1 40       	sbci	r26, 0x01	; 1
    13a2:	a6 95       	lsr	r26
    13a4:	8f ef       	ldi	r24, 0xFF	; 255
    13a6:	81 1d       	adc	r24, r1
    13a8:	81 1d       	adc	r24, r1
    13aa:	08 95       	ret

000013ac <__fp_inf>:
    13ac:	97 f9       	bld	r25, 7
    13ae:	9f 67       	ori	r25, 0x7F	; 127
    13b0:	80 e8       	ldi	r24, 0x80	; 128
    13b2:	70 e0       	ldi	r23, 0x00	; 0
    13b4:	60 e0       	ldi	r22, 0x00	; 0
    13b6:	08 95       	ret

000013b8 <__fp_nan>:
    13b8:	9f ef       	ldi	r25, 0xFF	; 255
    13ba:	80 ec       	ldi	r24, 0xC0	; 192
    13bc:	08 95       	ret

000013be <__fp_pscA>:
    13be:	00 24       	eor	r0, r0
    13c0:	0a 94       	dec	r0
    13c2:	16 16       	cp	r1, r22
    13c4:	17 06       	cpc	r1, r23
    13c6:	18 06       	cpc	r1, r24
    13c8:	09 06       	cpc	r0, r25
    13ca:	08 95       	ret

000013cc <__fp_pscB>:
    13cc:	00 24       	eor	r0, r0
    13ce:	0a 94       	dec	r0
    13d0:	12 16       	cp	r1, r18
    13d2:	13 06       	cpc	r1, r19
    13d4:	14 06       	cpc	r1, r20
    13d6:	05 06       	cpc	r0, r21
    13d8:	08 95       	ret

000013da <__fp_round>:
    13da:	09 2e       	mov	r0, r25
    13dc:	03 94       	inc	r0
    13de:	00 0c       	add	r0, r0
    13e0:	11 f4       	brne	.+4      	; 0x13e6 <__fp_round+0xc>
    13e2:	88 23       	and	r24, r24
    13e4:	52 f0       	brmi	.+20     	; 0x13fa <__fp_round+0x20>
    13e6:	bb 0f       	add	r27, r27
    13e8:	40 f4       	brcc	.+16     	; 0x13fa <__fp_round+0x20>
    13ea:	bf 2b       	or	r27, r31
    13ec:	11 f4       	brne	.+4      	; 0x13f2 <__fp_round+0x18>
    13ee:	60 ff       	sbrs	r22, 0
    13f0:	04 c0       	rjmp	.+8      	; 0x13fa <__fp_round+0x20>
    13f2:	6f 5f       	subi	r22, 0xFF	; 255
    13f4:	7f 4f       	sbci	r23, 0xFF	; 255
    13f6:	8f 4f       	sbci	r24, 0xFF	; 255
    13f8:	9f 4f       	sbci	r25, 0xFF	; 255
    13fa:	08 95       	ret

000013fc <__fp_split3>:
    13fc:	57 fd       	sbrc	r21, 7
    13fe:	90 58       	subi	r25, 0x80	; 128
    1400:	44 0f       	add	r20, r20
    1402:	55 1f       	adc	r21, r21
    1404:	59 f0       	breq	.+22     	; 0x141c <__fp_splitA+0x10>
    1406:	5f 3f       	cpi	r21, 0xFF	; 255
    1408:	71 f0       	breq	.+28     	; 0x1426 <__fp_splitA+0x1a>
    140a:	47 95       	ror	r20

0000140c <__fp_splitA>:
    140c:	88 0f       	add	r24, r24
    140e:	97 fb       	bst	r25, 7
    1410:	99 1f       	adc	r25, r25
    1412:	61 f0       	breq	.+24     	; 0x142c <__fp_splitA+0x20>
    1414:	9f 3f       	cpi	r25, 0xFF	; 255
    1416:	79 f0       	breq	.+30     	; 0x1436 <__fp_splitA+0x2a>
    1418:	87 95       	ror	r24
    141a:	08 95       	ret
    141c:	12 16       	cp	r1, r18
    141e:	13 06       	cpc	r1, r19
    1420:	14 06       	cpc	r1, r20
    1422:	55 1f       	adc	r21, r21
    1424:	f2 cf       	rjmp	.-28     	; 0x140a <__fp_split3+0xe>
    1426:	46 95       	lsr	r20
    1428:	f1 df       	rcall	.-30     	; 0x140c <__fp_splitA>
    142a:	08 c0       	rjmp	.+16     	; 0x143c <__fp_splitA+0x30>
    142c:	16 16       	cp	r1, r22
    142e:	17 06       	cpc	r1, r23
    1430:	18 06       	cpc	r1, r24
    1432:	99 1f       	adc	r25, r25
    1434:	f1 cf       	rjmp	.-30     	; 0x1418 <__fp_splitA+0xc>
    1436:	86 95       	lsr	r24
    1438:	71 05       	cpc	r23, r1
    143a:	61 05       	cpc	r22, r1
    143c:	08 94       	sec
    143e:	08 95       	ret

00001440 <__fp_zero>:
    1440:	e8 94       	clt

00001442 <__fp_szero>:
    1442:	bb 27       	eor	r27, r27
    1444:	66 27       	eor	r22, r22
    1446:	77 27       	eor	r23, r23
    1448:	cb 01       	movw	r24, r22
    144a:	97 f9       	bld	r25, 7
    144c:	08 95       	ret

0000144e <__gesf2>:
    144e:	8a df       	rcall	.-236    	; 0x1364 <__fp_cmp>
    1450:	08 f4       	brcc	.+2      	; 0x1454 <__gesf2+0x6>
    1452:	8f ef       	ldi	r24, 0xFF	; 255
    1454:	08 95       	ret

00001456 <clear>:
    1456:	e0 e9       	ldi	r30, 0x90	; 144
    1458:	f1 e0       	ldi	r31, 0x01	; 1
    145a:	11 92       	st	Z+, r1
    145c:	83 e0       	ldi	r24, 0x03	; 3
    145e:	e8 38       	cpi	r30, 0x88	; 136
    1460:	f8 07       	cpc	r31, r24
    1462:	d9 f7       	brne	.-10     	; 0x145a <clear+0x4>
    1464:	08 95       	ret

00001466 <set_pixel>:
    1466:	84 35       	cpi	r24, 0x54	; 84
    1468:	80 f5       	brcc	.+96     	; 0x14ca <set_pixel+0x64>
    146a:	60 33       	cpi	r22, 0x30	; 48
    146c:	70 f5       	brcc	.+92     	; 0x14ca <set_pixel+0x64>
    146e:	26 2f       	mov	r18, r22
    1470:	26 95       	lsr	r18
    1472:	26 95       	lsr	r18
    1474:	26 95       	lsr	r18
    1476:	67 70       	andi	r22, 0x07	; 7
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	44 23       	and	r20, r20
    147c:	99 f0       	breq	.+38     	; 0x14a4 <set_pixel+0x3e>
    147e:	e4 e5       	ldi	r30, 0x54	; 84
    1480:	2e 9f       	mul	r18, r30
    1482:	f0 01       	movw	r30, r0
    1484:	11 24       	eor	r1, r1
    1486:	e8 0f       	add	r30, r24
    1488:	f9 1f       	adc	r31, r25
    148a:	e0 57       	subi	r30, 0x70	; 112
    148c:	fe 4f       	sbci	r31, 0xFE	; 254
    148e:	81 e0       	ldi	r24, 0x01	; 1
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	02 c0       	rjmp	.+4      	; 0x1498 <set_pixel+0x32>
    1494:	88 0f       	add	r24, r24
    1496:	99 1f       	adc	r25, r25
    1498:	6a 95       	dec	r22
    149a:	e2 f7       	brpl	.-8      	; 0x1494 <set_pixel+0x2e>
    149c:	20 81       	ld	r18, Z
    149e:	28 2b       	or	r18, r24
    14a0:	20 83       	st	Z, r18
    14a2:	08 95       	ret
    14a4:	e4 e5       	ldi	r30, 0x54	; 84
    14a6:	2e 9f       	mul	r18, r30
    14a8:	f0 01       	movw	r30, r0
    14aa:	11 24       	eor	r1, r1
    14ac:	e8 0f       	add	r30, r24
    14ae:	f9 1f       	adc	r31, r25
    14b0:	e0 57       	subi	r30, 0x70	; 112
    14b2:	fe 4f       	sbci	r31, 0xFE	; 254
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	02 c0       	rjmp	.+4      	; 0x14be <set_pixel+0x58>
    14ba:	88 0f       	add	r24, r24
    14bc:	99 1f       	adc	r25, r25
    14be:	6a 95       	dec	r22
    14c0:	e2 f7       	brpl	.-8      	; 0x14ba <set_pixel+0x54>
    14c2:	80 95       	com	r24
    14c4:	20 81       	ld	r18, Z
    14c6:	28 23       	and	r18, r24
    14c8:	20 83       	st	Z, r18
    14ca:	08 95       	ret

000014cc <draw_line>:
    14cc:	2f 92       	push	r2
    14ce:	3f 92       	push	r3
    14d0:	4f 92       	push	r4
    14d2:	5f 92       	push	r5
    14d4:	6f 92       	push	r6
    14d6:	7f 92       	push	r7
    14d8:	8f 92       	push	r8
    14da:	9f 92       	push	r9
    14dc:	af 92       	push	r10
    14de:	bf 92       	push	r11
    14e0:	cf 92       	push	r12
    14e2:	df 92       	push	r13
    14e4:	ef 92       	push	r14
    14e6:	ff 92       	push	r15
    14e8:	0f 93       	push	r16
    14ea:	1f 93       	push	r17
    14ec:	df 93       	push	r29
    14ee:	cf 93       	push	r28
    14f0:	cd b7       	in	r28, 0x3d	; 61
    14f2:	de b7       	in	r29, 0x3e	; 62
    14f4:	66 97       	sbiw	r28, 0x16	; 22
    14f6:	0f b6       	in	r0, 0x3f	; 63
    14f8:	f8 94       	cli
    14fa:	de bf       	out	0x3e, r29	; 62
    14fc:	0f be       	out	0x3f, r0	; 63
    14fe:	cd bf       	out	0x3d, r28	; 61
    1500:	c8 2e       	mov	r12, r24
    1502:	d6 2e       	mov	r13, r22
    1504:	49 87       	std	Y+9, r20	; 0x09
    1506:	2a 87       	std	Y+10, r18	; 0x0a
    1508:	84 17       	cp	r24, r20
    150a:	59 f4       	brne	.+22     	; 0x1522 <draw_line+0x56>
    150c:	16 2f       	mov	r17, r22
    150e:	05 c0       	rjmp	.+10     	; 0x151a <draw_line+0x4e>
    1510:	8c 2d       	mov	r24, r12
    1512:	61 2f       	mov	r22, r17
    1514:	41 e0       	ldi	r20, 0x01	; 1
    1516:	a7 df       	rcall	.-178    	; 0x1466 <set_pixel>
    1518:	1f 5f       	subi	r17, 0xFF	; 255
    151a:	2a 85       	ldd	r18, Y+10	; 0x0a
    151c:	21 17       	cp	r18, r17
    151e:	c0 f7       	brcc	.-16     	; 0x1510 <draw_line+0x44>
    1520:	a3 c1       	rjmp	.+838    	; 0x1868 <draw_line+0x39c>
    1522:	3a 85       	ldd	r19, Y+10	; 0x0a
    1524:	63 17       	cp	r22, r19
    1526:	59 f4       	brne	.+22     	; 0x153e <draw_line+0x72>
    1528:	18 2f       	mov	r17, r24
    152a:	05 c0       	rjmp	.+10     	; 0x1536 <draw_line+0x6a>
    152c:	81 2f       	mov	r24, r17
    152e:	6d 2d       	mov	r22, r13
    1530:	41 e0       	ldi	r20, 0x01	; 1
    1532:	99 df       	rcall	.-206    	; 0x1466 <set_pixel>
    1534:	1f 5f       	subi	r17, 0xFF	; 255
    1536:	49 85       	ldd	r20, Y+9	; 0x09
    1538:	41 17       	cp	r20, r17
    153a:	c0 f7       	brcc	.-16     	; 0x152c <draw_line+0x60>
    153c:	95 c1       	rjmp	.+810    	; 0x1868 <draw_line+0x39c>
    153e:	5a 85       	ldd	r21, Y+10	; 0x0a
    1540:	65 2f       	mov	r22, r21
    1542:	70 e0       	ldi	r23, 0x00	; 0
    1544:	80 e0       	ldi	r24, 0x00	; 0
    1546:	90 e0       	ldi	r25, 0x00	; 0
    1548:	d0 de       	rcall	.-608    	; 0x12ea <__floatunsisf>
    154a:	7b 01       	movw	r14, r22
    154c:	8c 01       	movw	r16, r24
    154e:	8d 2d       	mov	r24, r13
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	9c 87       	std	Y+12, r25	; 0x0c
    1554:	8b 87       	std	Y+11, r24	; 0x0b
    1556:	fc 01       	movw	r30, r24
    1558:	bf 01       	movw	r22, r30
    155a:	88 27       	eor	r24, r24
    155c:	77 fd       	sbrc	r23, 7
    155e:	80 95       	com	r24
    1560:	98 2f       	mov	r25, r24
    1562:	c5 de       	rcall	.-630    	; 0x12ee <__floatsisf>
    1564:	9b 01       	movw	r18, r22
    1566:	ac 01       	movw	r20, r24
    1568:	c8 01       	movw	r24, r16
    156a:	b7 01       	movw	r22, r14
    156c:	55 de       	rcall	.-854    	; 0x1218 <__subsf3>
    156e:	1b 01       	movw	r2, r22
    1570:	2c 01       	movw	r4, r24
    1572:	f9 85       	ldd	r31, Y+9	; 0x09
    1574:	6f 2f       	mov	r22, r31
    1576:	70 e0       	ldi	r23, 0x00	; 0
    1578:	80 e0       	ldi	r24, 0x00	; 0
    157a:	90 e0       	ldi	r25, 0x00	; 0
    157c:	b6 de       	rcall	.-660    	; 0x12ea <__floatunsisf>
    157e:	7b 01       	movw	r14, r22
    1580:	8c 01       	movw	r16, r24
    1582:	ac 2c       	mov	r10, r12
    1584:	bb 24       	eor	r11, r11
    1586:	b5 01       	movw	r22, r10
    1588:	88 27       	eor	r24, r24
    158a:	77 fd       	sbrc	r23, 7
    158c:	80 95       	com	r24
    158e:	98 2f       	mov	r25, r24
    1590:	ae de       	rcall	.-676    	; 0x12ee <__floatsisf>
    1592:	9b 01       	movw	r18, r22
    1594:	ac 01       	movw	r20, r24
    1596:	c8 01       	movw	r24, r16
    1598:	b7 01       	movw	r22, r14
    159a:	3e de       	rcall	.-900    	; 0x1218 <__subsf3>
    159c:	3b 01       	movw	r6, r22
    159e:	4c 01       	movw	r8, r24
    15a0:	c2 01       	movw	r24, r4
    15a2:	b1 01       	movw	r22, r2
    15a4:	a4 01       	movw	r20, r8
    15a6:	93 01       	movw	r18, r6
    15a8:	0e 94 83 02 	call	0x506	; 0x506 <__divsf3>
    15ac:	7b 01       	movw	r14, r22
    15ae:	8c 01       	movw	r16, r24
    15b0:	29 85       	ldd	r18, Y+9	; 0x09
    15b2:	c2 16       	cp	r12, r18
    15b4:	08 f0       	brcs	.+2      	; 0x15b8 <draw_line+0xec>
    15b6:	38 c0       	rjmp	.+112    	; 0x1628 <draw_line+0x15c>
    15b8:	20 e0       	ldi	r18, 0x00	; 0
    15ba:	30 e0       	ldi	r19, 0x00	; 0
    15bc:	40 e8       	ldi	r20, 0x80	; 128
    15be:	5f e3       	ldi	r21, 0x3F	; 63
    15c0:	46 df       	rcall	.-372    	; 0x144e <__gesf2>
    15c2:	18 16       	cp	r1, r24
    15c4:	24 f4       	brge	.+8      	; 0x15ce <draw_line+0x102>
    15c6:	71 e0       	ldi	r23, 0x01	; 1
    15c8:	c7 2e       	mov	r12, r23
    15ca:	d1 2c       	mov	r13, r1
    15cc:	37 c1       	rjmp	.+622    	; 0x183c <draw_line+0x370>
    15ce:	c8 01       	movw	r24, r16
    15d0:	b7 01       	movw	r22, r14
    15d2:	20 e0       	ldi	r18, 0x00	; 0
    15d4:	30 e0       	ldi	r19, 0x00	; 0
    15d6:	40 e8       	ldi	r20, 0x80	; 128
    15d8:	5f e3       	ldi	r21, 0x3F	; 63
    15da:	83 de       	rcall	.-762    	; 0x12e2 <__cmpsf2>
    15dc:	18 16       	cp	r1, r24
    15de:	64 f0       	brlt	.+24     	; 0x15f8 <draw_line+0x12c>
    15e0:	c8 01       	movw	r24, r16
    15e2:	b7 01       	movw	r22, r14
    15e4:	20 e0       	ldi	r18, 0x00	; 0
    15e6:	30 e0       	ldi	r19, 0x00	; 0
    15e8:	40 e0       	ldi	r20, 0x00	; 0
    15ea:	50 e0       	ldi	r21, 0x00	; 0
    15ec:	30 df       	rcall	.-416    	; 0x144e <__gesf2>
    15ee:	18 16       	cp	r1, r24
    15f0:	1c f4       	brge	.+6      	; 0x15f8 <draw_line+0x12c>
    15f2:	cc 24       	eor	r12, r12
    15f4:	dd 24       	eor	r13, r13
    15f6:	50 c0       	rjmp	.+160    	; 0x1698 <draw_line+0x1cc>
    15f8:	c8 01       	movw	r24, r16
    15fa:	b7 01       	movw	r22, r14
    15fc:	20 e0       	ldi	r18, 0x00	; 0
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	40 e0       	ldi	r20, 0x00	; 0
    1602:	50 e0       	ldi	r21, 0x00	; 0
    1604:	6e de       	rcall	.-804    	; 0x12e2 <__cmpsf2>
    1606:	18 16       	cp	r1, r24
    1608:	0c f4       	brge	.+2      	; 0x160c <draw_line+0x140>
    160a:	11 c1       	rjmp	.+546    	; 0x182e <draw_line+0x362>
    160c:	c8 01       	movw	r24, r16
    160e:	b7 01       	movw	r22, r14
    1610:	20 e0       	ldi	r18, 0x00	; 0
    1612:	30 e0       	ldi	r19, 0x00	; 0
    1614:	40 e8       	ldi	r20, 0x80	; 128
    1616:	5f eb       	ldi	r21, 0xBF	; 191
    1618:	1a df       	rcall	.-460    	; 0x144e <__gesf2>
    161a:	18 16       	cp	r1, r24
    161c:	0c f0       	brlt	.+2      	; 0x1620 <draw_line+0x154>
    161e:	07 c1       	rjmp	.+526    	; 0x182e <draw_line+0x362>
    1620:	67 e0       	ldi	r22, 0x07	; 7
    1622:	c6 2e       	mov	r12, r22
    1624:	d1 2c       	mov	r13, r1
    1626:	38 c0       	rjmp	.+112    	; 0x1698 <draw_line+0x1cc>
    1628:	20 e0       	ldi	r18, 0x00	; 0
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	40 e8       	ldi	r20, 0x80	; 128
    162e:	5f e3       	ldi	r21, 0x3F	; 63
    1630:	0e df       	rcall	.-484    	; 0x144e <__gesf2>
    1632:	18 16       	cp	r1, r24
    1634:	24 f4       	brge	.+8      	; 0x163e <draw_line+0x172>
    1636:	55 e0       	ldi	r21, 0x05	; 5
    1638:	c5 2e       	mov	r12, r21
    163a:	d1 2c       	mov	r13, r1
    163c:	ff c0       	rjmp	.+510    	; 0x183c <draw_line+0x370>
    163e:	c8 01       	movw	r24, r16
    1640:	b7 01       	movw	r22, r14
    1642:	20 e0       	ldi	r18, 0x00	; 0
    1644:	30 e0       	ldi	r19, 0x00	; 0
    1646:	40 e8       	ldi	r20, 0x80	; 128
    1648:	5f e3       	ldi	r21, 0x3F	; 63
    164a:	4b de       	rcall	.-874    	; 0x12e2 <__cmpsf2>
    164c:	18 16       	cp	r1, r24
    164e:	6c f0       	brlt	.+26     	; 0x166a <draw_line+0x19e>
    1650:	c8 01       	movw	r24, r16
    1652:	b7 01       	movw	r22, r14
    1654:	20 e0       	ldi	r18, 0x00	; 0
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	40 e0       	ldi	r20, 0x00	; 0
    165a:	50 e0       	ldi	r21, 0x00	; 0
    165c:	f8 de       	rcall	.-528    	; 0x144e <__gesf2>
    165e:	18 16       	cp	r1, r24
    1660:	24 f4       	brge	.+8      	; 0x166a <draw_line+0x19e>
    1662:	44 e0       	ldi	r20, 0x04	; 4
    1664:	c4 2e       	mov	r12, r20
    1666:	d1 2c       	mov	r13, r1
    1668:	17 c0       	rjmp	.+46     	; 0x1698 <draw_line+0x1cc>
    166a:	c8 01       	movw	r24, r16
    166c:	b7 01       	movw	r22, r14
    166e:	20 e0       	ldi	r18, 0x00	; 0
    1670:	30 e0       	ldi	r19, 0x00	; 0
    1672:	40 e0       	ldi	r20, 0x00	; 0
    1674:	50 e0       	ldi	r21, 0x00	; 0
    1676:	35 de       	rcall	.-918    	; 0x12e2 <__cmpsf2>
    1678:	18 16       	cp	r1, r24
    167a:	0c f4       	brge	.+2      	; 0x167e <draw_line+0x1b2>
    167c:	dc c0       	rjmp	.+440    	; 0x1836 <draw_line+0x36a>
    167e:	c8 01       	movw	r24, r16
    1680:	b7 01       	movw	r22, r14
    1682:	20 e0       	ldi	r18, 0x00	; 0
    1684:	30 e0       	ldi	r19, 0x00	; 0
    1686:	40 e8       	ldi	r20, 0x80	; 128
    1688:	5f eb       	ldi	r21, 0xBF	; 191
    168a:	e1 de       	rcall	.-574    	; 0x144e <__gesf2>
    168c:	18 16       	cp	r1, r24
    168e:	0c f0       	brlt	.+2      	; 0x1692 <draw_line+0x1c6>
    1690:	d2 c0       	rjmp	.+420    	; 0x1836 <draw_line+0x36a>
    1692:	33 e0       	ldi	r19, 0x03	; 3
    1694:	c3 2e       	mov	r12, r19
    1696:	d1 2c       	mov	r13, r1
    1698:	4b 85       	ldd	r20, Y+11	; 0x0b
    169a:	5c 85       	ldd	r21, Y+12	; 0x0c
    169c:	5a 83       	std	Y+2, r21	; 0x02
    169e:	49 83       	std	Y+1, r20	; 0x01
    16a0:	be 82       	std	Y+6, r11	; 0x06
    16a2:	ad 82       	std	Y+5, r10	; 0x05
    16a4:	99 85       	ldd	r25, Y+9	; 0x09
    16a6:	89 2f       	mov	r24, r25
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	9c 83       	std	Y+4, r25	; 0x04
    16ac:	8b 83       	std	Y+3, r24	; 0x03
    16ae:	17 01       	movw	r2, r14
    16b0:	28 01       	movw	r4, r16
    16b2:	e1 e0       	ldi	r30, 0x01	; 1
    16b4:	f0 e0       	ldi	r31, 0x00	; 0
    16b6:	f8 87       	std	Y+8, r31	; 0x08
    16b8:	ef 83       	std	Y+7, r30	; 0x07
    16ba:	f7 e0       	ldi	r31, 0x07	; 7
    16bc:	cf 16       	cp	r12, r31
    16be:	d1 04       	cpc	r13, r1
    16c0:	28 f4       	brcc	.+10     	; 0x16cc <draw_line+0x200>
    16c2:	23 e0       	ldi	r18, 0x03	; 3
    16c4:	c2 16       	cp	r12, r18
    16c6:	d1 04       	cpc	r13, r1
    16c8:	40 f4       	brcc	.+16     	; 0x16da <draw_line+0x20e>
    16ca:	04 c0       	rjmp	.+8      	; 0x16d4 <draw_line+0x208>
    16cc:	37 e0       	ldi	r19, 0x07	; 7
    16ce:	c3 16       	cp	r12, r19
    16d0:	d1 04       	cpc	r13, r1
    16d2:	29 f4       	brne	.+10     	; 0x16de <draw_line+0x212>
    16d4:	81 e0       	ldi	r24, 0x01	; 1
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	02 c0       	rjmp	.+4      	; 0x16de <draw_line+0x212>
    16da:	8f ef       	ldi	r24, 0xFF	; 255
    16dc:	9f ef       	ldi	r25, 0xFF	; 255
    16de:	ad 80       	ldd	r10, Y+5	; 0x05
    16e0:	be 80       	ldd	r11, Y+6	; 0x06
    16e2:	0f 2e       	mov	r0, r31
    16e4:	f0 e0       	ldi	r31, 0x00	; 0
    16e6:	6f 2e       	mov	r6, r31
    16e8:	f0 e0       	ldi	r31, 0x00	; 0
    16ea:	7f 2e       	mov	r7, r31
    16ec:	f0 e0       	ldi	r31, 0x00	; 0
    16ee:	8f 2e       	mov	r8, r31
    16f0:	f0 e0       	ldi	r31, 0x00	; 0
    16f2:	9f 2e       	mov	r9, r31
    16f4:	f0 2d       	mov	r31, r0
    16f6:	a2 01       	movw	r20, r4
    16f8:	91 01       	movw	r18, r2
    16fa:	50 58       	subi	r21, 0x80	; 128
    16fc:	2d 87       	std	Y+13, r18	; 0x0d
    16fe:	3e 87       	std	Y+14, r19	; 0x0e
    1700:	4f 87       	std	Y+15, r20	; 0x0f
    1702:	58 8b       	std	Y+16, r21	; 0x10
    1704:	9c 01       	movw	r18, r24
    1706:	44 27       	eor	r20, r20
    1708:	37 fd       	sbrc	r19, 7
    170a:	40 95       	com	r20
    170c:	54 2f       	mov	r21, r20
    170e:	29 8b       	std	Y+17, r18	; 0x11
    1710:	3a 8b       	std	Y+18, r19	; 0x12
    1712:	4b 8b       	std	Y+19, r20	; 0x13
    1714:	5c 8b       	std	Y+20, r21	; 0x14
    1716:	7a c0       	rjmp	.+244    	; 0x180c <draw_line+0x340>
    1718:	4f 81       	ldd	r20, Y+7	; 0x07
    171a:	58 85       	ldd	r21, Y+8	; 0x08
    171c:	45 2b       	or	r20, r21
    171e:	19 f0       	breq	.+6      	; 0x1726 <draw_line+0x25a>
    1720:	8a 2d       	mov	r24, r10
    1722:	69 81       	ldd	r22, Y+1	; 0x01
    1724:	02 c0       	rjmp	.+4      	; 0x172a <draw_line+0x25e>
    1726:	89 81       	ldd	r24, Y+1	; 0x01
    1728:	6a 2d       	mov	r22, r10
    172a:	41 e0       	ldi	r20, 0x01	; 1
    172c:	9c de       	rcall	.-712    	; 0x1466 <set_pixel>
    172e:	c2 01       	movw	r24, r4
    1730:	b1 01       	movw	r22, r2
    1732:	20 e0       	ldi	r18, 0x00	; 0
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	40 e0       	ldi	r20, 0x00	; 0
    1738:	50 e0       	ldi	r21, 0x00	; 0
    173a:	89 de       	rcall	.-750    	; 0x144e <__gesf2>
    173c:	88 23       	and	r24, r24
    173e:	1c f0       	brlt	.+6      	; 0x1746 <draw_line+0x27a>
    1740:	a2 01       	movw	r20, r4
    1742:	91 01       	movw	r18, r2
    1744:	04 c0       	rjmp	.+8      	; 0x174e <draw_line+0x282>
    1746:	2d 85       	ldd	r18, Y+13	; 0x0d
    1748:	3e 85       	ldd	r19, Y+14	; 0x0e
    174a:	4f 85       	ldd	r20, Y+15	; 0x0f
    174c:	58 89       	ldd	r21, Y+16	; 0x10
    174e:	c4 01       	movw	r24, r8
    1750:	b3 01       	movw	r22, r6
    1752:	63 dd       	rcall	.-1338   	; 0x121a <__addsf3>
    1754:	3b 01       	movw	r6, r22
    1756:	4c 01       	movw	r8, r24
    1758:	20 e0       	ldi	r18, 0x00	; 0
    175a:	30 e0       	ldi	r19, 0x00	; 0
    175c:	40 e0       	ldi	r20, 0x00	; 0
    175e:	5f e3       	ldi	r21, 0x3F	; 63
    1760:	76 de       	rcall	.-788    	; 0x144e <__gesf2>
    1762:	18 16       	cp	r1, r24
    1764:	0c f0       	brlt	.+2      	; 0x1768 <draw_line+0x29c>
    1766:	44 c0       	rjmp	.+136    	; 0x17f0 <draw_line+0x324>
    1768:	69 89       	ldd	r22, Y+17	; 0x11
    176a:	7a 89       	ldd	r23, Y+18	; 0x12
    176c:	8b 89       	ldd	r24, Y+19	; 0x13
    176e:	9c 89       	ldd	r25, Y+20	; 0x14
    1770:	be dd       	rcall	.-1156   	; 0x12ee <__floatsisf>
    1772:	9b 01       	movw	r18, r22
    1774:	ac 01       	movw	r20, r24
    1776:	c2 01       	movw	r24, r4
    1778:	b1 01       	movw	r22, r2
    177a:	0e 94 8c 01 	call	0x318	; 0x318 <__mulsf3>
    177e:	7b 01       	movw	r14, r22
    1780:	8c 01       	movw	r16, r24
    1782:	1e 8a       	std	Y+22, r1	; 0x16
    1784:	1d 8a       	std	Y+21, r1	; 0x15
    1786:	20 e0       	ldi	r18, 0x00	; 0
    1788:	30 e0       	ldi	r19, 0x00	; 0
    178a:	40 e0       	ldi	r20, 0x00	; 0
    178c:	50 e0       	ldi	r21, 0x00	; 0
    178e:	5f de       	rcall	.-834    	; 0x144e <__gesf2>
    1790:	18 16       	cp	r1, r24
    1792:	24 f4       	brge	.+8      	; 0x179c <draw_line+0x2d0>
    1794:	81 e0       	ldi	r24, 0x01	; 1
    1796:	90 e0       	ldi	r25, 0x00	; 0
    1798:	9e 8b       	std	Y+22, r25	; 0x16
    179a:	8d 8b       	std	Y+21, r24	; 0x15
    179c:	cc 24       	eor	r12, r12
    179e:	dd 24       	eor	r13, r13
    17a0:	c8 01       	movw	r24, r16
    17a2:	b7 01       	movw	r22, r14
    17a4:	20 e0       	ldi	r18, 0x00	; 0
    17a6:	30 e0       	ldi	r19, 0x00	; 0
    17a8:	40 e0       	ldi	r20, 0x00	; 0
    17aa:	50 e0       	ldi	r21, 0x00	; 0
    17ac:	9a dd       	rcall	.-1228   	; 0x12e2 <__cmpsf2>
    17ae:	88 23       	and	r24, r24
    17b0:	1c f4       	brge	.+6      	; 0x17b8 <draw_line+0x2ec>
    17b2:	21 e0       	ldi	r18, 0x01	; 1
    17b4:	c2 2e       	mov	r12, r18
    17b6:	d1 2c       	mov	r13, r1
    17b8:	ed 89       	ldd	r30, Y+21	; 0x15
    17ba:	fe 89       	ldd	r31, Y+22	; 0x16
    17bc:	ec 19       	sub	r30, r12
    17be:	fd 09       	sbc	r31, r13
    17c0:	31 97       	sbiw	r30, 0x01	; 1
    17c2:	39 f4       	brne	.+14     	; 0x17d2 <draw_line+0x306>
    17c4:	29 81       	ldd	r18, Y+1	; 0x01
    17c6:	3a 81       	ldd	r19, Y+2	; 0x02
    17c8:	2f 5f       	subi	r18, 0xFF	; 255
    17ca:	3f 4f       	sbci	r19, 0xFF	; 255
    17cc:	3a 83       	std	Y+2, r19	; 0x02
    17ce:	29 83       	std	Y+1, r18	; 0x01
    17d0:	06 c0       	rjmp	.+12     	; 0x17de <draw_line+0x312>
    17d2:	49 81       	ldd	r20, Y+1	; 0x01
    17d4:	5a 81       	ldd	r21, Y+2	; 0x02
    17d6:	41 50       	subi	r20, 0x01	; 1
    17d8:	50 40       	sbci	r21, 0x00	; 0
    17da:	5a 83       	std	Y+2, r21	; 0x02
    17dc:	49 83       	std	Y+1, r20	; 0x01
    17de:	c4 01       	movw	r24, r8
    17e0:	b3 01       	movw	r22, r6
    17e2:	20 e0       	ldi	r18, 0x00	; 0
    17e4:	30 e0       	ldi	r19, 0x00	; 0
    17e6:	40 e8       	ldi	r20, 0x80	; 128
    17e8:	5f e3       	ldi	r21, 0x3F	; 63
    17ea:	16 dd       	rcall	.-1492   	; 0x1218 <__subsf3>
    17ec:	3b 01       	movw	r6, r22
    17ee:	4c 01       	movw	r8, r24
    17f0:	8b 81       	ldd	r24, Y+3	; 0x03
    17f2:	9c 81       	ldd	r25, Y+4	; 0x04
    17f4:	ed 81       	ldd	r30, Y+5	; 0x05
    17f6:	fe 81       	ldd	r31, Y+6	; 0x06
    17f8:	e8 17       	cp	r30, r24
    17fa:	f9 07       	cpc	r31, r25
    17fc:	20 f4       	brcc	.+8      	; 0x1806 <draw_line+0x33a>
    17fe:	08 94       	sec
    1800:	a1 1c       	adc	r10, r1
    1802:	b1 1c       	adc	r11, r1
    1804:	03 c0       	rjmp	.+6      	; 0x180c <draw_line+0x340>
    1806:	08 94       	sec
    1808:	a1 08       	sbc	r10, r1
    180a:	b1 08       	sbc	r11, r1
    180c:	2b 81       	ldd	r18, Y+3	; 0x03
    180e:	3c 81       	ldd	r19, Y+4	; 0x04
    1810:	4d 81       	ldd	r20, Y+5	; 0x05
    1812:	5e 81       	ldd	r21, Y+6	; 0x06
    1814:	42 17       	cp	r20, r18
    1816:	53 07       	cpc	r21, r19
    1818:	20 f4       	brcc	.+8      	; 0x1822 <draw_line+0x356>
    181a:	2a 15       	cp	r18, r10
    181c:	3b 05       	cpc	r19, r11
    181e:	20 f1       	brcs	.+72     	; 0x1868 <draw_line+0x39c>
    1820:	7b cf       	rjmp	.-266    	; 0x1718 <draw_line+0x24c>
    1822:	8b 81       	ldd	r24, Y+3	; 0x03
    1824:	9c 81       	ldd	r25, Y+4	; 0x04
    1826:	a8 16       	cp	r10, r24
    1828:	b9 06       	cpc	r11, r25
    182a:	f0 f0       	brcs	.+60     	; 0x1868 <draw_line+0x39c>
    182c:	75 cf       	rjmp	.-278    	; 0x1718 <draw_line+0x24c>
    182e:	96 e0       	ldi	r25, 0x06	; 6
    1830:	c9 2e       	mov	r12, r25
    1832:	d1 2c       	mov	r13, r1
    1834:	03 c0       	rjmp	.+6      	; 0x183c <draw_line+0x370>
    1836:	82 e0       	ldi	r24, 0x02	; 2
    1838:	c8 2e       	mov	r12, r24
    183a:	d1 2c       	mov	r13, r1
    183c:	c4 01       	movw	r24, r8
    183e:	b3 01       	movw	r22, r6
    1840:	a2 01       	movw	r20, r4
    1842:	91 01       	movw	r18, r2
    1844:	0e 94 83 02 	call	0x506	; 0x506 <__divsf3>
    1848:	1b 01       	movw	r2, r22
    184a:	2c 01       	movw	r4, r24
    184c:	ba 82       	std	Y+2, r11	; 0x02
    184e:	a9 82       	std	Y+1, r10	; 0x01
    1850:	eb 85       	ldd	r30, Y+11	; 0x0b
    1852:	fc 85       	ldd	r31, Y+12	; 0x0c
    1854:	fe 83       	std	Y+6, r31	; 0x06
    1856:	ed 83       	std	Y+5, r30	; 0x05
    1858:	3a 85       	ldd	r19, Y+10	; 0x0a
    185a:	23 2f       	mov	r18, r19
    185c:	30 e0       	ldi	r19, 0x00	; 0
    185e:	3c 83       	std	Y+4, r19	; 0x04
    1860:	2b 83       	std	Y+3, r18	; 0x03
    1862:	18 86       	std	Y+8, r1	; 0x08
    1864:	1f 82       	std	Y+7, r1	; 0x07
    1866:	29 cf       	rjmp	.-430    	; 0x16ba <draw_line+0x1ee>
    1868:	66 96       	adiw	r28, 0x16	; 22
    186a:	0f b6       	in	r0, 0x3f	; 63
    186c:	f8 94       	cli
    186e:	de bf       	out	0x3e, r29	; 62
    1870:	0f be       	out	0x3f, r0	; 63
    1872:	cd bf       	out	0x3d, r28	; 61
    1874:	cf 91       	pop	r28
    1876:	df 91       	pop	r29
    1878:	1f 91       	pop	r17
    187a:	0f 91       	pop	r16
    187c:	ff 90       	pop	r15
    187e:	ef 90       	pop	r14
    1880:	df 90       	pop	r13
    1882:	cf 90       	pop	r12
    1884:	bf 90       	pop	r11
    1886:	af 90       	pop	r10
    1888:	9f 90       	pop	r9
    188a:	8f 90       	pop	r8
    188c:	7f 90       	pop	r7
    188e:	6f 90       	pop	r6
    1890:	5f 90       	pop	r5
    1892:	4f 90       	pop	r4
    1894:	3f 90       	pop	r3
    1896:	2f 90       	pop	r2
    1898:	08 95       	ret

0000189a <draw_character>:
    189a:	8f 92       	push	r8
    189c:	9f 92       	push	r9
    189e:	af 92       	push	r10
    18a0:	bf 92       	push	r11
    18a2:	cf 92       	push	r12
    18a4:	df 92       	push	r13
    18a6:	ef 92       	push	r14
    18a8:	ff 92       	push	r15
    18aa:	0f 93       	push	r16
    18ac:	1f 93       	push	r17
    18ae:	cf 93       	push	r28
    18b0:	df 93       	push	r29
    18b2:	d6 2e       	mov	r13, r22
    18b4:	c4 2e       	mov	r12, r20
    18b6:	95 e0       	ldi	r25, 0x05	; 5
    18b8:	89 9f       	mul	r24, r25
    18ba:	c0 01       	movw	r24, r0
    18bc:	11 24       	eor	r1, r1
    18be:	8c 01       	movw	r16, r24
    18c0:	04 5f       	subi	r16, 0xF4	; 244
    18c2:	1f 4f       	sbci	r17, 0xFF	; 255
    18c4:	f1 e0       	ldi	r31, 0x01	; 1
    18c6:	8f 2e       	mov	r8, r31
    18c8:	91 2c       	mov	r9, r1
    18ca:	e1 e1       	ldi	r30, 0x11	; 17
    18cc:	ae 2e       	mov	r10, r30
    18ce:	e0 e0       	ldi	r30, 0x00	; 0
    18d0:	be 2e       	mov	r11, r30
    18d2:	a8 0e       	add	r10, r24
    18d4:	b9 1e       	adc	r11, r25
    18d6:	1d c0       	rjmp	.+58     	; 0x1912 <draw_character+0x78>
    18d8:	6c 2d       	mov	r22, r12
    18da:	6c 0f       	add	r22, r28
    18dc:	a4 01       	movw	r20, r8
    18de:	0c 2e       	mov	r0, r28
    18e0:	02 c0       	rjmp	.+4      	; 0x18e6 <draw_character+0x4c>
    18e2:	44 0f       	add	r20, r20
    18e4:	55 1f       	adc	r21, r21
    18e6:	0a 94       	dec	r0
    18e8:	e2 f7       	brpl	.-8      	; 0x18e2 <draw_character+0x48>
    18ea:	4e 21       	and	r20, r14
    18ec:	5f 21       	and	r21, r15
    18ee:	0c 2e       	mov	r0, r28
    18f0:	02 c0       	rjmp	.+4      	; 0x18f6 <draw_character+0x5c>
    18f2:	55 95       	asr	r21
    18f4:	47 95       	ror	r20
    18f6:	0a 94       	dec	r0
    18f8:	e2 f7       	brpl	.-8      	; 0x18f2 <draw_character+0x58>
    18fa:	8d 2d       	mov	r24, r13
    18fc:	b4 dd       	rcall	.-1176   	; 0x1466 <set_pixel>
    18fe:	21 96       	adiw	r28, 0x01	; 1
    1900:	c8 30       	cpi	r28, 0x08	; 8
    1902:	d1 05       	cpc	r29, r1
    1904:	49 f7       	brne	.-46     	; 0x18d8 <draw_character+0x3e>
    1906:	0f 5f       	subi	r16, 0xFF	; 255
    1908:	1f 4f       	sbci	r17, 0xFF	; 255
    190a:	d3 94       	inc	r13
    190c:	0a 15       	cp	r16, r10
    190e:	1b 05       	cpc	r17, r11
    1910:	39 f0       	breq	.+14     	; 0x1920 <draw_character+0x86>
    1912:	c0 e0       	ldi	r28, 0x00	; 0
    1914:	d0 e0       	ldi	r29, 0x00	; 0
    1916:	f8 01       	movw	r30, r16
    1918:	84 91       	lpm	r24, Z+
    191a:	e8 2e       	mov	r14, r24
    191c:	ff 24       	eor	r15, r15
    191e:	dc cf       	rjmp	.-72     	; 0x18d8 <draw_character+0x3e>
    1920:	df 91       	pop	r29
    1922:	cf 91       	pop	r28
    1924:	1f 91       	pop	r17
    1926:	0f 91       	pop	r16
    1928:	ff 90       	pop	r15
    192a:	ef 90       	pop	r14
    192c:	df 90       	pop	r13
    192e:	cf 90       	pop	r12
    1930:	bf 90       	pop	r11
    1932:	af 90       	pop	r10
    1934:	9f 90       	pop	r9
    1936:	8f 90       	pop	r8
    1938:	08 95       	ret

0000193a <draw_string>:
    193a:	0f 93       	push	r16
    193c:	1f 93       	push	r17
    193e:	cf 93       	push	r28
    1940:	df 93       	push	r29
    1942:	ec 01       	movw	r28, r24
    1944:	16 2f       	mov	r17, r22
    1946:	04 2f       	mov	r16, r20
    1948:	05 c0       	rjmp	.+10     	; 0x1954 <draw_string+0x1a>
    194a:	61 2f       	mov	r22, r17
    194c:	40 2f       	mov	r20, r16
    194e:	a5 df       	rcall	.-182    	; 0x189a <draw_character>
    1950:	21 96       	adiw	r28, 0x01	; 1
    1952:	1b 5f       	subi	r17, 0xFB	; 251
    1954:	88 81       	ld	r24, Y
    1956:	88 23       	and	r24, r24
    1958:	c1 f7       	brne	.-16     	; 0x194a <draw_string+0x10>
    195a:	df 91       	pop	r29
    195c:	cf 91       	pop	r28
    195e:	1f 91       	pop	r17
    1960:	0f 91       	pop	r16
    1962:	08 95       	ret

00001964 <refresh>:
    1964:	cf 93       	push	r28
    1966:	df 93       	push	r29
    1968:	80 e0       	ldi	r24, 0x00	; 0
    196a:	60 e0       	ldi	r22, 0x00	; 0
    196c:	55 d0       	rcall	.+170    	; 0x1a18 <LCDPosition>
    196e:	c0 e9       	ldi	r28, 0x90	; 144
    1970:	d1 e0       	ldi	r29, 0x01	; 1
    1972:	81 e0       	ldi	r24, 0x01	; 1
    1974:	69 91       	ld	r22, Y+
    1976:	07 d0       	rcall	.+14     	; 0x1986 <LCDWrite>
    1978:	83 e0       	ldi	r24, 0x03	; 3
    197a:	c8 38       	cpi	r28, 0x88	; 136
    197c:	d8 07       	cpc	r29, r24
    197e:	c9 f7       	brne	.-14     	; 0x1972 <refresh+0xe>
    1980:	df 91       	pop	r29
    1982:	cf 91       	pop	r28
    1984:	08 95       	ret

00001986 <LCDWrite>:
    1986:	95 b1       	in	r25, 0x05	; 5
    1988:	82 95       	swap	r24
    198a:	88 0f       	add	r24, r24
    198c:	80 7e       	andi	r24, 0xE0	; 224
    198e:	9f 7d       	andi	r25, 0xDF	; 223
    1990:	98 2b       	or	r25, r24
    1992:	95 b9       	out	0x05, r25	; 5
    1994:	5f 98       	cbi	0x0b, 7	; 11
    1996:	27 e0       	ldi	r18, 0x07	; 7
    1998:	30 e0       	ldi	r19, 0x00	; 0
    199a:	70 e0       	ldi	r23, 0x00	; 0
    199c:	8f 98       	cbi	0x11, 7	; 17
    199e:	cb 01       	movw	r24, r22
    19a0:	02 2e       	mov	r0, r18
    19a2:	02 c0       	rjmp	.+4      	; 0x19a8 <LCDWrite+0x22>
    19a4:	95 95       	asr	r25
    19a6:	87 95       	ror	r24
    19a8:	0a 94       	dec	r0
    19aa:	e2 f7       	brpl	.-8      	; 0x19a4 <LCDWrite+0x1e>
    19ac:	80 ff       	sbrs	r24, 0
    19ae:	02 c0       	rjmp	.+4      	; 0x19b4 <LCDWrite+0x2e>
    19b0:	2e 9a       	sbi	0x05, 6	; 5
    19b2:	01 c0       	rjmp	.+2      	; 0x19b6 <LCDWrite+0x30>
    19b4:	2e 98       	cbi	0x05, 6	; 5
    19b6:	8f 9a       	sbi	0x11, 7	; 17
    19b8:	21 50       	subi	r18, 0x01	; 1
    19ba:	30 40       	sbci	r19, 0x00	; 0
    19bc:	8f ef       	ldi	r24, 0xFF	; 255
    19be:	2f 3f       	cpi	r18, 0xFF	; 255
    19c0:	38 07       	cpc	r19, r24
    19c2:	61 f7       	brne	.-40     	; 0x199c <LCDWrite+0x16>
    19c4:	5f 9a       	sbi	0x0b, 7	; 11
    19c6:	08 95       	ret

000019c8 <LCDInitialise>:
    19c8:	1f 93       	push	r17
    19ca:	18 2f       	mov	r17, r24
    19cc:	57 9a       	sbi	0x0a, 7	; 10
    19ce:	24 9a       	sbi	0x04, 4	; 4
    19d0:	25 9a       	sbi	0x04, 5	; 4
    19d2:	26 9a       	sbi	0x04, 6	; 4
    19d4:	87 9a       	sbi	0x10, 7	; 16
    19d6:	2c 98       	cbi	0x05, 4	; 5
    19d8:	5f 9a       	sbi	0x0b, 7	; 11
    19da:	2c 9a       	sbi	0x05, 4	; 5
    19dc:	80 e0       	ldi	r24, 0x00	; 0
    19de:	61 e2       	ldi	r22, 0x21	; 33
    19e0:	d2 df       	rcall	.-92     	; 0x1986 <LCDWrite>
    19e2:	10 68       	ori	r17, 0x80	; 128
    19e4:	80 e0       	ldi	r24, 0x00	; 0
    19e6:	61 2f       	mov	r22, r17
    19e8:	ce df       	rcall	.-100    	; 0x1986 <LCDWrite>
    19ea:	80 e0       	ldi	r24, 0x00	; 0
    19ec:	64 e0       	ldi	r22, 0x04	; 4
    19ee:	cb df       	rcall	.-106    	; 0x1986 <LCDWrite>
    19f0:	80 e0       	ldi	r24, 0x00	; 0
    19f2:	63 e1       	ldi	r22, 0x13	; 19
    19f4:	c8 df       	rcall	.-112    	; 0x1986 <LCDWrite>
    19f6:	80 e0       	ldi	r24, 0x00	; 0
    19f8:	6c e0       	ldi	r22, 0x0C	; 12
    19fa:	c5 df       	rcall	.-118    	; 0x1986 <LCDWrite>
    19fc:	80 e0       	ldi	r24, 0x00	; 0
    19fe:	60 e2       	ldi	r22, 0x20	; 32
    1a00:	c2 df       	rcall	.-124    	; 0x1986 <LCDWrite>
    1a02:	80 e0       	ldi	r24, 0x00	; 0
    1a04:	6c e0       	ldi	r22, 0x0C	; 12
    1a06:	bf df       	rcall	.-130    	; 0x1986 <LCDWrite>
    1a08:	80 e0       	ldi	r24, 0x00	; 0
    1a0a:	60 e4       	ldi	r22, 0x40	; 64
    1a0c:	bc df       	rcall	.-136    	; 0x1986 <LCDWrite>
    1a0e:	80 e0       	ldi	r24, 0x00	; 0
    1a10:	60 e8       	ldi	r22, 0x80	; 128
    1a12:	b9 df       	rcall	.-142    	; 0x1986 <LCDWrite>
    1a14:	1f 91       	pop	r17
    1a16:	08 95       	ret

00001a18 <LCDPosition>:
    1a18:	1f 93       	push	r17
    1a1a:	18 2f       	mov	r17, r24
    1a1c:	60 64       	ori	r22, 0x40	; 64
    1a1e:	80 e0       	ldi	r24, 0x00	; 0
    1a20:	b2 df       	rcall	.-156    	; 0x1986 <LCDWrite>
    1a22:	10 68       	ori	r17, 0x80	; 128
    1a24:	80 e0       	ldi	r24, 0x00	; 0
    1a26:	61 2f       	mov	r22, r17
    1a28:	ae df       	rcall	.-164    	; 0x1986 <LCDWrite>
    1a2a:	1f 91       	pop	r17
    1a2c:	08 95       	ret

00001a2e <init_sprite>:
    1a2e:	8f 92       	push	r8
    1a30:	9f 92       	push	r9
    1a32:	af 92       	push	r10
    1a34:	bf 92       	push	r11
    1a36:	cf 92       	push	r12
    1a38:	df 92       	push	r13
    1a3a:	ef 92       	push	r14
    1a3c:	ff 92       	push	r15
    1a3e:	0f 93       	push	r16
    1a40:	1f 93       	push	r17
    1a42:	4c 01       	movw	r8, r24
    1a44:	a4 2e       	mov	r10, r20
    1a46:	12 2f       	mov	r17, r18
    1a48:	70 e0       	ldi	r23, 0x00	; 0
    1a4a:	80 e0       	ldi	r24, 0x00	; 0
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	4d dc       	rcall	.-1894   	; 0x12ea <__floatunsisf>
    1a50:	f4 01       	movw	r30, r8
    1a52:	60 83       	st	Z, r22
    1a54:	71 83       	std	Z+1, r23	; 0x01
    1a56:	82 83       	std	Z+2, r24	; 0x02
    1a58:	93 83       	std	Z+3, r25	; 0x03
    1a5a:	bb 24       	eor	r11, r11
    1a5c:	cc 24       	eor	r12, r12
    1a5e:	dd 24       	eor	r13, r13
    1a60:	c6 01       	movw	r24, r12
    1a62:	b5 01       	movw	r22, r10
    1a64:	42 dc       	rcall	.-1916   	; 0x12ea <__floatunsisf>
    1a66:	f4 01       	movw	r30, r8
    1a68:	64 83       	std	Z+4, r22	; 0x04
    1a6a:	75 83       	std	Z+5, r23	; 0x05
    1a6c:	86 83       	std	Z+6, r24	; 0x06
    1a6e:	97 83       	std	Z+7, r25	; 0x07
    1a70:	10 87       	std	Z+8, r17	; 0x08
    1a72:	01 87       	std	Z+9, r16	; 0x09
    1a74:	f4 86       	std	Z+12, r15	; 0x0c
    1a76:	e3 86       	std	Z+11, r14	; 0x0b
    1a78:	1f 91       	pop	r17
    1a7a:	0f 91       	pop	r16
    1a7c:	ff 90       	pop	r15
    1a7e:	ef 90       	pop	r14
    1a80:	df 90       	pop	r13
    1a82:	cf 90       	pop	r12
    1a84:	bf 90       	pop	r11
    1a86:	af 90       	pop	r10
    1a88:	9f 90       	pop	r9
    1a8a:	8f 90       	pop	r8
    1a8c:	08 95       	ret

00001a8e <draw_sprite>:
    1a8e:	2f 92       	push	r2
    1a90:	3f 92       	push	r3
    1a92:	4f 92       	push	r4
    1a94:	5f 92       	push	r5
    1a96:	7f 92       	push	r7
    1a98:	8f 92       	push	r8
    1a9a:	9f 92       	push	r9
    1a9c:	af 92       	push	r10
    1a9e:	bf 92       	push	r11
    1aa0:	cf 92       	push	r12
    1aa2:	df 92       	push	r13
    1aa4:	ef 92       	push	r14
    1aa6:	ff 92       	push	r15
    1aa8:	0f 93       	push	r16
    1aaa:	1f 93       	push	r17
    1aac:	df 93       	push	r29
    1aae:	cf 93       	push	r28
    1ab0:	00 d0       	rcall	.+0      	; 0x1ab2 <draw_sprite+0x24>
    1ab2:	00 d0       	rcall	.+0      	; 0x1ab4 <draw_sprite+0x26>
    1ab4:	cd b7       	in	r28, 0x3d	; 61
    1ab6:	de b7       	in	r29, 0x3e	; 62
    1ab8:	2c 01       	movw	r4, r24
    1aba:	dc 01       	movw	r26, r24
    1abc:	1a 96       	adiw	r26, 0x0a	; 10
    1abe:	8c 91       	ld	r24, X
    1ac0:	88 23       	and	r24, r24
    1ac2:	09 f4       	brne	.+2      	; 0x1ac6 <draw_sprite+0x38>
    1ac4:	98 c0       	rjmp	.+304    	; 0x1bf6 <draw_sprite+0x168>
    1ac6:	22 24       	eor	r2, r2
    1ac8:	33 24       	eor	r3, r3
    1aca:	1a 82       	std	Y+2, r1	; 0x02
    1acc:	19 82       	std	Y+1, r1	; 0x01
    1ace:	89 c0       	rjmp	.+274    	; 0x1be2 <draw_sprite+0x154>
    1ad0:	e9 81       	ldd	r30, Y+1	; 0x01
    1ad2:	fa 81       	ldd	r31, Y+2	; 0x02
    1ad4:	bf 01       	movw	r22, r30
    1ad6:	88 27       	eor	r24, r24
    1ad8:	77 fd       	sbrc	r23, 7
    1ada:	80 95       	com	r24
    1adc:	98 2f       	mov	r25, r24
    1ade:	07 dc       	rcall	.-2034   	; 0x12ee <__floatsisf>
    1ae0:	d2 01       	movw	r26, r4
    1ae2:	14 96       	adiw	r26, 0x04	; 4
    1ae4:	2d 91       	ld	r18, X+
    1ae6:	3d 91       	ld	r19, X+
    1ae8:	4d 91       	ld	r20, X+
    1aea:	5c 91       	ld	r21, X
    1aec:	17 97       	sbiw	r26, 0x07	; 7
    1aee:	95 db       	rcall	.-2262   	; 0x121a <__addsf3>
    1af0:	5b 01       	movw	r10, r22
    1af2:	6c 01       	movw	r12, r24
    1af4:	20 e0       	ldi	r18, 0x00	; 0
    1af6:	30 e0       	ldi	r19, 0x00	; 0
    1af8:	40 e0       	ldi	r20, 0x00	; 0
    1afa:	50 e0       	ldi	r21, 0x00	; 0
    1afc:	f2 db       	rcall	.-2076   	; 0x12e2 <__cmpsf2>
    1afe:	87 fd       	sbrc	r24, 7
    1b00:	6a c0       	rjmp	.+212    	; 0x1bd6 <draw_sprite+0x148>
    1b02:	c6 01       	movw	r24, r12
    1b04:	b5 01       	movw	r22, r10
    1b06:	20 e0       	ldi	r18, 0x00	; 0
    1b08:	30 e0       	ldi	r19, 0x00	; 0
    1b0a:	40 e4       	ldi	r20, 0x40	; 64
    1b0c:	52 e4       	ldi	r21, 0x42	; 66
    1b0e:	9f dc       	rcall	.-1730   	; 0x144e <__gesf2>
    1b10:	87 ff       	sbrs	r24, 7
    1b12:	71 c0       	rjmp	.+226    	; 0x1bf6 <draw_sprite+0x168>
    1b14:	1c 82       	std	Y+4, r1	; 0x04
    1b16:	1b 82       	std	Y+3, r1	; 0x03
    1b18:	47 c0       	rjmp	.+142    	; 0x1ba8 <draw_sprite+0x11a>
    1b1a:	d2 01       	movw	r26, r4
    1b1c:	1b 96       	adiw	r26, 0x0b	; 11
    1b1e:	ed 91       	ld	r30, X+
    1b20:	fc 91       	ld	r31, X
    1b22:	1c 97       	sbiw	r26, 0x0c	; 12
    1b24:	e2 0d       	add	r30, r2
    1b26:	f3 1d       	adc	r31, r3
    1b28:	70 80       	ld	r7, Z
    1b2a:	eb 81       	ldd	r30, Y+3	; 0x03
    1b2c:	fc 81       	ldd	r31, Y+4	; 0x04
    1b2e:	bf 01       	movw	r22, r30
    1b30:	88 27       	eor	r24, r24
    1b32:	77 fd       	sbrc	r23, 7
    1b34:	80 95       	com	r24
    1b36:	98 2f       	mov	r25, r24
    1b38:	da db       	rcall	.-2124   	; 0x12ee <__floatsisf>
    1b3a:	d2 01       	movw	r26, r4
    1b3c:	2d 91       	ld	r18, X+
    1b3e:	3d 91       	ld	r19, X+
    1b40:	4d 91       	ld	r20, X+
    1b42:	5c 91       	ld	r21, X
    1b44:	6a db       	rcall	.-2348   	; 0x121a <__addsf3>
    1b46:	7b 01       	movw	r14, r22
    1b48:	8c 01       	movw	r16, r24
    1b4a:	20 e0       	ldi	r18, 0x00	; 0
    1b4c:	30 e0       	ldi	r19, 0x00	; 0
    1b4e:	40 e0       	ldi	r20, 0x00	; 0
    1b50:	50 e0       	ldi	r21, 0x00	; 0
    1b52:	7d dc       	rcall	.-1798   	; 0x144e <__gesf2>
    1b54:	88 23       	and	r24, r24
    1b56:	dc f0       	brlt	.+54     	; 0x1b8e <draw_sprite+0x100>
    1b58:	c8 01       	movw	r24, r16
    1b5a:	b7 01       	movw	r22, r14
    1b5c:	20 e0       	ldi	r18, 0x00	; 0
    1b5e:	30 e0       	ldi	r19, 0x00	; 0
    1b60:	48 ea       	ldi	r20, 0xA8	; 168
    1b62:	52 e4       	ldi	r21, 0x42	; 66
    1b64:	be db       	rcall	.-2180   	; 0x12e2 <__cmpsf2>
    1b66:	88 23       	and	r24, r24
    1b68:	94 f4       	brge	.+36     	; 0x1b8e <draw_sprite+0x100>
    1b6a:	78 20       	and	r7, r8
    1b6c:	81 f0       	breq	.+32     	; 0x1b8e <draw_sprite+0x100>
    1b6e:	c8 01       	movw	r24, r16
    1b70:	b7 01       	movw	r22, r14
    1b72:	0e 94 63 01 	call	0x2c6	; 0x2c6 <__fixunssfsi>
    1b76:	7b 01       	movw	r14, r22
    1b78:	8c 01       	movw	r16, r24
    1b7a:	c6 01       	movw	r24, r12
    1b7c:	b5 01       	movw	r22, r10
    1b7e:	0e 94 63 01 	call	0x2c6	; 0x2c6 <__fixunssfsi>
    1b82:	9b 01       	movw	r18, r22
    1b84:	ac 01       	movw	r20, r24
    1b86:	8e 2d       	mov	r24, r14
    1b88:	62 2f       	mov	r22, r18
    1b8a:	41 e0       	ldi	r20, 0x01	; 1
    1b8c:	6c dc       	rcall	.-1832   	; 0x1466 <set_pixel>
    1b8e:	eb 81       	ldd	r30, Y+3	; 0x03
    1b90:	fc 81       	ldd	r31, Y+4	; 0x04
    1b92:	31 96       	adiw	r30, 0x01	; 1
    1b94:	fc 83       	std	Y+4, r31	; 0x04
    1b96:	eb 83       	std	Y+3, r30	; 0x03
    1b98:	cf 01       	movw	r24, r30
    1b9a:	87 70       	andi	r24, 0x07	; 7
    1b9c:	90 70       	andi	r25, 0x00	; 0
    1b9e:	89 2b       	or	r24, r25
    1ba0:	39 f4       	brne	.+14     	; 0x1bb0 <draw_sprite+0x122>
    1ba2:	08 94       	sec
    1ba4:	21 1c       	adc	r2, r1
    1ba6:	31 1c       	adc	r3, r1
    1ba8:	90 e8       	ldi	r25, 0x80	; 128
    1baa:	89 2e       	mov	r8, r25
    1bac:	91 2c       	mov	r9, r1
    1bae:	02 c0       	rjmp	.+4      	; 0x1bb4 <draw_sprite+0x126>
    1bb0:	95 94       	asr	r9
    1bb2:	87 94       	ror	r8
    1bb4:	d2 01       	movw	r26, r4
    1bb6:	18 96       	adiw	r26, 0x08	; 8
    1bb8:	8c 91       	ld	r24, X
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	eb 81       	ldd	r30, Y+3	; 0x03
    1bbe:	fc 81       	ldd	r31, Y+4	; 0x04
    1bc0:	e8 17       	cp	r30, r24
    1bc2:	f9 07       	cpc	r31, r25
    1bc4:	0c f4       	brge	.+2      	; 0x1bc8 <draw_sprite+0x13a>
    1bc6:	a9 cf       	rjmp	.-174    	; 0x1b1a <draw_sprite+0x8c>
    1bc8:	87 70       	andi	r24, 0x07	; 7
    1bca:	90 70       	andi	r25, 0x00	; 0
    1bcc:	89 2b       	or	r24, r25
    1bce:	19 f0       	breq	.+6      	; 0x1bd6 <draw_sprite+0x148>
    1bd0:	08 94       	sec
    1bd2:	21 1c       	adc	r2, r1
    1bd4:	31 1c       	adc	r3, r1
    1bd6:	29 81       	ldd	r18, Y+1	; 0x01
    1bd8:	3a 81       	ldd	r19, Y+2	; 0x02
    1bda:	2f 5f       	subi	r18, 0xFF	; 255
    1bdc:	3f 4f       	sbci	r19, 0xFF	; 255
    1bde:	3a 83       	std	Y+2, r19	; 0x02
    1be0:	29 83       	std	Y+1, r18	; 0x01
    1be2:	d2 01       	movw	r26, r4
    1be4:	19 96       	adiw	r26, 0x09	; 9
    1be6:	8c 91       	ld	r24, X
    1be8:	90 e0       	ldi	r25, 0x00	; 0
    1bea:	e9 81       	ldd	r30, Y+1	; 0x01
    1bec:	fa 81       	ldd	r31, Y+2	; 0x02
    1bee:	e8 17       	cp	r30, r24
    1bf0:	f9 07       	cpc	r31, r25
    1bf2:	0c f4       	brge	.+2      	; 0x1bf6 <draw_sprite+0x168>
    1bf4:	6d cf       	rjmp	.-294    	; 0x1ad0 <draw_sprite+0x42>
    1bf6:	0f 90       	pop	r0
    1bf8:	0f 90       	pop	r0
    1bfa:	0f 90       	pop	r0
    1bfc:	0f 90       	pop	r0
    1bfe:	cf 91       	pop	r28
    1c00:	df 91       	pop	r29
    1c02:	1f 91       	pop	r17
    1c04:	0f 91       	pop	r16
    1c06:	ff 90       	pop	r15
    1c08:	ef 90       	pop	r14
    1c0a:	df 90       	pop	r13
    1c0c:	cf 90       	pop	r12
    1c0e:	bf 90       	pop	r11
    1c10:	af 90       	pop	r10
    1c12:	9f 90       	pop	r9
    1c14:	8f 90       	pop	r8
    1c16:	7f 90       	pop	r7
    1c18:	5f 90       	pop	r5
    1c1a:	4f 90       	pop	r4
    1c1c:	3f 90       	pop	r3
    1c1e:	2f 90       	pop	r2
    1c20:	08 95       	ret

00001c22 <__divmodhi4>:
    1c22:	97 fb       	bst	r25, 7
    1c24:	09 2e       	mov	r0, r25
    1c26:	07 26       	eor	r0, r23
    1c28:	0a d0       	rcall	.+20     	; 0x1c3e <__divmodhi4_neg1>
    1c2a:	77 fd       	sbrc	r23, 7
    1c2c:	04 d0       	rcall	.+8      	; 0x1c36 <__divmodhi4_neg2>
    1c2e:	0c d0       	rcall	.+24     	; 0x1c48 <__udivmodhi4>
    1c30:	06 d0       	rcall	.+12     	; 0x1c3e <__divmodhi4_neg1>
    1c32:	00 20       	and	r0, r0
    1c34:	1a f4       	brpl	.+6      	; 0x1c3c <__divmodhi4_exit>

00001c36 <__divmodhi4_neg2>:
    1c36:	70 95       	com	r23
    1c38:	61 95       	neg	r22
    1c3a:	7f 4f       	sbci	r23, 0xFF	; 255

00001c3c <__divmodhi4_exit>:
    1c3c:	08 95       	ret

00001c3e <__divmodhi4_neg1>:
    1c3e:	f6 f7       	brtc	.-4      	; 0x1c3c <__divmodhi4_exit>
    1c40:	90 95       	com	r25
    1c42:	81 95       	neg	r24
    1c44:	9f 4f       	sbci	r25, 0xFF	; 255
    1c46:	08 95       	ret

00001c48 <__udivmodhi4>:
    1c48:	aa 1b       	sub	r26, r26
    1c4a:	bb 1b       	sub	r27, r27
    1c4c:	51 e1       	ldi	r21, 0x11	; 17
    1c4e:	07 c0       	rjmp	.+14     	; 0x1c5e <__udivmodhi4_ep>

00001c50 <__udivmodhi4_loop>:
    1c50:	aa 1f       	adc	r26, r26
    1c52:	bb 1f       	adc	r27, r27
    1c54:	a6 17       	cp	r26, r22
    1c56:	b7 07       	cpc	r27, r23
    1c58:	10 f0       	brcs	.+4      	; 0x1c5e <__udivmodhi4_ep>
    1c5a:	a6 1b       	sub	r26, r22
    1c5c:	b7 0b       	sbc	r27, r23

00001c5e <__udivmodhi4_ep>:
    1c5e:	88 1f       	adc	r24, r24
    1c60:	99 1f       	adc	r25, r25
    1c62:	5a 95       	dec	r21
    1c64:	a9 f7       	brne	.-22     	; 0x1c50 <__udivmodhi4_loop>
    1c66:	80 95       	com	r24
    1c68:	90 95       	com	r25
    1c6a:	bc 01       	movw	r22, r24
    1c6c:	cd 01       	movw	r24, r26
    1c6e:	08 95       	ret

00001c70 <__prologue_saves__>:
    1c70:	2f 92       	push	r2
    1c72:	3f 92       	push	r3
    1c74:	4f 92       	push	r4
    1c76:	5f 92       	push	r5
    1c78:	6f 92       	push	r6
    1c7a:	7f 92       	push	r7
    1c7c:	8f 92       	push	r8
    1c7e:	9f 92       	push	r9
    1c80:	af 92       	push	r10
    1c82:	bf 92       	push	r11
    1c84:	cf 92       	push	r12
    1c86:	df 92       	push	r13
    1c88:	ef 92       	push	r14
    1c8a:	ff 92       	push	r15
    1c8c:	0f 93       	push	r16
    1c8e:	1f 93       	push	r17
    1c90:	cf 93       	push	r28
    1c92:	df 93       	push	r29
    1c94:	cd b7       	in	r28, 0x3d	; 61
    1c96:	de b7       	in	r29, 0x3e	; 62
    1c98:	ca 1b       	sub	r28, r26
    1c9a:	db 0b       	sbc	r29, r27
    1c9c:	0f b6       	in	r0, 0x3f	; 63
    1c9e:	f8 94       	cli
    1ca0:	de bf       	out	0x3e, r29	; 62
    1ca2:	0f be       	out	0x3f, r0	; 63
    1ca4:	cd bf       	out	0x3d, r28	; 61
    1ca6:	09 94       	ijmp

00001ca8 <__epilogue_restores__>:
    1ca8:	2a 88       	ldd	r2, Y+18	; 0x12
    1caa:	39 88       	ldd	r3, Y+17	; 0x11
    1cac:	48 88       	ldd	r4, Y+16	; 0x10
    1cae:	5f 84       	ldd	r5, Y+15	; 0x0f
    1cb0:	6e 84       	ldd	r6, Y+14	; 0x0e
    1cb2:	7d 84       	ldd	r7, Y+13	; 0x0d
    1cb4:	8c 84       	ldd	r8, Y+12	; 0x0c
    1cb6:	9b 84       	ldd	r9, Y+11	; 0x0b
    1cb8:	aa 84       	ldd	r10, Y+10	; 0x0a
    1cba:	b9 84       	ldd	r11, Y+9	; 0x09
    1cbc:	c8 84       	ldd	r12, Y+8	; 0x08
    1cbe:	df 80       	ldd	r13, Y+7	; 0x07
    1cc0:	ee 80       	ldd	r14, Y+6	; 0x06
    1cc2:	fd 80       	ldd	r15, Y+5	; 0x05
    1cc4:	0c 81       	ldd	r16, Y+4	; 0x04
    1cc6:	1b 81       	ldd	r17, Y+3	; 0x03
    1cc8:	aa 81       	ldd	r26, Y+2	; 0x02
    1cca:	b9 81       	ldd	r27, Y+1	; 0x01
    1ccc:	ce 0f       	add	r28, r30
    1cce:	d1 1d       	adc	r29, r1
    1cd0:	0f b6       	in	r0, 0x3f	; 63
    1cd2:	f8 94       	cli
    1cd4:	de bf       	out	0x3e, r29	; 62
    1cd6:	0f be       	out	0x3f, r0	; 63
    1cd8:	cd bf       	out	0x3d, r28	; 61
    1cda:	ed 01       	movw	r28, r26
    1cdc:	08 95       	ret

00001cde <do_rand>:
    1cde:	a0 e0       	ldi	r26, 0x00	; 0
    1ce0:	b0 e0       	ldi	r27, 0x00	; 0
    1ce2:	e4 e7       	ldi	r30, 0x74	; 116
    1ce4:	fe e0       	ldi	r31, 0x0E	; 14
    1ce6:	cc cf       	rjmp	.-104    	; 0x1c80 <__prologue_saves__+0x10>
    1ce8:	ec 01       	movw	r28, r24
    1cea:	a8 80       	ld	r10, Y
    1cec:	b9 80       	ldd	r11, Y+1	; 0x01
    1cee:	ca 80       	ldd	r12, Y+2	; 0x02
    1cf0:	db 80       	ldd	r13, Y+3	; 0x03
    1cf2:	a1 14       	cp	r10, r1
    1cf4:	b1 04       	cpc	r11, r1
    1cf6:	c1 04       	cpc	r12, r1
    1cf8:	d1 04       	cpc	r13, r1
    1cfa:	41 f4       	brne	.+16     	; 0x1d0c <do_rand+0x2e>
    1cfc:	84 e2       	ldi	r24, 0x24	; 36
    1cfe:	a8 2e       	mov	r10, r24
    1d00:	89 ed       	ldi	r24, 0xD9	; 217
    1d02:	b8 2e       	mov	r11, r24
    1d04:	8b e5       	ldi	r24, 0x5B	; 91
    1d06:	c8 2e       	mov	r12, r24
    1d08:	87 e0       	ldi	r24, 0x07	; 7
    1d0a:	d8 2e       	mov	r13, r24
    1d0c:	c6 01       	movw	r24, r12
    1d0e:	b5 01       	movw	r22, r10
    1d10:	2d e1       	ldi	r18, 0x1D	; 29
    1d12:	33 ef       	ldi	r19, 0xF3	; 243
    1d14:	41 e0       	ldi	r20, 0x01	; 1
    1d16:	50 e0       	ldi	r21, 0x00	; 0
    1d18:	58 d0       	rcall	.+176    	; 0x1dca <__divmodsi4>
    1d1a:	27 ea       	ldi	r18, 0xA7	; 167
    1d1c:	31 e4       	ldi	r19, 0x41	; 65
    1d1e:	40 e0       	ldi	r20, 0x00	; 0
    1d20:	50 e0       	ldi	r21, 0x00	; 0
    1d22:	34 d0       	rcall	.+104    	; 0x1d8c <__mulsi3>
    1d24:	7b 01       	movw	r14, r22
    1d26:	8c 01       	movw	r16, r24
    1d28:	c6 01       	movw	r24, r12
    1d2a:	b5 01       	movw	r22, r10
    1d2c:	2d e1       	ldi	r18, 0x1D	; 29
    1d2e:	33 ef       	ldi	r19, 0xF3	; 243
    1d30:	41 e0       	ldi	r20, 0x01	; 1
    1d32:	50 e0       	ldi	r21, 0x00	; 0
    1d34:	4a d0       	rcall	.+148    	; 0x1dca <__divmodsi4>
    1d36:	ca 01       	movw	r24, r20
    1d38:	b9 01       	movw	r22, r18
    1d3a:	2c ee       	ldi	r18, 0xEC	; 236
    1d3c:	34 ef       	ldi	r19, 0xF4	; 244
    1d3e:	4f ef       	ldi	r20, 0xFF	; 255
    1d40:	5f ef       	ldi	r21, 0xFF	; 255
    1d42:	24 d0       	rcall	.+72     	; 0x1d8c <__mulsi3>
    1d44:	6e 0d       	add	r22, r14
    1d46:	7f 1d       	adc	r23, r15
    1d48:	80 1f       	adc	r24, r16
    1d4a:	91 1f       	adc	r25, r17
    1d4c:	97 ff       	sbrs	r25, 7
    1d4e:	04 c0       	rjmp	.+8      	; 0x1d58 <do_rand+0x7a>
    1d50:	61 50       	subi	r22, 0x01	; 1
    1d52:	70 40       	sbci	r23, 0x00	; 0
    1d54:	80 40       	sbci	r24, 0x00	; 0
    1d56:	90 48       	sbci	r25, 0x80	; 128
    1d58:	68 83       	st	Y, r22
    1d5a:	79 83       	std	Y+1, r23	; 0x01
    1d5c:	8a 83       	std	Y+2, r24	; 0x02
    1d5e:	9b 83       	std	Y+3, r25	; 0x03
    1d60:	9b 01       	movw	r18, r22
    1d62:	3f 77       	andi	r19, 0x7F	; 127
    1d64:	c9 01       	movw	r24, r18
    1d66:	cd b7       	in	r28, 0x3d	; 61
    1d68:	de b7       	in	r29, 0x3e	; 62
    1d6a:	ea e0       	ldi	r30, 0x0A	; 10
    1d6c:	a5 cf       	rjmp	.-182    	; 0x1cb8 <__epilogue_restores__+0x10>

00001d6e <rand_r>:
    1d6e:	b7 cf       	rjmp	.-146    	; 0x1cde <do_rand>

00001d70 <rand>:
    1d70:	84 e6       	ldi	r24, 0x64	; 100
    1d72:	91 e0       	ldi	r25, 0x01	; 1
    1d74:	b4 cf       	rjmp	.-152    	; 0x1cde <do_rand>

00001d76 <srand>:
    1d76:	a0 e0       	ldi	r26, 0x00	; 0
    1d78:	b0 e0       	ldi	r27, 0x00	; 0
    1d7a:	80 93 64 01 	sts	0x0164, r24
    1d7e:	90 93 65 01 	sts	0x0165, r25
    1d82:	a0 93 66 01 	sts	0x0166, r26
    1d86:	b0 93 67 01 	sts	0x0167, r27
    1d8a:	08 95       	ret

00001d8c <__mulsi3>:
    1d8c:	62 9f       	mul	r22, r18
    1d8e:	d0 01       	movw	r26, r0
    1d90:	73 9f       	mul	r23, r19
    1d92:	f0 01       	movw	r30, r0
    1d94:	82 9f       	mul	r24, r18
    1d96:	e0 0d       	add	r30, r0
    1d98:	f1 1d       	adc	r31, r1
    1d9a:	64 9f       	mul	r22, r20
    1d9c:	e0 0d       	add	r30, r0
    1d9e:	f1 1d       	adc	r31, r1
    1da0:	92 9f       	mul	r25, r18
    1da2:	f0 0d       	add	r31, r0
    1da4:	83 9f       	mul	r24, r19
    1da6:	f0 0d       	add	r31, r0
    1da8:	74 9f       	mul	r23, r20
    1daa:	f0 0d       	add	r31, r0
    1dac:	65 9f       	mul	r22, r21
    1dae:	f0 0d       	add	r31, r0
    1db0:	99 27       	eor	r25, r25
    1db2:	72 9f       	mul	r23, r18
    1db4:	b0 0d       	add	r27, r0
    1db6:	e1 1d       	adc	r30, r1
    1db8:	f9 1f       	adc	r31, r25
    1dba:	63 9f       	mul	r22, r19
    1dbc:	b0 0d       	add	r27, r0
    1dbe:	e1 1d       	adc	r30, r1
    1dc0:	f9 1f       	adc	r31, r25
    1dc2:	bd 01       	movw	r22, r26
    1dc4:	cf 01       	movw	r24, r30
    1dc6:	11 24       	eor	r1, r1
    1dc8:	08 95       	ret

00001dca <__divmodsi4>:
    1dca:	97 fb       	bst	r25, 7
    1dcc:	09 2e       	mov	r0, r25
    1dce:	05 26       	eor	r0, r21
    1dd0:	0e d0       	rcall	.+28     	; 0x1dee <__divmodsi4_neg1>
    1dd2:	57 fd       	sbrc	r21, 7
    1dd4:	04 d0       	rcall	.+8      	; 0x1dde <__divmodsi4_neg2>
    1dd6:	14 d0       	rcall	.+40     	; 0x1e00 <__udivmodsi4>
    1dd8:	0a d0       	rcall	.+20     	; 0x1dee <__divmodsi4_neg1>
    1dda:	00 1c       	adc	r0, r0
    1ddc:	38 f4       	brcc	.+14     	; 0x1dec <__divmodsi4_exit>

00001dde <__divmodsi4_neg2>:
    1dde:	50 95       	com	r21
    1de0:	40 95       	com	r20
    1de2:	30 95       	com	r19
    1de4:	21 95       	neg	r18
    1de6:	3f 4f       	sbci	r19, 0xFF	; 255
    1de8:	4f 4f       	sbci	r20, 0xFF	; 255
    1dea:	5f 4f       	sbci	r21, 0xFF	; 255

00001dec <__divmodsi4_exit>:
    1dec:	08 95       	ret

00001dee <__divmodsi4_neg1>:
    1dee:	f6 f7       	brtc	.-4      	; 0x1dec <__divmodsi4_exit>
    1df0:	90 95       	com	r25
    1df2:	80 95       	com	r24
    1df4:	70 95       	com	r23
    1df6:	61 95       	neg	r22
    1df8:	7f 4f       	sbci	r23, 0xFF	; 255
    1dfa:	8f 4f       	sbci	r24, 0xFF	; 255
    1dfc:	9f 4f       	sbci	r25, 0xFF	; 255
    1dfe:	08 95       	ret

00001e00 <__udivmodsi4>:
    1e00:	a1 e2       	ldi	r26, 0x21	; 33
    1e02:	1a 2e       	mov	r1, r26
    1e04:	aa 1b       	sub	r26, r26
    1e06:	bb 1b       	sub	r27, r27
    1e08:	fd 01       	movw	r30, r26
    1e0a:	0d c0       	rjmp	.+26     	; 0x1e26 <__udivmodsi4_ep>

00001e0c <__udivmodsi4_loop>:
    1e0c:	aa 1f       	adc	r26, r26
    1e0e:	bb 1f       	adc	r27, r27
    1e10:	ee 1f       	adc	r30, r30
    1e12:	ff 1f       	adc	r31, r31
    1e14:	a2 17       	cp	r26, r18
    1e16:	b3 07       	cpc	r27, r19
    1e18:	e4 07       	cpc	r30, r20
    1e1a:	f5 07       	cpc	r31, r21
    1e1c:	20 f0       	brcs	.+8      	; 0x1e26 <__udivmodsi4_ep>
    1e1e:	a2 1b       	sub	r26, r18
    1e20:	b3 0b       	sbc	r27, r19
    1e22:	e4 0b       	sbc	r30, r20
    1e24:	f5 0b       	sbc	r31, r21

00001e26 <__udivmodsi4_ep>:
    1e26:	66 1f       	adc	r22, r22
    1e28:	77 1f       	adc	r23, r23
    1e2a:	88 1f       	adc	r24, r24
    1e2c:	99 1f       	adc	r25, r25
    1e2e:	1a 94       	dec	r1
    1e30:	69 f7       	brne	.-38     	; 0x1e0c <__udivmodsi4_loop>
    1e32:	60 95       	com	r22
    1e34:	70 95       	com	r23
    1e36:	80 95       	com	r24
    1e38:	90 95       	com	r25
    1e3a:	9b 01       	movw	r18, r22
    1e3c:	ac 01       	movw	r20, r24
    1e3e:	bd 01       	movw	r22, r26
    1e40:	cf 01       	movw	r24, r30
    1e42:	08 95       	ret

00001e44 <_exit>:
    1e44:	f8 94       	cli

00001e46 <__stop_program>:
    1e46:	ff cf       	rjmp	.-2      	; 0x1e46 <__stop_program>
